; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\flash\obj\measurement.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\measurement.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=870 -I..\User -I..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\User\fonts -I..\emWin\GUI_X -I..\emWin\Config -I..\emWin\Include -I..\emWin\emWinTask -I..\User\bsp_stm32f4xx -I..\User\bsp_stm32f4xx\inc -I..\User\images -I..\User\bsp_stm32f4xx\src -I..\User\DSP_Lib\inc -I..\User\DSP_Lib\src -I..\Libraries\STM32F4x7_ETH_Driver\src -I..\Libraries\STM32F4x7_ETH_Driver\inc -IF:\keil\ARM\RV31\INC -IF:\keil\ARM\CMSIS\Include -IF:\keil\ARM\Inc\ST\STM32F4xx -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F427_437xx -DSTM32F427_437xx --omf_browse=.\flash\obj\measurement.crf ..\User\measurement.c]
                          THUMB

                          AREA ||i.AirFirst||, CODE, READONLY, ALIGN=1

                  AirFirst PROC
;;;42     
;;;43     void  AirFirst(void)
000000  b500              PUSH     {lr}
;;;44     {
000002  b08b              SUB      sp,sp,#0x2c
;;;45     //	u8 i;
;;;46     	Valve(171);
000004  20ab              MOVS     r0,#0xab
000006  f7fffffe          BL       Valve
;;;47     	Valve(181);	   //1270-->1500
00000a  20b5              MOVS     r0,#0xb5
00000c  f7fffffe          BL       Valve
;;;48     //	for(i=0;i<2;i++)
;;;49     //	{
;;;50     		Motorun(0,1500,FORWARD,0,  30,60,8,20,  30,2,20,0,     81,150,160);      //抽气
000010  20a0              MOVS     r0,#0xa0
000012  2196              MOVS     r1,#0x96
000014  2251              MOVS     r2,#0x51
000016  2300              MOVS     r3,#0
000018  e9cd3207          STRD     r3,r2,[sp,#0x1c]
00001c  e9cd1009          STRD     r1,r0,[sp,#0x24]
000020  2014              MOVS     r0,#0x14
000022  2102              MOVS     r1,#2
000024  221e              MOVS     r2,#0x1e
000026  e9cd0203          STRD     r0,r2,[sp,#0xc]
00002a  e9cd1005          STRD     r1,r0,[sp,#0x14]
00002e  2008              MOVS     r0,#8
000030  213c              MOVS     r1,#0x3c
000032  e9cd2100          STRD     r2,r1,[sp,#0]
000036  9002              STR      r0,[sp,#8]
000038  461a              MOV      r2,r3
00003a  f24051dc          MOV      r1,#0x5dc
00003e  4618              MOV      r0,r3
000040  f7fffffe          BL       Motorun
;;;51     		Motorun(0,1500,BACKWARD,0, 30,60,8,20,  30,2,20,200,  80,151,170);      //打气,清洗
000044  20aa              MOVS     r0,#0xaa
000046  2197              MOVS     r1,#0x97
000048  2250              MOVS     r2,#0x50
00004a  23c8              MOVS     r3,#0xc8
00004c  e9cd3207          STRD     r3,r2,[sp,#0x1c]
000050  e9cd1009          STRD     r1,r0,[sp,#0x24]
000054  2014              MOVS     r0,#0x14
000056  2102              MOVS     r1,#2
000058  221e              MOVS     r2,#0x1e
00005a  e9cd0203          STRD     r0,r2,[sp,#0xc]
00005e  e9cd1005          STRD     r1,r0,[sp,#0x14]
000062  2008              MOVS     r0,#8
000064  213c              MOVS     r1,#0x3c
000066  2300              MOVS     r3,#0
000068  e9cd2100          STRD     r2,r1,[sp,#0]
00006c  9002              STR      r0,[sp,#8]
00006e  2201              MOVS     r2,#1
000070  f24051dc          MOV      r1,#0x5dc
000074  4618              MOV      r0,r3
000076  f7fffffe          BL       Motorun
;;;52     		bsp_DelayMS(4);
00007a  2004              MOVS     r0,#4
00007c  f7fffffe          BL       bsp_DelayMS
;;;53     //	}
;;;54     	Valve(150);	 //2540-->3000
000080  2096              MOVS     r0,#0x96
000082  f7fffffe          BL       Valve
;;;55     	Motorun(0,3000,FORWARD,0,      30,60,8,20,  30,2,20,0,     81,0,171);      //抽气
000086  20ab              MOVS     r0,#0xab
000088  2100              MOVS     r1,#0
00008a  2251              MOVS     r2,#0x51
00008c  e9cd1207          STRD     r1,r2,[sp,#0x1c]
000090  e9cd1009          STRD     r1,r0,[sp,#0x24]
000094  2014              MOVS     r0,#0x14
000096  2102              MOVS     r1,#2
000098  221e              MOVS     r2,#0x1e
00009a  e9cd0203          STRD     r0,r2,[sp,#0xc]
00009e  e9cd1005          STRD     r1,r0,[sp,#0x14]
0000a2  2008              MOVS     r0,#8
0000a4  213c              MOVS     r1,#0x3c
0000a6  2300              MOVS     r3,#0
0000a8  e9cd2100          STRD     r2,r1,[sp,#0]
0000ac  9002              STR      r0,[sp,#8]
0000ae  461a              MOV      r2,r3
0000b0  f64031b8          MOV      r1,#0xbb8
0000b4  4618              MOV      r0,r3
0000b6  f7fffffe          BL       Motorun
;;;56     	bsp_DelayMS(444);
0000ba  f44f70de          MOV      r0,#0x1bc
0000be  f7fffffe          BL       bsp_DelayMS
;;;57     	Valve(80);	
0000c2  2050              MOVS     r0,#0x50
0000c4  f7fffffe          BL       Valve
;;;58     	Valve(151);
0000c8  2097              MOVS     r0,#0x97
0000ca  f7fffffe          BL       Valve
;;;59     	Valve(170);
0000ce  20aa              MOVS     r0,#0xaa
0000d0  f7fffffe          BL       Valve
;;;60     	Valve(180);
0000d4  20b4              MOVS     r0,#0xb4
0000d6  f7fffffe          BL       Valve
;;;61     	bsp_DelayMS(52);															
0000da  2034              MOVS     r0,#0x34
0000dc  f7fffffe          BL       bsp_DelayMS
;;;62     	Motorun(0,3000,BACKWARD,1,     27,27,0,0,  30,0,0,0,  0,0,0); 
0000e0  2000              MOVS     r0,#0
0000e2  9007              STR      r0,[sp,#0x1c]
0000e4  9008              STR      r0,[sp,#0x20]
0000e6  9009              STR      r0,[sp,#0x24]
0000e8  221e              MOVS     r2,#0x1e
0000ea  900a              STR      r0,[sp,#0x28]
0000ec  e9cd0203          STRD     r0,r2,[sp,#0xc]
0000f0  9005              STR      r0,[sp,#0x14]
0000f2  211b              MOVS     r1,#0x1b
0000f4  9100              STR      r1,[sp,#0]
0000f6  9006              STR      r0,[sp,#0x18]
0000f8  2301              MOVS     r3,#1
0000fa  461a              MOV      r2,r3
0000fc  e9cd1001          STRD     r1,r0,[sp,#4]
000100  f64031b8          MOV      r1,#0xbb8
000104  f7fffffe          BL       Motorun
;;;63     	bsp_DelayMS(75);
000108  204b              MOVS     r0,#0x4b
00010a  f7fffffe          BL       bsp_DelayMS
;;;64     }
00010e  b00b              ADD      sp,sp,#0x2c
000110  bd00              POP      {pc}
;;;65     void MainTask(void)
                          ENDP


                          AREA ||i.MainTask||, CODE, READONLY, ALIGN=2

                  MainTask PROC
;;;64     }
;;;65     void MainTask(void)
000000  e92d43f0          PUSH     {r4-r9,lr}
;;;66     {
000004  b08f              SUB      sp,sp,#0x3c
;;;67     	uint8_t fButton=0;
000006  2500              MOVS     r5,#0
;;;68     	uint8_t ucTouch,j;		/* 触摸事件 */
;;;69     	uint8_t fRefresh;		/* 刷屏请求标志,1表示需要刷新 */
;;;70     	FONT_T  tFontBtn;	/* 定义一个字体结构体变量，用于设置字体参数 */
;;;71     	int16_t tpX, tpY;
;;;72     	BUTTON_T tBtn;
;;;73     	uint16_t fProgess=0,fProgess1=0;
000008  2600              MOVS     r6,#0
00000a  46a9              MOV      r9,r5
;;;74     	char ch[10];
;;;75     //	LCD_ClrScr(CL_BLUE);  	/* 清屏，背景蓝色 */
;;;76     	DispTopBar();		/* 显示顶部栏 */
00000c  f7fffffe          BL       DispTopBar
;;;77     	DispBottomBar();	/* 显示底部栏 */
000010  f7fffffe          BL       DispBottomBar
;;;78     	DispBackground();	/* 显示图标背景 */
000014  f7fffffe          BL       DispBackground
;;;79     	
;;;80     	{	/* 按钮字体 */
;;;81     		tFontBtn.FontCode = FC_ST_48;
000018  2003              MOVS     r0,#3
00001a  f8ad0034          STRH     r0,[sp,#0x34]
;;;82     		tFontBtn.BackColor = CL_MASK;	/* 透明色 */
00001e  f6491099          MOV      r0,#0x9999
000022  f8ad0038          STRH     r0,[sp,#0x38]
;;;83     		tFontBtn.FrontColor = CL_BLACK;
000026  2000              MOVS     r0,#0
000028  f8ad0036          STRH     r0,[sp,#0x36]
;;;84     		tFontBtn.Space = 1;
00002c  2001              MOVS     r0,#1
00002e  f8ad003a          STRH     r0,[sp,#0x3a]
;;;85     	}
;;;86     	fRefresh = 1;	/* 1表示需要刷新LCD */
000032  4680              MOV      r8,r0
;;;87     	LCD_DrawRect(BAR_RET_X,BAR_RET_Y,BAR_RET_H,BAR_RET_W,CL_WHITE);
000034  f64f70ff          MOV      r0,#0xffff
000038  4a88              LDR      r2,|L2.604|
00003a  9000              STR      r0,[sp,#0]
00003c  8812              LDRH     r2,[r2,#0]  ; g_LcdHeight
00003e  f5a27282          SUB      r2,r2,#0x104
000042  b291              UXTH     r1,r2
000044  4a86              LDR      r2,|L2.608|
000046  8812              LDRH     r2,[r2,#0]  ; g_LcdWidth
000048  f2a222ee          SUB      r2,r2,#0x2ee
00004c  b290              UXTH     r0,r2
00004e  f44f73fa          MOV      r3,#0x1f4
000052  223c              MOVS     r2,#0x3c
000054  f7fffffe          BL       LCD_DrawRect
                  |L2.88|
;;;88     //	LCD_Fill_Rect(BAR_RET_X,BAR_RET_Y,BAR_RET_H,BAR_RET_W,CL_GREEN);
;;;89     	while (1)
000058  e0ff              B        |L2.602|
                  |L2.90|
;;;90     	{
;;;91     		bsp_Idle();
00005a  f7fffffe          BL       bsp_Idle
;;;92     		
;;;93     		if(fButton&&fProgess<BAR_RET_W)
00005e  b1dd              CBZ      r5,|L2.152|
000060  f5b67ffa          CMP      r6,#0x1f4
000064  da18              BGE      |L2.152|
;;;94     		{
;;;95     			for(;j<10;j++)
000066  e015              B        |L2.148|
                  |L2.104|
;;;96     			{
;;;97     				fProgess+=55;
000068  f1060037          ADD      r0,r6,#0x37
00006c  b286              UXTH     r6,r0
;;;98     				LCD_Fill_Rect(BAR_RET_X,BAR_RET_Y,BAR_RET_H,fProgess,CL_GREEN);
00006e  f44f60fc          MOV      r0,#0x7e0
000072  4a7a              LDR      r2,|L2.604|
000074  9000              STR      r0,[sp,#0]
000076  8812              LDRH     r2,[r2,#0]  ; g_LcdHeight
000078  f5a27282          SUB      r2,r2,#0x104
00007c  b291              UXTH     r1,r2
00007e  4a78              LDR      r2,|L2.608|
000080  8812              LDRH     r2,[r2,#0]  ; g_LcdWidth
000082  f2a222ee          SUB      r2,r2,#0x2ee
000086  b290              UXTH     r0,r2
000088  4633              MOV      r3,r6
00008a  223c              MOVS     r2,#0x3c
00008c  f7fffffe          BL       LCD_Fill_Rect
000090  1c78              ADDS     r0,r7,#1              ;95
000092  b2c7              UXTB     r7,r0                 ;95
                  |L2.148|
000094  2f0a              CMP      r7,#0xa               ;95
000096  dbe7              BLT      |L2.104|
                  |L2.152|
;;;99     //				AirFirst();
;;;100    			}
;;;101    		}
;;;102    		if (fRefresh)
000098  f1b80f00          CMP      r8,#0
00009c  d022              BEQ      |L2.228|
;;;103    		{
;;;104    			fRefresh = 0;
00009e  f04f0800          MOV      r8,#0
;;;105    
;;;106    			/* 显示按钮 */
;;;107    			{
;;;108    				tBtn.Font = &tFontBtn;
0000a2  a80d              ADD      r0,sp,#0x34
0000a4  9008              STR      r0,[sp,#0x20]
;;;109    
;;;110    				tBtn.Left = BUTTON_RET_X;
0000a6  486e              LDR      r0,|L2.608|
0000a8  8800              LDRH     r0,[r0,#0]  ; g_LcdWidth
0000aa  38c8              SUBS     r0,r0,#0xc8
0000ac  b280              UXTH     r0,r0
0000ae  f8ad0016          STRH     r0,[sp,#0x16]
;;;111    				tBtn.Top = BUTTON_RET_Y;
0000b2  486a              LDR      r0,|L2.604|
0000b4  8800              LDRH     r0,[r0,#0]  ; g_LcdHeight
0000b6  f5a07082          SUB      r0,r0,#0x104
0000ba  b280              UXTH     r0,r0
0000bc  f8ad0018          STRH     r0,[sp,#0x18]
;;;112    				tBtn.Height = BUTTON_RET_H;
0000c0  203c              MOVS     r0,#0x3c
0000c2  f8ad001a          STRH     r0,[sp,#0x1a]
;;;113    				tBtn.Width = BUTTON_RET_W;
0000c6  2096              MOVS     r0,#0x96
0000c8  f8ad001c          STRH     r0,[sp,#0x1c]
;;;114    				tBtn.Focus = 0;	/* 失去焦点 */
0000cc  2000              MOVS     r0,#0
0000ce  f88d0028          STRB     r0,[sp,#0x28]
;;;115    				strcpy(ch,"测量");
0000d2  a164              ADR      r1,|L2.612|
0000d4  a802              ADD      r0,sp,#8
0000d6  f7fffffe          BL       strcpy
;;;116    				tBtn.pCaption = ch;
0000da  a802              ADD      r0,sp,#8
0000dc  9009              STR      r0,[sp,#0x24]
;;;117    				LCD_DrawButton(&tBtn);
0000de  a805              ADD      r0,sp,#0x14
0000e0  f7fffffe          BL       LCD_DrawButton
                  |L2.228|
;;;118    			}
;;;119    		}
;;;120    		ucTouch = TOUCH_GetKey(&tpX, &tpY);	/* 读取触摸事件 */
0000e4  a90b              ADD      r1,sp,#0x2c
0000e6  a80c              ADD      r0,sp,#0x30
0000e8  f7fffffe          BL       TOUCH_GetKey
0000ec  4604              MOV      r4,r0
;;;121    		if (ucTouch != TOUCH_NONE)
0000ee  2c00              CMP      r4,#0
0000f0  d0b2              BEQ      |L2.88|
;;;122    		{
;;;123    			switch (ucTouch)
0000f2  2c01              CMP      r4,#1
0000f4  d002              BEQ      |L2.252|
0000f6  2c03              CMP      r4,#3
0000f8  d146              BNE      |L2.392|
0000fa  e046              B        |L2.394|
                  |L2.252|
;;;124    			{
;;;125    				case TOUCH_DOWN:		/* 触笔按下事件 */
;;;126    					if (TOUCH_InRect(tpX, tpY, BUTTON_RET_X, BUTTON_RET_Y, BUTTON_RET_H, BUTTON_RET_W))
0000fc  2096              MOVS     r0,#0x96
0000fe  213c              MOVS     r1,#0x3c
000100  f8dfc158          LDR      r12,|L2.604|
000104  e9cd1000          STRD     r1,r0,[sp,#0]
000108  f8bcc000          LDRH     r12,[r12,#0]  ; g_LcdHeight
00010c  f5ac7c82          SUB      r12,r12,#0x104
000110  fa1ff38c          UXTH     r3,r12
000114  f8dfc148          LDR      r12,|L2.608|
000118  f8bcc000          LDRH     r12,[r12,#0]  ; g_LcdWidth
00011c  f1ac0cc8          SUB      r12,r12,#0xc8
000120  fa1ff28c          UXTH     r2,r12
000124  f8bdc02c          LDRH     r12,[sp,#0x2c]
000128  fa1ff18c          UXTH     r1,r12
00012c  f8bdc030          LDRH     r12,[sp,#0x30]
000130  fa1ff08c          UXTH     r0,r12
000134  f7fffffe          BL       TOUCH_InRect
000138  b330              CBZ      r0,|L2.392|
;;;127    					{
;;;128    						
;;;129    						tBtn.Font = &tFontBtn;
00013a  a80d              ADD      r0,sp,#0x34
00013c  9008              STR      r0,[sp,#0x20]
;;;130    
;;;131    						tBtn.Left = BUTTON_RET_X;
00013e  4848              LDR      r0,|L2.608|
000140  8800              LDRH     r0,[r0,#0]  ; g_LcdWidth
000142  38c8              SUBS     r0,r0,#0xc8
000144  b280              UXTH     r0,r0
000146  f8ad0016          STRH     r0,[sp,#0x16]
;;;132    						tBtn.Top = BUTTON_RET_Y;
00014a  4844              LDR      r0,|L2.604|
00014c  8800              LDRH     r0,[r0,#0]  ; g_LcdHeight
00014e  f5a07082          SUB      r0,r0,#0x104
000152  b280              UXTH     r0,r0
000154  f8ad0018          STRH     r0,[sp,#0x18]
;;;133    						tBtn.Height = BUTTON_RET_H;
000158  203c              MOVS     r0,#0x3c
00015a  f8ad001a          STRH     r0,[sp,#0x1a]
;;;134    						tBtn.Width = BUTTON_RET_W;
00015e  2096              MOVS     r0,#0x96
000160  f8ad001c          STRH     r0,[sp,#0x1c]
;;;135    						tBtn.Focus = 1;	/* 焦点 */
000164  2001              MOVS     r0,#1
000166  f88d0028          STRB     r0,[sp,#0x28]
;;;136    						if(fButton==0)
00016a  b925              CBNZ     r5,|L2.374|
;;;137    						{
;;;138    							strcpy(ch,"测量");
00016c  a13d              ADR      r1,|L2.612|
00016e  a802              ADD      r0,sp,#8
000170  f7fffffe          BL       strcpy
000174  e003              B        |L2.382|
                  |L2.374|
;;;139    						}
;;;140    						else
;;;141    						{
;;;142    							strcpy(ch,"停止");
000176  a13d              ADR      r1,|L2.620|
000178  a802              ADD      r0,sp,#8
00017a  f7fffffe          BL       strcpy
                  |L2.382|
;;;143    						}
;;;144    						tBtn.pCaption = ch;
00017e  a802              ADD      r0,sp,#8
000180  9009              STR      r0,[sp,#0x24]
;;;145    						LCD_DrawButton(&tBtn);
000182  a805              ADD      r0,sp,#0x14
000184  f7fffffe          BL       LCD_DrawButton
                  |L2.392|
;;;146    							
;;;147    					}
;;;148    					break;
000188  e066              B        |L2.600|
                  |L2.394|
;;;149    
;;;150    				case TOUCH_RELEASE:		/* 触笔释放事件 */
;;;151    					if (TOUCH_InRect(tpX, tpY, BUTTON_RET_X, BUTTON_RET_Y, BUTTON_RET_H, BUTTON_RET_W))
00018a  2096              MOVS     r0,#0x96
00018c  213c              MOVS     r1,#0x3c
00018e  f8dfc0cc          LDR      r12,|L2.604|
000192  e9cd1000          STRD     r1,r0,[sp,#0]
000196  f8bcc000          LDRH     r12,[r12,#0]  ; g_LcdHeight
00019a  f5ac7c82          SUB      r12,r12,#0x104
00019e  fa1ff38c          UXTH     r3,r12
0001a2  f8dfc0bc          LDR      r12,|L2.608|
0001a6  f8bcc000          LDRH     r12,[r12,#0]  ; g_LcdWidth
0001aa  f1ac0cc8          SUB      r12,r12,#0xc8
0001ae  fa1ff28c          UXTH     r2,r12
0001b2  f8bdc02c          LDRH     r12,[sp,#0x2c]
0001b6  fa1ff18c          UXTH     r1,r12
0001ba  f8bdc030          LDRH     r12,[sp,#0x30]
0001be  fa1ff08c          UXTH     r0,r12
0001c2  f7fffffe          BL       TOUCH_InRect
0001c6  b330              CBZ      r0,|L2.534|
;;;152    					{
;;;153    						if(fButton==0)
0001c8  bb15              CBNZ     r5,|L2.528|
;;;154    						{
;;;155    							fButton=1;
0001ca  2501              MOVS     r5,#1
;;;156    							tBtn.Font = &tFontBtn;
0001cc  a80d              ADD      r0,sp,#0x34
0001ce  9008              STR      r0,[sp,#0x20]
;;;157    
;;;158    							tBtn.Left = BUTTON_RET_X;
0001d0  4823              LDR      r0,|L2.608|
0001d2  8800              LDRH     r0,[r0,#0]  ; g_LcdWidth
0001d4  38c8              SUBS     r0,r0,#0xc8
0001d6  b280              UXTH     r0,r0
0001d8  f8ad0016          STRH     r0,[sp,#0x16]
;;;159    							tBtn.Top = BUTTON_RET_Y;
0001dc  481f              LDR      r0,|L2.604|
0001de  8800              LDRH     r0,[r0,#0]  ; g_LcdHeight
0001e0  f5a07082          SUB      r0,r0,#0x104
0001e4  b280              UXTH     r0,r0
0001e6  f8ad0018          STRH     r0,[sp,#0x18]
;;;160    							tBtn.Height = BUTTON_RET_H;
0001ea  203c              MOVS     r0,#0x3c
0001ec  f8ad001a          STRH     r0,[sp,#0x1a]
;;;161    							tBtn.Width = BUTTON_RET_W;
0001f0  2096              MOVS     r0,#0x96
0001f2  f8ad001c          STRH     r0,[sp,#0x1c]
;;;162    							tBtn.Focus = 0;	/* 焦点 */
0001f6  2000              MOVS     r0,#0
0001f8  f88d0028          STRB     r0,[sp,#0x28]
;;;163    							strcpy(ch,"停止");
0001fc  a11b              ADR      r1,|L2.620|
0001fe  a802              ADD      r0,sp,#8
000200  f7fffffe          BL       strcpy
;;;164    							tBtn.pCaption = ch;
000204  a802              ADD      r0,sp,#8
000206  9009              STR      r0,[sp,#0x24]
;;;165    							LCD_DrawButton(&tBtn);
000208  a805              ADD      r0,sp,#0x14
00020a  f7fffffe          BL       LCD_DrawButton
00020e  e023              B        |L2.600|
                  |L2.528|
;;;166    						}
;;;167    						else return;
;;;168    
;;;169    					}
;;;170    					else	/* 按钮失去焦点 */
;;;171    					{
;;;172    						tBtn.Font = &tFontBtn;
;;;173    
;;;174    						tBtn.Left = BUTTON_RET_X;
;;;175    						tBtn.Top = BUTTON_RET_Y;
;;;176    						tBtn.Height = BUTTON_RET_H;
;;;177    						tBtn.Width = BUTTON_RET_W;
;;;178    						tBtn.Focus = 0;	/* 焦点 */
;;;179    						strcpy(ch,"测量");
;;;180    						tBtn.pCaption = ch;
;;;181    						LCD_DrawButton(&tBtn);
;;;182    
;;;183    					}
;;;184    			}
;;;185    		}
;;;186    	}
;;;187    	
;;;188    }
000210  b00f              ADD      sp,sp,#0x3c
000212  e8bd83f0          POP      {r4-r9,pc}
                  |L2.534|
000216  a80d              ADD      r0,sp,#0x34           ;172
000218  9008              STR      r0,[sp,#0x20]         ;172
00021a  4811              LDR      r0,|L2.608|
00021c  8800              LDRH     r0,[r0,#0]            ;174  ; g_LcdWidth
00021e  38c8              SUBS     r0,r0,#0xc8           ;174
000220  b280              UXTH     r0,r0                 ;174
000222  f8ad0016          STRH     r0,[sp,#0x16]         ;174
000226  480d              LDR      r0,|L2.604|
000228  8800              LDRH     r0,[r0,#0]            ;175  ; g_LcdHeight
00022a  f5a07082          SUB      r0,r0,#0x104          ;175
00022e  b280              UXTH     r0,r0                 ;175
000230  f8ad0018          STRH     r0,[sp,#0x18]         ;175
000234  203c              MOVS     r0,#0x3c              ;176
000236  f8ad001a          STRH     r0,[sp,#0x1a]         ;176
00023a  2096              MOVS     r0,#0x96              ;177
00023c  f8ad001c          STRH     r0,[sp,#0x1c]         ;177
000240  2000              MOVS     r0,#0                 ;178
000242  f88d0028          STRB     r0,[sp,#0x28]         ;178
000246  a107              ADR      r1,|L2.612|
000248  a802              ADD      r0,sp,#8              ;179
00024a  f7fffffe          BL       strcpy
00024e  a802              ADD      r0,sp,#8              ;180
000250  9009              STR      r0,[sp,#0x24]         ;180
000252  a805              ADD      r0,sp,#0x14           ;181
000254  f7fffffe          BL       LCD_DrawButton
                  |L2.600|
000258  bf00              NOP                            ;148
                  |L2.602|
00025a  e6fe              B        |L2.90|
;;;189    
                          ENDP

                  |L2.604|
                          DCD      g_LcdHeight
                  |L2.608|
                          DCD      g_LcdWidth
                  |L2.612|
000264  b2e2c1bf          DCB      178,226,193,191,0
000268  00      
000269  00                DCB      0
00026a  00                DCB      0
00026b  00                DCB      0
                  |L2.620|
00026c  cda3d6b9          DCB      205,163,214,185,0
000270  00      
000271  00                DCB      0
000272  00                DCB      0
000273  00                DCB      0

;*** Start embedded assembler ***

#line 1 "..\\User\\measurement.c"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___13_measurement_c_AirFirst____REV16|
#line 129 "F:\\keil\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___13_measurement_c_AirFirst____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___13_measurement_c_AirFirst____REVSH|
#line 144
|__asm___13_measurement_c_AirFirst____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
