; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\flash\obj\stm32f4xx_it.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\stm32f4xx_it.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931,870 -I..\User -I..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\User\fonts -I..\emWin\GUI_X -I..\emWin\Config -I..\emWin\Include -I..\emWin\emWinTask -I..\User\bsp_stm32f4xx -I..\User\bsp_stm32f4xx\inc -I..\User\images -I..\User\bsp_stm32f4xx\src -I..\User\DSP_Lib\inc -I..\User\DSP_Lib\src -I..\Libraries\STM32F4x7_ETH_Driver\src -I..\Libraries\STM32F4x7_ETH_Driver\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F4xx -D__MICROLIB -D__UVISION_VERSION=514 -DUSE_STDPERIPH_DRIVER -DSTM32F427_437xx -DSTM32F427_437xx --omf_browse=.\flash\obj\stm32f4xx_it.crf ..\User\bsp_stm32f4xx\stm32f4xx_it.c]
                          THUMB

                          AREA ||i.BusFault_Handler||, CODE, READONLY, ALIGN=1

                  BusFault_Handler PROC
;;;84     */
;;;85     void BusFault_Handler(void)
000000  bf00              NOP      
                  |L1.2|
;;;86     {
;;;87       /* 当总线异常时进入死循环 */
;;;88       while (1)
000002  e7fe              B        |L1.2|
;;;89       {
;;;90       }
;;;91     }
;;;92     
                          ENDP


                          AREA ||i.DebugMon_Handler||, CODE, READONLY, ALIGN=1

                  DebugMon_Handler PROC
;;;116    */
;;;117    void DebugMon_Handler(void)
000000  4770              BX       lr
;;;118    {
;;;119    }
;;;120    
                          ENDP


                          AREA ||i.EXTI15_10_IRQHandler||, CODE, READONLY, ALIGN=2

                  EXTI15_10_IRQHandler PROC
;;;123    *******************************************************************************/
;;;124    void EXTI15_10_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;125    {
;;;126    if(EXTI_GetITStatus(EXTI_LINE_TripSwitch) != RESET)
000002  2080              MOVS     r0,#0x80
000004  f7fffffe          BL       EXTI_GetITStatus
000008  b310              CBZ      r0,|L3.80|
;;;127    	{
;;;128    		if(cw_status==BACKWARD)
00000a  4812              LDR      r0,|L3.84|
00000c  7800              LDRB     r0,[r0,#0]  ; cw_status
00000e  2801              CMP      r0,#1
000010  d11b              BNE      |L3.74|
;;;129    		{
;;;130    			//补足脉冲数
;;;131    			PulseCount=PulseNum+AddedNum+500;
000012  4811              LDR      r0,|L3.88|
000014  8800              LDRH     r0,[r0,#0]  ; PulseNum
000016  4911              LDR      r1,|L3.92|
000018  8809              LDRH     r1,[r1,#0]  ; AddedNum
00001a  4408              ADD      r0,r0,r1
00001c  f50070fa          ADD      r0,r0,#0x1f4
000020  490f              LDR      r1,|L3.96|
000022  8008              STRH     r0,[r1,#0]
;;;132    			//电机中断和定时器关闭
;;;133    			TIM_ITConfig(TIM2, TIM_IT_Update, DISABLE);
000024  2200              MOVS     r2,#0
000026  2101              MOVS     r1,#1
000028  0788              LSLS     r0,r1,#30
00002a  f7fffffe          BL       TIM_ITConfig
;;;134    			TIM_Cmd(TIM2,DISABLE);
00002e  2100              MOVS     r1,#0
000030  f04f4080          MOV      r0,#0x40000000
000034  f7fffffe          BL       TIM_Cmd
;;;135    			//关闭外部中断					 
;;;136    			EXTI->IMR&=0xFFFFDFFF;
000038  480a              LDR      r0,|L3.100|
00003a  6800              LDR      r0,[r0,#0]
00003c  f4205000          BIC      r0,r0,#0x2000
000040  4908              LDR      r1,|L3.100|
000042  6008              STR      r0,[r1,#0]
;;;137    			TripSwitchStatus=1;
000044  2001              MOVS     r0,#1
000046  4908              LDR      r1,|L3.104|
000048  7008              STRB     r0,[r1,#0]
                  |L3.74|
;;;138    		}
;;;139    		EXTI_ClearITPendingBit(EXTI_LINE_TripSwitch);
00004a  2080              MOVS     r0,#0x80
00004c  f7fffffe          BL       EXTI_ClearITPendingBit
                  |L3.80|
;;;140    	}
;;;141    }
000050  bd10              POP      {r4,pc}
;;;142    
                          ENDP

000052  0000              DCW      0x0000
                  |L3.84|
                          DCD      cw_status
                  |L3.88|
                          DCD      PulseNum
                  |L3.92|
                          DCD      AddedNum
                  |L3.96|
                          DCD      PulseCount
                  |L3.100|
                          DCD      0x40013c00
                  |L3.104|
                          DCD      TripSwitchStatus

                          AREA ||i.HardFault_Handler||, CODE, READONLY, ALIGN=2

                  HardFault_Handler PROC
;;;40     */
;;;41     void HardFault_Handler(void)
000000  a109              ADR      r1,|L4.40|
;;;42     {
;;;43     #if 1
;;;44       const char *pError = ERR_INFO;
;;;45       uint8_t i;
;;;46     
;;;47       for (i = 0; i < sizeof(ERR_INFO); i++)
000002  2000              MOVS     r0,#0
000004  e00b              B        |L4.30|
                  |L4.6|
;;;48       {
;;;49          USART1->DR = pError[i];
000006  5c0a              LDRB     r2,[r1,r0]
000008  4b12              LDR      r3,|L4.84|
00000a  809a              STRH     r2,[r3,#4]
;;;50          /* 等待发送结束 */
;;;51          while ((USART1->SR & USART_FLAG_TC) == (uint16_t)RESET);
00000c  bf00              NOP      
                  |L4.14|
00000e  4a11              LDR      r2,|L4.84|
000010  8812              LDRH     r2,[r2,#0]
000012  f0020240          AND      r2,r2,#0x40
000016  2a00              CMP      r2,#0
000018  d0f9              BEQ      |L4.14|
00001a  1c42              ADDS     r2,r0,#1              ;47
00001c  b2d0              UXTB     r0,r2                 ;47
                  |L4.30|
00001e  282a              CMP      r0,#0x2a              ;47
000020  d3f1              BCC      |L4.6|
;;;52       }
;;;53     #endif
;;;54     
;;;55       /* 当硬件失效异常发生时进入死循环 */
;;;56       while (1)
000022  bf00              NOP      
                  |L4.36|
000024  e7fe              B        |L4.36|
;;;57       {
;;;58       }
;;;59     }
;;;60     
                          ENDP

000026  0000              DCW      0x0000
                  |L4.40|
000028  0d0a456e          DCB      "\r\nEnter HardFault_Handler, System Halt.\r\n",0
00002c  74657220
000030  48617264
000034  4661756c
000038  745f4861
00003c  6e646c65
000040  722c2053
000044  79737465
000048  6d204861
00004c  6c742e0d
000050  0a00    
000052  00                DCB      0
000053  00                DCB      0
                  |L4.84|
                          DCD      0x40011000

                          AREA ||i.MemManage_Handler||, CODE, READONLY, ALIGN=1

                  MemManage_Handler PROC
;;;68     */
;;;69     void MemManage_Handler(void)
000000  bf00              NOP      
                  |L5.2|
;;;70     {
;;;71       /* 当内存管理异常发生时进入死循环 */
;;;72       while (1)
000002  e7fe              B        |L5.2|
;;;73       {
;;;74       }
;;;75     }
;;;76     
                          ENDP


                          AREA ||i.NMI_Handler||, CODE, READONLY, ALIGN=1

                  NMI_Handler PROC
;;;27     */
;;;28     void NMI_Handler(void)
000000  4770              BX       lr
;;;29     {
;;;30     }
;;;31     
                          ENDP


                          AREA ||i.SPI2_IRQHandler||, CODE, READONLY, ALIGN=2

                  SPI2_IRQHandler PROC
;;;166    //AK5351中断
;;;167    void SPI2_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;168    {
;;;169    	u16 temp;
;;;170    	//用于AK5351中断
;;;171    	if (SPI_I2S_GetITStatus(SPI2, SPI_I2S_IT_RXNE) == SET)
000002  2160              MOVS     r1,#0x60
000004  482d              LDR      r0,|L7.188|
000006  f7fffffe          BL       SPI_I2S_GetITStatus
00000a  2801              CMP      r0,#1
00000c  d153              BNE      |L7.182|
;;;172    	{
;;;173    		temp=SPI_I2S_ReceiveData(SPI2);
00000e  482b              LDR      r0,|L7.188|
000010  f7fffffe          BL       SPI_I2S_ReceiveData
000014  4604              MOV      r4,r0
;;;174    		SPI_I2S_ClearITPendingBit(SPI2,SPI_I2S_IT_RXNE);
000016  2160              MOVS     r1,#0x60
000018  4828              LDR      r0,|L7.188|
00001a  f7fffffe          BL       SPI_I2S_ClearITPendingBit
;;;175    		if(LastCh<10)
00001e  4828              LDR      r0,|L7.192|
000020  6800              LDR      r0,[r0,#0]  ; LastCh
000022  280a              CMP      r0,#0xa
000024  da05              BGE      |L7.50|
;;;176    		{			
;;;177    			LastCh++;
000026  4826              LDR      r0,|L7.192|
000028  6800              LDR      r0,[r0,#0]  ; LastCh
00002a  1c40              ADDS     r0,r0,#1
00002c  4924              LDR      r1,|L7.192|
00002e  6008              STR      r0,[r1,#0]  ; LastCh
                  |L7.48|
;;;178    			return;
;;;179    		}
;;;180    		if(RxLeftIdx==0 && RxRightIdx==0 && temp%0x100==0)
;;;181    		{
;;;182    			LastCh=11;
;;;183    		}
;;;184    		else if(LastCh==11)
;;;185    		{ 
;;;186    			//如果为左声道
;;;187    			if(SPI_I2S_GetFlagStatus(SPI2,I2S_FLAG_CHSIDE)==0)
;;;188    			{
;;;189    				AK_Left_Data[RxLeftIdx]=temp;
;;;190    				RxLeftIdx++;
;;;191    			}
;;;192    			//如果为右声道
;;;193    			else
;;;194    			{
;;;195    				AK_Right_Data[RxRightIdx]=temp;
;;;196    				RxRightIdx++;
;;;197    			}
;;;198    			//语音芯片数据计数器
;;;199    			//如果数据采集完毕
;;;200    			if(RxRightIdx>=DataLength*2 && RxLeftIdx>=DataLength*2)
;;;201    			{
;;;202    				//关闭I2S 中断
;;;203    				SPI_I2S_ITConfig(SPI2, SPI_I2S_IT_RXNE, DISABLE);
;;;204    				LastCh=-1;
;;;205    			}
;;;206    		}
;;;207    	}
;;;208    }
000030  bd10              POP      {r4,pc}
                  |L7.50|
000032  4924              LDR      r1,|L7.196|
000034  6809              LDR      r1,[r1,#0]            ;180  ; RxLeftIdx
000036  b969              CBNZ     r1,|L7.84|
000038  4923              LDR      r1,|L7.200|
00003a  6809              LDR      r1,[r1,#0]            ;180  ; RxRightIdx
00003c  b951              CBNZ     r1,|L7.84|
00003e  17e1              ASRS     r1,r4,#31             ;180
000040  eb046111          ADD      r1,r4,r1,LSR #24      ;180
000044  1209              ASRS     r1,r1,#8              ;180
000046  eba42101          SUB      r1,r4,r1,LSL #8       ;180
00004a  b919              CBNZ     r1,|L7.84|
00004c  200b              MOVS     r0,#0xb               ;182
00004e  491c              LDR      r1,|L7.192|
000050  6008              STR      r0,[r1,#0]            ;182  ; LastCh
000052  e030              B        |L7.182|
                  |L7.84|
000054  481a              LDR      r0,|L7.192|
000056  6800              LDR      r0,[r0,#0]            ;184  ; LastCh
000058  280b              CMP      r0,#0xb               ;184
00005a  d12c              BNE      |L7.182|
00005c  2104              MOVS     r1,#4                 ;187
00005e  4817              LDR      r0,|L7.188|
000060  f7fffffe          BL       SPI_I2S_GetFlagStatus
000064  b950              CBNZ     r0,|L7.124|
000066  4819              LDR      r0,|L7.204|
000068  4916              LDR      r1,|L7.196|
00006a  6809              LDR      r1,[r1,#0]            ;189  ; RxLeftIdx
00006c  f8204011          STRH     r4,[r0,r1,LSL #1]     ;189
000070  4814              LDR      r0,|L7.196|
000072  6800              LDR      r0,[r0,#0]            ;190  ; RxLeftIdx
000074  1c40              ADDS     r0,r0,#1              ;190
000076  4913              LDR      r1,|L7.196|
000078  6008              STR      r0,[r1,#0]            ;190  ; RxLeftIdx
00007a  e009              B        |L7.144|
                  |L7.124|
00007c  4814              LDR      r0,|L7.208|
00007e  4912              LDR      r1,|L7.200|
000080  6809              LDR      r1,[r1,#0]            ;195  ; RxRightIdx
000082  f8204011          STRH     r4,[r0,r1,LSL #1]     ;195
000086  4810              LDR      r0,|L7.200|
000088  6800              LDR      r0,[r0,#0]            ;196  ; RxRightIdx
00008a  1c40              ADDS     r0,r0,#1              ;196
00008c  490e              LDR      r1,|L7.200|
00008e  6008              STR      r0,[r1,#0]            ;196  ; RxRightIdx
                  |L7.144|
000090  480d              LDR      r0,|L7.200|
000092  6800              LDR      r0,[r0,#0]            ;200  ; RxRightIdx
000094  f5b05fe1          CMP      r0,#0x1c20            ;200
000098  d30d              BCC      |L7.182|
00009a  480a              LDR      r0,|L7.196|
00009c  6800              LDR      r0,[r0,#0]            ;200  ; RxLeftIdx
00009e  f5b05fe1          CMP      r0,#0x1c20            ;200
0000a2  d308              BCC      |L7.182|
0000a4  2200              MOVS     r2,#0                 ;203
0000a6  2160              MOVS     r1,#0x60              ;203
0000a8  4804              LDR      r0,|L7.188|
0000aa  f7fffffe          BL       SPI_I2S_ITConfig
0000ae  f04f30ff          MOV      r0,#0xffffffff        ;204
0000b2  4903              LDR      r1,|L7.192|
0000b4  6008              STR      r0,[r1,#0]            ;204  ; LastCh
                  |L7.182|
0000b6  bf00              NOP      
0000b8  e7ba              B        |L7.48|
;;;209    u8 waitimes=0;
                          ENDP

0000ba  0000              DCW      0x0000
                  |L7.188|
                          DCD      0x40003800
                  |L7.192|
                          DCD      LastCh
                  |L7.196|
                          DCD      RxLeftIdx
                  |L7.200|
                          DCD      RxRightIdx
                  |L7.204|
                          DCD      AK_Left_Data
                  |L7.208|
                          DCD      AK_Right_Data

                          AREA ||i.TIM5_IRQHandler||, CODE, READONLY, ALIGN=2

                  TIM5_IRQHandler PROC
;;;146    //切光片电机使用TIM1中断
;;;147    void TIM5_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;148    {
;;;149    	if(Step_LM<9000)	//加速过程
000002  4818              LDR      r0,|L8.100|
000004  6800              LDR      r0,[r0,#0]  ; Step_LM
000006  f2423128          MOV      r1,#0x2328
00000a  4288              CMP      r0,r1
00000c  d216              BCS      |L8.60|
;;;150    	{
;;;151    		//清除中断标志
;;;152    		TIM_ClearITPendingBit(TIM5, TIM_IT_Update);
00000e  2101              MOVS     r1,#1
000010  4815              LDR      r0,|L8.104|
000012  f7fffffe          BL       TIM_ClearITPendingBit
;;;153    		TIM5->ARR=(Speedup[(u8)((Step_LM++)/45)]<<1)-1;
000016  4913              LDR      r1,|L8.100|
000018  6808              LDR      r0,[r1,#0]  ; Step_LM
00001a  1c41              ADDS     r1,r0,#1
00001c  4a11              LDR      r2,|L8.100|
00001e  6011              STR      r1,[r2,#0]  ; Step_LM
000020  212d              MOVS     r1,#0x2d
000022  fbb0f1f1          UDIV     r1,r0,r1
000026  b2c9              UXTB     r1,r1
000028  4a10              LDR      r2,|L8.108|
00002a  f8521021          LDR      r1,[r2,r1,LSL #2]
00002e  2201              MOVS     r2,#1
000030  ebc20141          RSB      r1,r2,r1,LSL #1
000034  4a0c              LDR      r2,|L8.104|
000036  322c              ADDS     r2,r2,#0x2c
000038  6011              STR      r1,[r2,#0]
00003a  e011              B        |L8.96|
                  |L8.60|
;;;154    	}
;;;155    	else
;;;156    	{					
;;;157    		//转速达到启动PWM
;;;158    		TIM_ITConfig(TIM5, TIM_IT_Update, DISABLE);
00003c  2200              MOVS     r2,#0
00003e  2101              MOVS     r1,#1
000040  4809              LDR      r0,|L8.104|
000042  f7fffffe          BL       TIM_ITConfig
;;;159    		TIM5->ARR=4500;
000046  f2411094          MOV      r0,#0x1194
00004a  4907              LDR      r1,|L8.104|
00004c  312c              ADDS     r1,r1,#0x2c
00004e  6008              STR      r0,[r1,#0]
;;;160    		TIM5->CCER=0x000B;
000050  200b              MOVS     r0,#0xb
000052  4905              LDR      r1,|L8.104|
000054  3120              ADDS     r1,r1,#0x20
000056  8008              STRH     r0,[r1,#0]
;;;161    		TIM5->CNT=0x08B3;
000058  f64000b3          MOV      r0,#0x8b3
00005c  1d09              ADDS     r1,r1,#4
00005e  6008              STR      r0,[r1,#0]
                  |L8.96|
;;;162    	}	 	
;;;163    }
000060  bd10              POP      {r4,pc}
;;;164    
                          ENDP

000062  0000              DCW      0x0000
                  |L8.100|
                          DCD      Step_LM
                  |L8.104|
                          DCD      0x40000c00
                  |L8.108|
                          DCD      Speedup

                          AREA ||i.UsageFault_Handler||, CODE, READONLY, ALIGN=1

                  UsageFault_Handler PROC
;;;100    */
;;;101    void UsageFault_Handler(void)
000000  bf00              NOP      
                  |L9.2|
;;;102    {
;;;103      /* 当用法异常时进入死循环 */
;;;104      while (1)
000002  e7fe              B        |L9.2|
;;;105      {
;;;106      }
;;;107    }
;;;108    
                          ENDP


                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  Speedup_moto
                          DCD      0x00000800
                          DCD      0x000007f1
                          DCD      0x000007e9
                          DCD      0x000007e1
                          DCD      0x000007d7
                          DCD      0x000007cc
                          DCD      0x000007bf
                          DCD      0x000007b2
                          DCD      0x000007a4
                          DCD      0x00000794
                          DCD      0x00000784
                          DCD      0x00000773
                          DCD      0x00000761
                          DCD      0x0000074e
                          DCD      0x0000073b
                          DCD      0x00000728
                          DCD      0x00000713
                          DCD      0x000006ff
                          DCD      0x000006ea
                          DCD      0x000006d5
                          DCD      0x000006c0
                          DCD      0x000006aa
                          DCD      0x00000695
                          DCD      0x0000067f
                          DCD      0x0000066a
                          DCD      0x00000654
                          DCD      0x0000063f
                          DCD      0x00000629
                          DCD      0x00000614
                          DCD      0x000005ff
                          DCD      0x000005ea
                          DCD      0x000005d5
                          DCD      0x000005c0
                          DCD      0x000005ac
                          DCD      0x00000598
                          DCD      0x00000584
                          DCD      0x00000570
                          DCD      0x0000055d
                          DCD      0x0000054a
                          DCD      0x00000537
                          DCD      0x00000524
                          DCD      0x00000512
                          DCD      0x00000500
                          DCD      0x000004ee
                          DCD      0x000004dd
                          DCD      0x000004cb
                          DCD      0x000004ba
                          DCD      0x000004aa
                          DCD      0x00000499
                          DCD      0x00000489
                          DCD      0x00000479
                          DCD      0x00000469
                          DCD      0x0000045a
                          DCD      0x0000044b
                          DCD      0x0000043c
                          DCD      0x0000042d
                          DCD      0x0000041e
                          DCD      0x00000410
                          DCD      0x00000402
                          DCD      0x000003f4
                          DCD      0x000003e6
                          DCD      0x000003d9
                          DCD      0x000003cb
                          DCD      0x000003be
                          DCD      0x000003b1
                          DCD      0x000003a5
                          DCD      0x00000398
                          DCD      0x0000038b
                          DCD      0x0000037f
                          DCD      0x00000373
                          DCD      0x00000367
                          DCD      0x0000035b
                          DCD      0x0000034f
                          DCD      0x00000343
                          DCD      0x00000337
                          DCD      0x0000032c
                          DCD      0x00000320
                          DCD      0x00000315
                          DCD      0x00000309
                          DCD      0x000002fe
                          DCD      0x000002f3
                          DCD      0x000002e7
                          DCD      0x000002dc
                          DCD      0x000002d0
                          DCD      0x000002c5
                          DCD      0x000002b9
                          DCD      0x000002af
                          DCD      0x000002a5
                          DCD      0x0000029c
                          DCD      0x00000295
                          DCD      0x0000028e
                          DCD      0x00000289
                          DCD      0x00000284
                          DCD      0x0000027f
                          DCD      0x0000027a
                          DCD      0x00000276
                          DCD      0x00000273
                          DCD      0x0000026f
                          DCD      0x0000026c
                          DCD      0x00000269
                          DCD      0x00000266
                          DCD      0x00000263
                          DCD      0x00000260
                          DCD      0x0000025e
                          DCD      0x0000025b
                          DCD      0x00000259
                          DCD      0x00000257
                          DCD      0x00000255
                          DCD      0x00000253
                          DCD      0x00000251
                          DCD      0x0000024f
                          DCD      0x0000024d
                          DCD      0x0000024c
                          DCD      0x0000024a
                          DCD      0x00000249
                          DCD      0x00000247
                          DCD      0x00000246
                          DCD      0x00000244
                          DCD      0x00000243
                          DCD      0x00000242
                          DCD      0x00000241
                          DCD      0x0000023f
                          DCD      0x0000023e
                          DCD      0x0000023d
                          DCD      0x0000023c
                          DCD      0x0000023b
                          DCD      0x0000023a
                          DCD      0x00000239
                          DCD      0x00000239
                          DCD      0x00000238
                          DCD      0x00000237
                          DCD      0x00000236
                          DCD      0x00000235
                          DCD      0x00000235
                          DCD      0x00000234
                          DCD      0x00000233
                          DCD      0x00000233
                          DCD      0x00000232
                          DCD      0x00000232
                          DCD      0x00000231
                          DCD      0x00000231
                          DCD      0x00000230
                          DCD      0x00000230
                          DCD      0x0000022f
                          DCD      0x0000022f
                          DCD      0x0000022e
                          DCD      0x0000022e
                          DCD      0x0000022e
                          DCD      0x0000022d
                          DCD      0x0000022d
                          DCD      0x0000022d
                          DCD      0x0000022d
                          DCD      0x0000022c
                          DCD      0x0000022c
                          DCD      0x0000022c
                          DCD      0x0000022c
                          DCD      0x0000022c
                          DCD      0x0000022c
                          DCD      0x0000022c
                          DCD      0x0000022c
                          DCD      0x0000022c
                          DCD      0x0000022c
                  moto_ac
                          DCD      0x00000800
                          DCD      0x000007ff
                          DCD      0x000007ff
                          DCD      0x000007fe
                          DCD      0x000007fd
                          DCD      0x000007fc
                          DCD      0x000007fa
                          DCD      0x000007f8
                          DCD      0x000007f6
                          DCD      0x000007f3
                          DCD      0x000007f0
                          DCD      0x000007ed
                          DCD      0x000007ea
                          DCD      0x000007e6
                          DCD      0x000007e2
                          DCD      0x000007de
                          DCD      0x000007da
                          DCD      0x000007d5
                          DCD      0x000007d0
                          DCD      0x000007cb
                          DCD      0x000007c6
                          DCD      0x000007c0
                          DCD      0x000007ba
                          DCD      0x000007b4
                          DCD      0x000007ae
                          DCD      0x000007a7
                          DCD      0x000007a0
                          DCD      0x0000079a
                          DCD      0x00000793
                          DCD      0x0000078b
                          DCD      0x00000784
                          DCD      0x0000077c
                          DCD      0x00000775
                          DCD      0x0000076d
                          DCD      0x00000765
                          DCD      0x0000075d
                          DCD      0x00000755
                          DCD      0x0000074c
                          DCD      0x00000744
                          DCD      0x0000073c
                          DCD      0x00000733
                          DCD      0x0000072a
                          DCD      0x00000721
                          DCD      0x00000719
                          DCD      0x00000710
                          DCD      0x00000707
                          DCD      0x000006fe
                          DCD      0x000006f5
                          DCD      0x000006ec
                          DCD      0x000006e3
                          DCD      0x000006d9
                          DCD      0x000006d0
                          DCD      0x000006c7
                          DCD      0x000006be
                          DCD      0x000006b4
                          DCD      0x000006ab
                          DCD      0x000006a2
                          DCD      0x00000699
                          DCD      0x0000068f
                          DCD      0x00000686
                          DCD      0x0000067d
                          DCD      0x00000674
                          DCD      0x0000066b
                          DCD      0x00000661
                          DCD      0x00000658
                          DCD      0x0000064f
                          DCD      0x00000646
                          DCD      0x0000063d
                          DCD      0x00000634
                          DCD      0x0000062b
                          DCD      0x00000622
                          DCD      0x00000619
                          DCD      0x00000610
                          DCD      0x00000607
                          DCD      0x000005ff
                          DCD      0x000005f6
                          DCD      0x000005ed
                          DCD      0x000005e4
                          DCD      0x000005dc
                          DCD      0x000005d3
                          DCD      0x000005cb
                          DCD      0x000005c2
                          DCD      0x000005ba
                          DCD      0x000005b2
                          DCD      0x000005a9
                          DCD      0x000005a1
                          DCD      0x00000599
                          DCD      0x00000591
                          DCD      0x00000589
                          DCD      0x00000581
                          DCD      0x00000579
                          DCD      0x00000571
                          DCD      0x00000569
                          DCD      0x00000561
                          DCD      0x0000055a
                          DCD      0x00000552
                          DCD      0x0000054b
                          DCD      0x00000543
                          DCD      0x0000053c
                          DCD      0x00000534
                          DCD      0x0000052d
                          DCD      0x00000526
                          DCD      0x0000051e
                          DCD      0x00000517
                          DCD      0x00000510
                          DCD      0x00000509
                          DCD      0x00000502
                          DCD      0x000004fb
                          DCD      0x000004f4
                          DCD      0x000004ee
                          DCD      0x000004ea
                          DCD      0x000004e4
                          DCD      0x000004de
                          DCD      0x000004d8
                          DCD      0x000004d3
                          DCD      0x000004cd
                          DCD      0x000004c8
                          DCD      0x000004c4
                          DCD      0x000004bf
                          DCD      0x000004bb
                          DCD      0x000004b7
                          DCD      0x000004b3
                          DCD      0x000004af
                          DCD      0x000004ab
                          DCD      0x000004a8
                          DCD      0x000004a5
                          DCD      0x000004a2
                          DCD      0x0000049f
                          DCD      0x0000049c
                          DCD      0x0000049a
                          DCD      0x00000498
                          DCD      0x00000495
                          DCD      0x00000493
                          DCD      0x00000491
                          DCD      0x00000490
                          DCD      0x0000048e
                          DCD      0x0000048d
                          DCD      0x0000048b
                          DCD      0x0000048a
                          DCD      0x00000489
                          DCD      0x00000488
                          DCD      0x00000487
                          DCD      0x00000487
                          DCD      0x00000486
                          DCD      0x00000486
                          DCD      0x00000486
                          DCD      0x00000485

                          AREA ||.data||, DATA, ALIGN=2

                  LastCh
                          DCD      0xffffffff
                  waitimes
000004  00                DCB      0x00

;*** Start embedded assembler ***

#line 1 "..\\User\\bsp_stm32f4xx\\stm32f4xx_it.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___14_stm32f4xx_it_c_a8217051____REV16|
#line 129 "C:\\Keil_v5\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___14_stm32f4xx_it_c_a8217051____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___14_stm32f4xx_it_c_a8217051____REVSH|
#line 144
|__asm___14_stm32f4xx_it_c_a8217051____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
