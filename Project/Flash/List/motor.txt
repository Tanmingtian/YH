; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\flash\obj\motor.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\motor.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931,870 -I..\User -I..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\User\fonts -I..\emWin\GUI_X -I..\emWin\Config -I..\emWin\Include -I..\emWin\emWinTask -I..\User\bsp_stm32f4xx -I..\User\bsp_stm32f4xx\inc -I..\User\images -I..\User\bsp_stm32f4xx\src -I..\User\DSP_Lib\inc -I..\User\DSP_Lib\src -I..\Libraries\STM32F4x7_ETH_Driver\src -I..\Libraries\STM32F4x7_ETH_Driver\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F4xx -D__MICROLIB -D__UVISION_VERSION=514 -DUSE_STDPERIPH_DRIVER -DSTM32F427_437xx -DSTM32F427_437xx --omf_browse=.\flash\obj\motor.crf ..\User\motor.c]
                          THUMB

                          AREA ||i.ADC_1||, CODE, READONLY, ALIGN=2

                  ADC_1 PROC
;;;184    
;;;185    unsigned int ADC_1(unsigned char ch)
000000  b570              PUSH     {r4-r6,lr}
;;;186    {
000002  b08e              SUB      sp,sp,#0x38
000004  4605              MOV      r5,r0
;;;187    	u32 res=0;
000006  2600              MOVS     r6,#0
;;;188    	u8 i=0;
000008  2400              MOVS     r4,#0
;;;189    	u16  ADCConvPress[ADCNUM];
;;;190    	ADC_RegularChannelConfig(ADC1, ch, 1, ADC_SampleTime_480Cycles);
00000a  2307              MOVS     r3,#7
00000c  2201              MOVS     r2,#1
00000e  4629              MOV      r1,r5
000010  4812              LDR      r0,|L1.92|
000012  f7fffffe          BL       ADC_RegularChannelConfig
;;;191    	// Start ADC1 Software Conversion 
;;;192    	ADC_Cmd(ADC1, ENABLE);
000016  2101              MOVS     r1,#1
000018  4810              LDR      r0,|L1.92|
00001a  f7fffffe          BL       ADC_Cmd
;;;193      ADC_SoftwareStartConv(ADC1);
00001e  480f              LDR      r0,|L1.92|
000020  f7fffffe          BL       ADC_SoftwareStartConv
;;;194    	for(i=0;i<ADCNUM;i++)
000024  bf00              NOP      
000026  e00e              B        |L1.70|
                  |L1.40|
;;;195    	{
;;;196    		while(!ADC_GetFlagStatus(ADC1, ADC_FLAG_EOC));
000028  bf00              NOP      
                  |L1.42|
00002a  2102              MOVS     r1,#2
00002c  480b              LDR      r0,|L1.92|
00002e  f7fffffe          BL       ADC_GetFlagStatus
000032  2800              CMP      r0,#0
000034  d0f9              BEQ      |L1.42|
;;;197    		ADCConvPress[i]=ADC_GetConversionValue(ADC1);
000036  4809              LDR      r0,|L1.92|
000038  f7fffffe          BL       ADC_GetConversionValue
00003c  a901              ADD      r1,sp,#4
00003e  f8210014          STRH     r0,[r1,r4,LSL #1]
000042  1c60              ADDS     r0,r4,#1              ;194
000044  b2c4              UXTB     r4,r0                 ;194
                  |L1.70|
000046  2c19              CMP      r4,#0x19              ;194
000048  dbee              BLT      |L1.40|
;;;198    	}
;;;199    	res	= weedavg(ADCConvPress,5);
00004a  2105              MOVS     r1,#5
00004c  a801              ADD      r0,sp,#4
00004e  f7fffffe          BL       weedavg
000052  4606              MOV      r6,r0
;;;200    	return res;		
000054  4630              MOV      r0,r6
;;;201    }
000056  b00e              ADD      sp,sp,#0x38
000058  bd70              POP      {r4-r6,pc}
;;;202    void AK_Conv(void)	  
                          ENDP

00005a  0000              DCW      0x0000
                  |L1.92|
                          DCD      0x40012000

                          AREA ||i.ADC_Config||, CODE, READONLY, ALIGN=2

                  ADC_Config PROC
;;;481    
;;;482    void ADC_Config(void)
000000  b500              PUSH     {lr}
;;;483    {
000002  b08d              SUB      sp,sp,#0x34
;;;484    		ADC_InitTypeDef       ADC_InitStructure;
;;;485    	ADC_CommonInitTypeDef ADC_CommonInitStructure;
;;;486    //	DMA_InitTypeDef       DMA_InitStructure;
;;;487    	GPIO_InitTypeDef      GPIO_InitStructure;
;;;488    	
;;;489    	/* Ê¹ÄÜÍâÉèÊ±ÖÓ */
;;;490    	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_DMA2 | RCC_AHB1Periph_GPIOB | RCC_AHB1Periph_GPIOC, ENABLE);
000004  2101              MOVS     r1,#1
000006  4843              LDR      r0,|L2.276|
000008  f7fffffe          BL       RCC_AHB1PeriphClockCmd
;;;491    	RCC_APB2PeriphClockCmd(RCC_APB2Periph_ADC1, ENABLE);
00000c  2101              MOVS     r1,#1
00000e  0208              LSLS     r0,r1,#8
000010  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;492        
;;;493      GPIO_InitStructure.GPIO_Pin = GPIO_Pin_1;
000014  2002              MOVS     r0,#2
000016  9001              STR      r0,[sp,#4]
;;;494    	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AN;
000018  2003              MOVS     r0,#3
00001a  f88d0008          STRB     r0,[sp,#8]
;;;495    	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL ;
00001e  2000              MOVS     r0,#0
000020  f88d000b          STRB     r0,[sp,#0xb]
;;;496    	GPIO_Init(GPIOA, &GPIO_InitStructure);
000024  a901              ADD      r1,sp,#4
000026  483c              LDR      r0,|L2.280|
000028  f7fffffe          BL       GPIO_Init
;;;497    	
;;;498      GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0;
00002c  2001              MOVS     r0,#1
00002e  9001              STR      r0,[sp,#4]
;;;499    	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AN;
000030  2003              MOVS     r0,#3
000032  f88d0008          STRB     r0,[sp,#8]
;;;500    	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL ;
000036  2000              MOVS     r0,#0
000038  f88d000b          STRB     r0,[sp,#0xb]
;;;501    	GPIO_Init(GPIOB, &GPIO_InitStructure);
00003c  a901              ADD      r1,sp,#4
00003e  4837              LDR      r0,|L2.284|
000040  f7fffffe          BL       GPIO_Init
;;;502        
;;;503      GPIO_InitStructure.GPIO_Pin = GPIO_Pin_1;
000044  2002              MOVS     r0,#2
000046  9001              STR      r0,[sp,#4]
;;;504    	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AN;
000048  2003              MOVS     r0,#3
00004a  f88d0008          STRB     r0,[sp,#8]
;;;505    	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL ;
00004e  2000              MOVS     r0,#0
000050  f88d000b          STRB     r0,[sp,#0xb]
;;;506    	GPIO_Init(GPIOB, &GPIO_InitStructure);
000054  a901              ADD      r1,sp,#4
000056  4831              LDR      r0,|L2.284|
000058  f7fffffe          BL       GPIO_Init
;;;507    	
;;;508    	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_4;
00005c  2010              MOVS     r0,#0x10
00005e  9001              STR      r0,[sp,#4]
;;;509    	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AN;
000060  2003              MOVS     r0,#3
000062  f88d0008          STRB     r0,[sp,#8]
;;;510    	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL ;
000066  2000              MOVS     r0,#0
000068  f88d000b          STRB     r0,[sp,#0xb]
;;;511    	GPIO_Init(GPIOC, &GPIO_InitStructure);
00006c  a901              ADD      r1,sp,#4
00006e  482c              LDR      r0,|L2.288|
000070  f7fffffe          BL       GPIO_Init
;;;512        
;;;513      GPIO_InitStructure.GPIO_Pin = GPIO_Pin_5;
000074  2020              MOVS     r0,#0x20
000076  9001              STR      r0,[sp,#4]
;;;514    	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AN;
000078  2003              MOVS     r0,#3
00007a  f88d0008          STRB     r0,[sp,#8]
;;;515    	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL ;
00007e  2000              MOVS     r0,#0
000080  f88d000b          STRB     r0,[sp,#0xb]
;;;516    	GPIO_Init(GPIOC, &GPIO_InitStructure);
000084  a901              ADD      r1,sp,#4
000086  4826              LDR      r0,|L2.288|
000088  f7fffffe          BL       GPIO_Init
;;;517    
;;;518    	/* DMA2 Stream0 channel0 ÅäÖÃ-------------------------------------------------- */
;;;519    //	DMA_InitStructure.DMA_Channel = DMA_Channel_0;  
;;;520    //	DMA_InitStructure.DMA_PeripheralBaseAddr = (uint32_t)ADC1_DR_ADDRESS;
;;;521    //	DMA_InitStructure.DMA_Memory0BaseAddr = (uint32_t)&uhADCConvertedValue;;
;;;522    //	DMA_InitStructure.DMA_DIR = DMA_DIR_PeripheralToMemory;
;;;523    //	DMA_InitStructure.DMA_BufferSize = 4;
;;;524    //	DMA_InitStructure.DMA_PeripheralInc = DMA_PeripheralInc_Disable;
;;;525    //	DMA_InitStructure.DMA_MemoryInc = DMA_MemoryInc_Enable;
;;;526    //    
;;;527    //  DMA_InitStructure.DMA_PeripheralDataSize = DMA_PeripheralDataSize_HalfWord;
;;;528    //  DMA_InitStructure.DMA_MemoryDataSize = DMA_MemoryDataSize_HalfWord;
;;;529    //    
;;;530    //	DMA_InitStructure.DMA_Mode = DMA_Mode_Circular;
;;;531    //	DMA_InitStructure.DMA_Priority = DMA_Priority_High;
;;;532    //	DMA_InitStructure.DMA_FIFOMode = DMA_FIFOMode_Disable;         
;;;533    //	DMA_InitStructure.DMA_FIFOThreshold = DMA_FIFOThreshold_HalfFull;
;;;534    //	DMA_InitStructure.DMA_MemoryBurst = DMA_MemoryBurst_Single;
;;;535    //	DMA_InitStructure.DMA_PeripheralBurst = DMA_PeripheralBurst_Single;
;;;536    //	DMA_Init(DMA2_Stream0, &DMA_InitStructure);
;;;537    
;;;538    //	/* DMA2_Stream0 enable */
;;;539    //	DMA_Cmd(DMA2_Stream0, ENABLE);
;;;540    //    
;;;541        /****************************************************************************   
;;;542    	  PCLK2 = HCLK / 2 
;;;543    	  ÏÂÃæÑ¡ÔñµÄÊÇ2·ÖÆµ
;;;544    	  ADCCLK = PCLK2 /8 = HCLK / 8 = 168 / 8 = 21M
;;;545          ADC²ÉÑùÆµÂÊ£º Sampling Time + Conversion Time = 480 + 12 cycles = 492cyc
;;;546                        Conversion Time = 21MHz / 492cyc = 42.6ksps. 
;;;547    	*****************************************************************************/
;;;548        ADC_DeInit();
00008c  f7fffffe          BL       ADC_DeInit
;;;549    	/* ADC Common ÅäÖÃ ----------------------------------------------------------*/
;;;550        ADC_CommonInitStructure.ADC_Mode = ADC_Mode_Independent;
000090  2000              MOVS     r0,#0
000092  9003              STR      r0,[sp,#0xc]
;;;551        ADC_CommonInitStructure.ADC_Prescaler = ADC_Prescaler_Div4;
000094  f44f3080          MOV      r0,#0x10000
000098  9004              STR      r0,[sp,#0x10]
;;;552        ADC_CommonInitStructure.ADC_DMAAccessMode = ADC_DMAAccessMode_Disabled;
00009a  2000              MOVS     r0,#0
00009c  9005              STR      r0,[sp,#0x14]
;;;553        ADC_CommonInitStructure.ADC_TwoSamplingDelay = ADC_TwoSamplingDelay_5Cycles;
00009e  9006              STR      r0,[sp,#0x18]
;;;554        ADC_CommonInit(&ADC_CommonInitStructure);
0000a0  a803              ADD      r0,sp,#0xc
0000a2  f7fffffe          BL       ADC_CommonInit
;;;555    
;;;556    	/* ADC1 regular channel 12 configuration ************************************/
;;;557    	 ADC_InitStructure.ADC_Resolution = ADC_Resolution_12b;
0000a6  2000              MOVS     r0,#0
0000a8  9007              STR      r0,[sp,#0x1c]
;;;558      ADC_InitStructure.ADC_ScanConvMode = DISABLE;
0000aa  f88d0020          STRB     r0,[sp,#0x20]
;;;559      ADC_InitStructure.ADC_ContinuousConvMode = DISABLE;
0000ae  f88d0021          STRB     r0,[sp,#0x21]
;;;560      ADC_InitStructure.ADC_ExternalTrigConvEdge = ADC_ExternalTrigConvEdge_None;
0000b2  9009              STR      r0,[sp,#0x24]
;;;561      ADC_InitStructure.ADC_DataAlign = ADC_DataAlign_Right;
0000b4  900b              STR      r0,[sp,#0x2c]
;;;562      ADC_InitStructure.ADC_NbrOfConversion = 1;
0000b6  2001              MOVS     r0,#1
0000b8  f88d0030          STRB     r0,[sp,#0x30]
;;;563      ADC_Init(ADC1, &ADC_InitStructure);        
0000bc  a907              ADD      r1,sp,#0x1c
0000be  4819              LDR      r0,|L2.292|
0000c0  f7fffffe          BL       ADC_Init
;;;564    //	ADC_ITConfig(ADC1, ADC_IT_EOC, ENABLE);
;;;565        
;;;566         /* Enable ADC1 DMA */
;;;567    //    ADC_DMACmd(ADC1, ENABLE);
;;;568    		ADC_RegularChannelConfig(ADC1, ADC_Channel_1, 5, ADC_SampleTime_480Cycles);
0000c4  2307              MOVS     r3,#7
0000c6  2205              MOVS     r2,#5
0000c8  2101              MOVS     r1,#1
0000ca  4816              LDR      r0,|L2.292|
0000cc  f7fffffe          BL       ADC_RegularChannelConfig
;;;569        /* ADC1 regular channel18 (VBAT) configuration ******************************/
;;;570        ADC_RegularChannelConfig(ADC1, ADC_Channel_8, 1, ADC_SampleTime_480Cycles);
0000d0  2307              MOVS     r3,#7
0000d2  2201              MOVS     r2,#1
0000d4  2108              MOVS     r1,#8
0000d6  4813              LDR      r0,|L2.292|
0000d8  f7fffffe          BL       ADC_RegularChannelConfig
;;;571        /* ADC1 regular channel18 (VBAT) configuration *****************************/
;;;572        ADC_RegularChannelConfig(ADC1, ADC_Channel_9, 2, ADC_SampleTime_480Cycles);
0000dc  2307              MOVS     r3,#7
0000de  2202              MOVS     r2,#2
0000e0  2109              MOVS     r1,#9
0000e2  4810              LDR      r0,|L2.292|
0000e4  f7fffffe          BL       ADC_RegularChannelConfig
;;;573        
;;;574        /* ADC1 regular channels 10, 11 configuration */ 
;;;575        ADC_RegularChannelConfig(ADC1, ADC_Channel_14, 3, ADC_SampleTime_480Cycles);
0000e8  2307              MOVS     r3,#7
0000ea  2203              MOVS     r2,#3
0000ec  210e              MOVS     r1,#0xe
0000ee  480d              LDR      r0,|L2.292|
0000f0  f7fffffe          BL       ADC_RegularChannelConfig
;;;576        ADC_RegularChannelConfig(ADC1, ADC_Channel_15, 4, ADC_SampleTime_480Cycles);   
0000f4  2307              MOVS     r3,#7
0000f6  2204              MOVS     r2,#4
0000f8  210f              MOVS     r1,#0xf
0000fa  480a              LDR      r0,|L2.292|
0000fc  f7fffffe          BL       ADC_RegularChannelConfig
;;;577    
;;;578        /* Enable VBAT channel */
;;;579    //    ADC_VBATCmd(ENABLE); 
;;;580    //    
;;;581    //    ADC_TempSensorVrefintCmd(ENABLE); 
;;;582    
;;;583    //    /* Enable DMA request after last transfer (Single-ADC mode) */
;;;584    //    ADC_DMARequestAfterLastTransferCmd(ADC1, ENABLE);
;;;585    
;;;586    //    /* Enable ADC1 **************************************************************/
;;;587        ADC_Cmd(ADC1, ENABLE);
000100  2101              MOVS     r1,#1
000102  4808              LDR      r0,|L2.292|
000104  f7fffffe          BL       ADC_Cmd
;;;588        
;;;589            /* Start ADC1 Software Conversion */
;;;590        ADC_SoftwareStartConv(ADC1);
000108  4806              LDR      r0,|L2.292|
00010a  f7fffffe          BL       ADC_SoftwareStartConv
;;;591    }
00010e  b00d              ADD      sp,sp,#0x34
000110  bd00              POP      {pc}
;;;592    
                          ENDP

000112  0000              DCW      0x0000
                  |L2.276|
                          DCD      0x00400006
                  |L2.280|
                          DCD      0x40020000
                  |L2.284|
                          DCD      0x40020400
                  |L2.288|
                          DCD      0x40020800
                  |L2.292|
                          DCD      0x40012000

                          AREA ||i.AK5351_Config||, CODE, READONLY, ALIGN=2

                  AK5351_Config PROC
;;;700    
;;;701    void AK5351_Config()
000000  b500              PUSH     {lr}
;;;702    {
000002  b087              SUB      sp,sp,#0x1c
;;;703    	GPIO_InitTypeDef GPIO_InitStructure;
;;;704    	I2S_InitTypeDef I2S_InitStructure;	
;;;705    		/* Ê¹ÄÜSPI2Ê±ÖÓ */
;;;706    	RCC_APB1PeriphClockCmd(RCC_APB1Periph_SPI2, ENABLE);
000004  2101              MOVS     r1,#1
000006  0388              LSLS     r0,r1,#14
000008  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;707    	/* Enable GPIOI, GPIOB, GPIOC clock */
;;;708    	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOB | RCC_AHB1Periph_GPIOC | RCC_AHB1Periph_GPIOI, ENABLE);
00000c  2101              MOVS     r1,#1
00000e  f44f7083          MOV      r0,#0x106
000012  f7fffffe          BL       RCC_AHB1PeriphClockCmd
;;;709    	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
000016  2002              MOVS     r0,#2
000018  f88d0018          STRB     r0,[sp,#0x18]
;;;710    	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
00001c  f88d0019          STRB     r0,[sp,#0x19]
;;;711    	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
000020  2000              MOVS     r0,#0
000022  f88d001a          STRB     r0,[sp,#0x1a]
;;;712    	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
000026  f88d001b          STRB     r0,[sp,#0x1b]
;;;713    
;;;714    	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_12 | GPIO_Pin_13| GPIO_Pin_15;
00002a  f44f4030          MOV      r0,#0xb000
00002e  9005              STR      r0,[sp,#0x14]
;;;715    	GPIO_Init(GPIOB, &GPIO_InitStructure);
000030  a905              ADD      r1,sp,#0x14
000032  484f              LDR      r0,|L3.368|
000034  f7fffffe          BL       GPIO_Init
;;;716    
;;;717    	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_6;
000038  2040              MOVS     r0,#0x40
00003a  9005              STR      r0,[sp,#0x14]
;;;718    	GPIO_Init(GPIOC, &GPIO_InitStructure);
00003c  a905              ADD      r1,sp,#0x14
00003e  484d              LDR      r0,|L3.372|
000040  f7fffffe          BL       GPIO_Init
;;;719    
;;;720    	/* Connect pins to I2S peripheral  */
;;;721    	GPIO_PinAFConfig(GPIOB, GPIO_PinSource12, GPIO_AF_SPI2);
000044  2205              MOVS     r2,#5
000046  210c              MOVS     r1,#0xc
000048  4849              LDR      r0,|L3.368|
00004a  f7fffffe          BL       GPIO_PinAFConfig
;;;722    	GPIO_PinAFConfig(GPIOB, GPIO_PinSource13, GPIO_AF_SPI2);
00004e  2205              MOVS     r2,#5
000050  210d              MOVS     r1,#0xd
000052  4847              LDR      r0,|L3.368|
000054  f7fffffe          BL       GPIO_PinAFConfig
;;;723    //	GPIO_PinAFConfig(GPIOI, GPIO_PinSource2, GPIO_AF_SPI3);	/* ×¢Òâ£º PI2Á¬½ÓÉèÖÃÐèÒªÊÇ SPI3 */
;;;724    	GPIO_PinAFConfig(GPIOB, GPIO_PinSource15, GPIO_AF_SPI2);
000058  2205              MOVS     r2,#5
00005a  210f              MOVS     r1,#0xf
00005c  4844              LDR      r0,|L3.368|
00005e  f7fffffe          BL       GPIO_PinAFConfig
;;;725    	GPIO_PinAFConfig(GPIOC, GPIO_PinSource6, GPIO_AF_SPI2);
000062  2205              MOVS     r2,#5
000064  2106              MOVS     r1,#6
000066  4843              LDR      r0,|L3.372|
000068  f7fffffe          BL       GPIO_PinAFConfig
;;;726    	GPIO_InitStructure.GPIO_Pin   = Pin_AK5351_PD;
00006c  f44f4080          MOV      r0,#0x4000
000070  9005              STR      r0,[sp,#0x14]
;;;727    	GPIO_InitStructure.GPIO_Mode  = GPIO_Mode_OUT;
000072  2001              MOVS     r0,#1
000074  f88d0018          STRB     r0,[sp,#0x18]
;;;728    	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
000078  2000              MOVS     r0,#0
00007a  f88d001a          STRB     r0,[sp,#0x1a]
;;;729    	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
00007e  f88d001b          STRB     r0,[sp,#0x1b]
;;;730    	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
000082  2002              MOVS     r0,#2
000084  f88d0019          STRB     r0,[sp,#0x19]
;;;731    	GPIO_Init(GPIO_AK5351_PD, &GPIO_InitStructure);
000088  a905              ADD      r1,sp,#0x14
00008a  4839              LDR      r0,|L3.368|
00008c  f7fffffe          BL       GPIO_Init
;;;732    	//		
;;;733    	GPIO_InitStructure.GPIO_Pin =Pin_AK5351_FSYNC;
000090  f44f7080          MOV      r0,#0x100
000094  9005              STR      r0,[sp,#0x14]
;;;734    	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
000096  2001              MOVS     r0,#1
000098  f88d0018          STRB     r0,[sp,#0x18]
;;;735    	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
00009c  2000              MOVS     r0,#0
00009e  f88d001a          STRB     r0,[sp,#0x1a]
;;;736    	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
0000a2  f88d001b          STRB     r0,[sp,#0x1b]
;;;737    	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
0000a6  2002              MOVS     r0,#2
0000a8  f88d0019          STRB     r0,[sp,#0x19]
;;;738    	GPIO_Init(GPIO_AK5351_FSYNC, &GPIO_InitStructure);
0000ac  a905              ADD      r1,sp,#0x14
0000ae  4832              LDR      r0,|L3.376|
0000b0  f7fffffe          BL       GPIO_Init
;;;739    	RCC_I2SCLKConfig(RCC_I2S2CLKSource_PLLI2S);
0000b4  2000              MOVS     r0,#0
0000b6  f7fffffe          BL       RCC_I2SCLKConfig
;;;740    	RCC_PLLI2SCmd(ENABLE);
0000ba  2001              MOVS     r0,#1
0000bc  f7fffffe          BL       RCC_PLLI2SCmd
;;;741    	while(RCC_GetFlagStatus(RCC_FLAG_PLLI2SRDY)==RESET){} 
0000c0  bf00              NOP      
                  |L3.194|
0000c2  203b              MOVS     r0,#0x3b
0000c4  f7fffffe          BL       RCC_GetFlagStatus
0000c8  2800              CMP      r0,#0
0000ca  d0fa              BEQ      |L3.194|
;;;742    	/* ´ò¿ª I2S2 APB1 Ê±ÖÓ */
;;;743    	RCC_APB1PeriphClockCmd(RCC_APB1Periph_SPI2, ENABLE);
0000cc  2101              MOVS     r1,#1
0000ce  0388              LSLS     r0,r1,#14
0000d0  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;744    	/* ¸´Î» SPI2 ÍâÉèµ½È±Ê¡×´Ì¬ */
;;;745    	SPI_I2S_DeInit(SPI2);
0000d4  4829              LDR      r0,|L3.380|
0000d6  f7fffffe          BL       SPI_I2S_DeInit
;;;746    	/* I2S2 ÍâÉèÅäÖÃ */
;;;747    //	I2S_StructInit(&I2S_InitStructure);
;;;748    	I2S_InitStructure.I2S_Mode = I2S_Mode_MasterRx;			/* ÅäÖÃI2S¹¤×÷Ä£Ê½ */
0000da  f44f7040          MOV      r0,#0x300
0000de  f8ad0004          STRH     r0,[sp,#4]
;;;749    	I2S_InitStructure.I2S_Standard = I2S_Standard_Phillips;			/* ½Ó¿Ú±ê×¼ */
0000e2  2000              MOVS     r0,#0
0000e4  f8ad0006          STRH     r0,[sp,#6]
;;;750    	I2S_InitStructure.I2S_DataFormat =  I2S_DataFormat_32b;			/* Êý¾Ý¸ñÊ½£¬16bit */
0000e8  2005              MOVS     r0,#5
0000ea  f8ad0008          STRH     r0,[sp,#8]
;;;751    	I2S_InitStructure.I2S_MCLKOutput = I2S_MCLKOutput_Enable;	/* Ö÷Ê±ÖÓÄ£Ê½ */
0000ee  f44f7000          MOV      r0,#0x200
0000f2  f8ad000a          STRH     r0,[sp,#0xa]
;;;752    	I2S_InitStructure.I2S_AudioFreq =    (u32)4800;			/* ÒôÆµ²ÉÑùÆµÂÊ */
0000f6  f44f5096          MOV      r0,#0x12c0
0000fa  9003              STR      r0,[sp,#0xc]
;;;753    	I2S_InitStructure.I2S_CPOL = I2S_CPOL_Low;
0000fc  2000              MOVS     r0,#0
0000fe  f8ad0010          STRH     r0,[sp,#0x10]
;;;754    	I2S_Init(SPI2, &I2S_InitStructure);
000102  a901              ADD      r1,sp,#4
000104  481d              LDR      r0,|L3.380|
000106  f7fffffe          BL       I2S_Init
;;;755    		/* Ê¹ÄÜ SPI2/I2S2 ÍâÉè */
;;;756    	I2S_Cmd(SPI2, ENABLE);
00010a  2101              MOVS     r1,#1
00010c  481b              LDR      r0,|L3.380|
00010e  f7fffffe          BL       I2S_Cmd
;;;757    	GPIO_ResetBits(GPIO_AK5351_PD, Pin_AK5351_PD);
000112  f44f4180          MOV      r1,#0x4000
000116  4816              LDR      r0,|L3.368|
000118  f7fffffe          BL       GPIO_ResetBits
;;;758    	GPIO_ResetBits(GPIO_AK5351_FSYNC,Pin_AK5351_FSYNC);
00011c  f44f7180          MOV      r1,#0x100
000120  4815              LDR      r0,|L3.376|
000122  f7fffffe          BL       GPIO_ResetBits
;;;759    	bsp_DelayMS(5);
000126  2005              MOVS     r0,#5
000128  f7fffffe          BL       bsp_DelayMS
;;;760    	GPIO_SetBits(GPIO_AK5351_PD, Pin_AK5351_PD);	
00012c  f44f4180          MOV      r1,#0x4000
000130  480f              LDR      r0,|L3.368|
000132  f7fffffe          BL       GPIO_SetBits
;;;761    	SPI_I2S_ITConfig(SPI2, SPI_I2S_IT_RXNE, ENABLE);		/* Ê¹ÄÜ·¢ËÍÖÐ¶Ï */
000136  2201              MOVS     r2,#1
000138  2160              MOVS     r1,#0x60
00013a  4810              LDR      r0,|L3.380|
00013c  f7fffffe          BL       SPI_I2S_ITConfig
;;;762    	while (RxLeftIdx<DataLength*2 ||RxRightIdx<DataLength*2);
000140  bf00              NOP      
                  |L3.322|
000142  480f              LDR      r0,|L3.384|
000144  6800              LDR      r0,[r0,#0]  ; RxLeftIdx
000146  f5b05fe1          CMP      r0,#0x1c20
00014a  d3fa              BCC      |L3.322|
00014c  480d              LDR      r0,|L3.388|
00014e  6800              LDR      r0,[r0,#0]  ; RxRightIdx
000150  f5b05fe1          CMP      r0,#0x1c20
000154  d3f5              BCC      |L3.322|
;;;763    	RxLeftIdx=0;
000156  2000              MOVS     r0,#0
000158  4909              LDR      r1,|L3.384|
00015a  6008              STR      r0,[r1,#0]  ; RxLeftIdx
;;;764    	RxRightIdx=0;
00015c  4909              LDR      r1,|L3.388|
00015e  6008              STR      r0,[r1,#0]  ; RxRightIdx
;;;765    	SPI_I2S_ITConfig(SPI2, SPI_I2S_IT_RXNE, DISABLE);
000160  2200              MOVS     r2,#0
000162  2160              MOVS     r1,#0x60
000164  4805              LDR      r0,|L3.380|
000166  f7fffffe          BL       SPI_I2S_ITConfig
;;;766    }
00016a  b007              ADD      sp,sp,#0x1c
00016c  bd00              POP      {pc}
;;;767    
                          ENDP

00016e  0000              DCW      0x0000
                  |L3.368|
                          DCD      0x40020400
                  |L3.372|
                          DCD      0x40020800
                  |L3.376|
                          DCD      0x40020c00
                  |L3.380|
                          DCD      0x40003800
                  |L3.384|
                          DCD      RxLeftIdx
                  |L3.388|
                          DCD      RxRightIdx

                          AREA ||i.AK5385_Config||, CODE, READONLY, ALIGN=2

                  AK5385_Config PROC
;;;603    
;;;604    void AK5385_Config()
000000  b500              PUSH     {lr}
;;;605    {
000002  b087              SUB      sp,sp,#0x1c
;;;606    	GPIO_InitTypeDef GPIO_InitStructure;
;;;607    	I2S_InitTypeDef I2S_InitStructure;	
;;;608    		/* 使能SPI2时钟 */
;;;609    	RCC_APB1PeriphClockCmd(RCC_APB1Periph_SPI2, ENABLE);
000004  2101              MOVS     r1,#1
000006  0388              LSLS     r0,r1,#14
000008  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;610    	/* Enable GPIOI, GPIOB, GPIOC clock */
;;;611    //	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOB | RCC_AHB1Periph_GPIOC | RCC_AHB1Periph_GPIOH| RCC_AHB1Periph_GPIOG, ENABLE);
;;;612    	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
00000c  2002              MOVS     r0,#2
00000e  f88d0018          STRB     r0,[sp,#0x18]
;;;613    	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
000012  f88d0019          STRB     r0,[sp,#0x19]
;;;614    	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
000016  2000              MOVS     r0,#0
000018  f88d001a          STRB     r0,[sp,#0x1a]
;;;615    	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
00001c  f88d001b          STRB     r0,[sp,#0x1b]
;;;616    
;;;617    	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_12 | GPIO_Pin_13| GPIO_Pin_15;
000020  f44f4030          MOV      r0,#0xb000
000024  9005              STR      r0,[sp,#0x14]
;;;618    	GPIO_Init(GPIOB, &GPIO_InitStructure);
000026  a905              ADD      r1,sp,#0x14
000028  4870              LDR      r0,|L4.492|
00002a  f7fffffe          BL       GPIO_Init
;;;619    
;;;620    	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_6;
00002e  2040              MOVS     r0,#0x40
000030  9005              STR      r0,[sp,#0x14]
;;;621    	GPIO_Init(GPIOC, &GPIO_InitStructure);
000032  a905              ADD      r1,sp,#0x14
000034  486e              LDR      r0,|L4.496|
000036  f7fffffe          BL       GPIO_Init
;;;622    
;;;623    	/* Connect pins to I2S peripheral  */
;;;624    	GPIO_PinAFConfig(GPIOB, GPIO_PinSource12, GPIO_AF_SPI2);
00003a  2205              MOVS     r2,#5
00003c  210c              MOVS     r1,#0xc
00003e  486b              LDR      r0,|L4.492|
000040  f7fffffe          BL       GPIO_PinAFConfig
;;;625    	GPIO_PinAFConfig(GPIOB, GPIO_PinSource13, GPIO_AF_SPI2);
000044  2205              MOVS     r2,#5
000046  210d              MOVS     r1,#0xd
000048  4868              LDR      r0,|L4.492|
00004a  f7fffffe          BL       GPIO_PinAFConfig
;;;626    	GPIO_PinAFConfig(GPIOB, GPIO_PinSource15, GPIO_AF_SPI2);
00004e  2205              MOVS     r2,#5
000050  210f              MOVS     r1,#0xf
000052  4866              LDR      r0,|L4.492|
000054  f7fffffe          BL       GPIO_PinAFConfig
;;;627    	GPIO_PinAFConfig(GPIOC, GPIO_PinSource6, GPIO_AF_SPI2);
000058  2205              MOVS     r2,#5
00005a  2106              MOVS     r1,#6
00005c  4864              LDR      r0,|L4.496|
00005e  f7fffffe          BL       GPIO_PinAFConfig
;;;628    	
;;;629    	GPIO_InitStructure.GPIO_Pin   = Pin_AK5385_PDN;
000062  f44f4080          MOV      r0,#0x4000
000066  9005              STR      r0,[sp,#0x14]
;;;630    	GPIO_InitStructure.GPIO_Mode  = GPIO_Mode_OUT;
000068  2001              MOVS     r0,#1
00006a  f88d0018          STRB     r0,[sp,#0x18]
;;;631    	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
00006e  2000              MOVS     r0,#0
000070  f88d001a          STRB     r0,[sp,#0x1a]
;;;632    	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
000074  f88d001b          STRB     r0,[sp,#0x1b]
;;;633    	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
000078  2002              MOVS     r0,#2
00007a  f88d0019          STRB     r0,[sp,#0x19]
;;;634    	GPIO_Init(GPIO_AK5385_PDN, &GPIO_InitStructure);
00007e  a905              ADD      r1,sp,#0x14
000080  485a              LDR      r0,|L4.492|
000082  f7fffffe          BL       GPIO_Init
;;;635    	//		
;;;636    	GPIO_InitStructure.GPIO_Pin =Pin_AK5385_DIF;
000086  f44f4080          MOV      r0,#0x4000
00008a  9005              STR      r0,[sp,#0x14]
;;;637    	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
00008c  2001              MOVS     r0,#1
00008e  f88d0018          STRB     r0,[sp,#0x18]
;;;638    	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
000092  2000              MOVS     r0,#0
000094  f88d001a          STRB     r0,[sp,#0x1a]
;;;639    	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
000098  f88d001b          STRB     r0,[sp,#0x1b]
;;;640    	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
00009c  2002              MOVS     r0,#2
00009e  f88d0019          STRB     r0,[sp,#0x19]
;;;641    	GPIO_Init(GPIO_AK5385_DIF, &GPIO_InitStructure);
0000a2  a905              ADD      r1,sp,#0x14
0000a4  4853              LDR      r0,|L4.500|
0000a6  f7fffffe          BL       GPIO_Init
;;;642    	
;;;643    	GPIO_InitStructure.GPIO_Pin =Pin_AK5385_MS;
0000aa  f44f7080          MOV      r0,#0x100
0000ae  9005              STR      r0,[sp,#0x14]
;;;644    	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
0000b0  2001              MOVS     r0,#1
0000b2  f88d0018          STRB     r0,[sp,#0x18]
;;;645    	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
0000b6  2000              MOVS     r0,#0
0000b8  f88d001a          STRB     r0,[sp,#0x1a]
;;;646    	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
0000bc  f88d001b          STRB     r0,[sp,#0x1b]
;;;647    	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
0000c0  2002              MOVS     r0,#2
0000c2  f88d0019          STRB     r0,[sp,#0x19]
;;;648    	GPIO_Init(GPIO_AK5385_MS, &GPIO_InitStructure);
0000c6  a905              ADD      r1,sp,#0x14
0000c8  484b              LDR      r0,|L4.504|
0000ca  f7fffffe          BL       GPIO_Init
;;;649    	
;;;650    	
;;;651    		//   
;;;652    	GPIO_InitStructure.GPIO_Pin =Pin_AK5385_CKS0 ;
0000ce  2080              MOVS     r0,#0x80
0000d0  9005              STR      r0,[sp,#0x14]
;;;653    	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
0000d2  2001              MOVS     r0,#1
0000d4  f88d0018          STRB     r0,[sp,#0x18]
;;;654    	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
0000d8  2000              MOVS     r0,#0
0000da  f88d001a          STRB     r0,[sp,#0x1a]
;;;655    	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
0000de  2003              MOVS     r0,#3
0000e0  f88d0019          STRB     r0,[sp,#0x19]
;;;656    	GPIO_Init(GPIO_AK5385_CKS0, &GPIO_InitStructure);
0000e4  a905              ADD      r1,sp,#0x14
0000e6  4842              LDR      r0,|L4.496|
0000e8  f7fffffe          BL       GPIO_Init
;;;657    
;;;658    		//  
;;;659    	GPIO_InitStructure.GPIO_Pin =Pin_AK5385_CKS1;
0000ec  f44f5000          MOV      r0,#0x2000
0000f0  9005              STR      r0,[sp,#0x14]
;;;660    	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
0000f2  2001              MOVS     r0,#1
0000f4  f88d0018          STRB     r0,[sp,#0x18]
;;;661    	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
0000f8  2000              MOVS     r0,#0
0000fa  f88d001a          STRB     r0,[sp,#0x1a]
;;;662    	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
0000fe  2003              MOVS     r0,#3
000100  f88d0019          STRB     r0,[sp,#0x19]
;;;663    	GPIO_Init(GPIO_AK5385_CKS1, &GPIO_InitStructure);
000104  a905              ADD      r1,sp,#0x14
000106  483b              LDR      r0,|L4.500|
000108  f7fffffe          BL       GPIO_Init
;;;664    	
;;;665    	RCC_I2SCLKConfig(RCC_I2S2CLKSource_PLLI2S);
00010c  2000              MOVS     r0,#0
00010e  f7fffffe          BL       RCC_I2SCLKConfig
;;;666    	RCC_PLLI2SCmd(ENABLE);
000112  2001              MOVS     r0,#1
000114  f7fffffe          BL       RCC_PLLI2SCmd
;;;667    	while(RCC_GetFlagStatus(RCC_FLAG_PLLI2SRDY)==RESET){} 
000118  bf00              NOP      
                  |L4.282|
00011a  203b              MOVS     r0,#0x3b
00011c  f7fffffe          BL       RCC_GetFlagStatus
000120  2800              CMP      r0,#0
000122  d0fa              BEQ      |L4.282|
;;;668    	/*打开I2S2 APB1 时钟 */
;;;669    	RCC_APB1PeriphClockCmd(RCC_APB1Periph_SPI2, ENABLE);
000124  2101              MOVS     r1,#1
000126  0388              LSLS     r0,r1,#14
000128  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;670    		/* 复位 SPI2 外设到缺省状态 */
;;;671    	SPI_I2S_DeInit(SPI2);
00012c  4833              LDR      r0,|L4.508|
00012e  f7fffffe          BL       SPI_I2S_DeInit
;;;672    	/* I2S2 外设配置 */
;;;673    //	I2S_StructInit(&I2S_InitStructure);
;;;674    	I2S_InitStructure.I2S_Mode = I2S_Mode_MasterRx;			/* 配置I2S工作模式 */
000132  f44f7040          MOV      r0,#0x300
000136  f8ad0004          STRH     r0,[sp,#4]
;;;675    	I2S_InitStructure.I2S_Standard = I2S_Standard_Phillips;			/* 接口标准*/
00013a  2000              MOVS     r0,#0
00013c  f8ad0006          STRH     r0,[sp,#6]
;;;676    	I2S_InitStructure.I2S_DataFormat =  I2S_DataFormat_32b;			/* 数据格式32bit */
000140  2005              MOVS     r0,#5
000142  f8ad0008          STRH     r0,[sp,#8]
;;;677    	I2S_InitStructure.I2S_MCLKOutput = I2S_MCLKOutput_Enable;	/* 主时钟模式 */
000146  f44f7000          MOV      r0,#0x200
00014a  f8ad000a          STRH     r0,[sp,#0xa]
;;;678    	I2S_InitStructure.I2S_AudioFreq =    (u16)4800;			/* 音频采样频率 */
00014e  f44f5096          MOV      r0,#0x12c0
000152  9003              STR      r0,[sp,#0xc]
;;;679    	I2S_InitStructure.I2S_CPOL = I2S_CPOL_Low;
000154  2000              MOVS     r0,#0
000156  f8ad0010          STRH     r0,[sp,#0x10]
;;;680    	I2S_Init(SPI2, &I2S_InitStructure);
00015a  a901              ADD      r1,sp,#4
00015c  4827              LDR      r0,|L4.508|
00015e  f7fffffe          BL       I2S_Init
;;;681    		/* 使能 SPI2/I2S2 外设 */
;;;682    	I2S_Cmd(SPI2, ENABLE);
000162  2101              MOVS     r1,#1
000164  4825              LDR      r0,|L4.508|
000166  f7fffffe          BL       I2S_Cmd
;;;683    	GPIO_ResetBits(GPIO_AK5385_SCLK, Pin_AK5385_SCLK);
00016a  f44f5100          MOV      r1,#0x2000
00016e  481f              LDR      r0,|L4.492|
000170  f7fffffe          BL       GPIO_ResetBits
;;;684    //	GPIO_ResetBits(GPIO_AK5385_LRCK, Pin_AK5385_LRCK);
;;;685    	GPIO_SetBits(GPIO_AK5385_DIF, Pin_AK5385_DIF);
000174  f44f4180          MOV      r1,#0x4000
000178  481e              LDR      r0,|L4.500|
00017a  f7fffffe          BL       GPIO_SetBits
;;;686    	GPIO_ResetBits(GPIO_AK5385_MS,Pin_AK5385_MS);	
00017e  f44f7180          MOV      r1,#0x100
000182  481d              LDR      r0,|L4.504|
000184  f7fffffe          BL       GPIO_ResetBits
;;;687    	GPIO_ResetBits(GPIO_AK5385_PDN, Pin_AK5385_PDN);
000188  f44f4180          MOV      r1,#0x4000
00018c  4817              LDR      r0,|L4.492|
00018e  f7fffffe          BL       GPIO_ResetBits
;;;688    
;;;689    	GPIO_ResetBits(GPIO_AK5385_CKS0,Pin_AK5385_CKS0);	
000192  2180              MOVS     r1,#0x80
000194  4816              LDR      r0,|L4.496|
000196  f7fffffe          BL       GPIO_ResetBits
;;;690    	GPIO_ResetBits(GPIO_AK5385_CKS1,Pin_AK5385_CKS1);
00019a  f44f5100          MOV      r1,#0x2000
00019e  4815              LDR      r0,|L4.500|
0001a0  f7fffffe          BL       GPIO_ResetBits
;;;691    	bsp_DelayMS(5);
0001a4  2005              MOVS     r0,#5
0001a6  f7fffffe          BL       bsp_DelayMS
;;;692    	GPIO_SetBits(GPIO_AK5385_PDN, Pin_AK5385_PDN);
0001aa  f44f4180          MOV      r1,#0x4000
0001ae  480f              LDR      r0,|L4.492|
0001b0  f7fffffe          BL       GPIO_SetBits
;;;693    //	GPIO_SetBits(GPIO_AK5385_LRCK, Pin_AK5385_LRCK);	
;;;694    	SPI_I2S_ITConfig(SPI2, SPI_I2S_IT_RXNE, ENABLE);		/* 使能发送中断 */
0001b4  2201              MOVS     r2,#1
0001b6  2160              MOVS     r1,#0x60
0001b8  4810              LDR      r0,|L4.508|
0001ba  f7fffffe          BL       SPI_I2S_ITConfig
;;;695    	while (RxLeftIdx<DataLength*2 ||RxRightIdx<DataLength*2);
0001be  bf00              NOP      
                  |L4.448|
0001c0  480f              LDR      r0,|L4.512|
0001c2  6800              LDR      r0,[r0,#0]  ; RxLeftIdx
0001c4  f5b05fe1          CMP      r0,#0x1c20
0001c8  d3fa              BCC      |L4.448|
0001ca  480e              LDR      r0,|L4.516|
0001cc  6800              LDR      r0,[r0,#0]  ; RxRightIdx
0001ce  f5b05fe1          CMP      r0,#0x1c20
0001d2  d3f5              BCC      |L4.448|
;;;696    	RxLeftIdx=0;
0001d4  2000              MOVS     r0,#0
0001d6  490a              LDR      r1,|L4.512|
0001d8  6008              STR      r0,[r1,#0]  ; RxLeftIdx
;;;697    	RxRightIdx=0;
0001da  490a              LDR      r1,|L4.516|
0001dc  6008              STR      r0,[r1,#0]  ; RxRightIdx
;;;698    	SPI_I2S_ITConfig(SPI2, SPI_I2S_IT_RXNE, DISABLE);
0001de  2200              MOVS     r2,#0
0001e0  2160              MOVS     r1,#0x60
0001e2  4806              LDR      r0,|L4.508|
0001e4  f7fffffe          BL       SPI_I2S_ITConfig
;;;699    }
0001e8  b007              ADD      sp,sp,#0x1c
0001ea  bd00              POP      {pc}
;;;700    
                          ENDP

                  |L4.492|
                          DCD      0x40020400
                  |L4.496|
                          DCD      0x40020800
                  |L4.500|
                          DCD      0x40021c00
                  |L4.504|
                          DCD      0x40021800
                  |L4.508|
                          DCD      0x40003800
                  |L4.512|
                          DCD      RxLeftIdx
                  |L4.516|
                          DCD      RxRightIdx

                          AREA ||i.AK_Conv||, CODE, READONLY, ALIGN=2

                  AK_Conv PROC
;;;201    }
;;;202    void AK_Conv(void)	  
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;203    {
000004  ed2d8b04          VPUSH    {d8-d9}
;;;204    	u16	i;
;;;205    	unsigned long long temp5=0;
000008  bf00              NOP      
;;;206    	unsigned long long temp6=0;
00000a  bf00              NOP      
;;;207    	RxLeftIdx	= 0;
00000c  2000              MOVS     r0,#0
00000e  4964              LDR      r1,|L5.416|
000010  6008              STR      r0,[r1,#0]  ; RxLeftIdx
;;;208    	RxRightIdx	= 0;	 
000012  4964              LDR      r1,|L5.420|
000014  6008              STR      r0,[r1,#0]  ; RxRightIdx
;;;209    	SPI_I2S_ClearITPendingBit(SPI2,SPI_I2S_IT_RXNE); 
000016  2160              MOVS     r1,#0x60
000018  4863              LDR      r0,|L5.424|
00001a  f7fffffe          BL       SPI_I2S_ClearITPendingBit
;;;210    	SPI_I2S_ITConfig(SPI2, SPI_I2S_IT_RXNE, ENABLE);
00001e  2201              MOVS     r2,#1
000020  2160              MOVS     r1,#0x60
000022  4861              LDR      r0,|L5.424|
000024  f7fffffe          BL       SPI_I2S_ITConfig
;;;211    	//µÈ´ý¶ÁÈ¡ÖÐ¶Ï½áÊø
;;;212    	while (RxLeftIdx<DataLength*2 ||RxRightIdx<DataLength*2);
000028  bf00              NOP      
                  |L5.42|
00002a  485d              LDR      r0,|L5.416|
00002c  6800              LDR      r0,[r0,#0]  ; RxLeftIdx
00002e  f5b05fe1          CMP      r0,#0x1c20
000032  d3fa              BCC      |L5.42|
000034  485b              LDR      r0,|L5.420|
000036  6800              LDR      r0,[r0,#0]  ; RxRightIdx
000038  f5b05fe1          CMP      r0,#0x1c20
00003c  d3f5              BCC      |L5.42|
;;;213    	SPI_I2S_ITConfig(SPI2, SPI_I2S_IT_RXNE, DISABLE);
00003e  2200              MOVS     r2,#0
000040  2160              MOVS     r1,#0x60
000042  4859              LDR      r0,|L5.424|
000044  f7fffffe          BL       SPI_I2S_ITConfig
;;;214    	temp5=0;
000048  2500              MOVS     r5,#0
00004a  462e              MOV      r6,r5
;;;215    	temp6=0;
00004c  2700              MOVS     r7,#0
00004e  46b8              MOV      r8,r7
;;;216    	for(i=0;i<DataLength;i++)
000050  2400              MOVS     r4,#0
000052  e053              B        |L5.252|
                  |L5.84|
;;;217    	{ 
;;;218    		temp5 += ABS((s16)AK_Left_Data [i*2])*ABS((s16)AK_Left_Data [i*2]);
000054  0060              LSLS     r0,r4,#1
000056  4955              LDR      r1,|L5.428|
000058  f8310010          LDRH     r0,[r1,r0,LSL #1]
00005c  b200              SXTH     r0,r0
00005e  2800              CMP      r0,#0
000060  dd04              BLE      |L5.108|
000062  0060              LSLS     r0,r4,#1
000064  f8310010          LDRH     r0,[r1,r0,LSL #1]
000068  b200              SXTH     r0,r0
00006a  e005              B        |L5.120|
                  |L5.108|
00006c  0060              LSLS     r0,r4,#1
00006e  494f              LDR      r1,|L5.428|
000070  f8310010          LDRH     r0,[r1,r0,LSL #1]
000074  b200              SXTH     r0,r0
000076  4240              RSBS     r0,r0,#0
                  |L5.120|
000078  0061              LSLS     r1,r4,#1
00007a  4a4c              LDR      r2,|L5.428|
00007c  f8321011          LDRH     r1,[r2,r1,LSL #1]
000080  b209              SXTH     r1,r1
000082  2900              CMP      r1,#0
000084  dd04              BLE      |L5.144|
000086  0061              LSLS     r1,r4,#1
000088  f8321011          LDRH     r1,[r2,r1,LSL #1]
00008c  b209              SXTH     r1,r1
00008e  e005              B        |L5.156|
                  |L5.144|
000090  0061              LSLS     r1,r4,#1
000092  4a46              LDR      r2,|L5.428|
000094  f8321011          LDRH     r1,[r2,r1,LSL #1]
000098  b209              SXTH     r1,r1
00009a  4249              RSBS     r1,r1,#0
                  |L5.156|
00009c  4348              MULS     r0,r1,r0
00009e  1945              ADDS     r5,r0,r5
0000a0  eb4676e0          ADC      r6,r6,r0,ASR #31
;;;219    		temp6 += ABS((s16)AK_Right_Data[i*2])*ABS((s16)AK_Right_Data[i*2]);
0000a4  ea4f0044          LSL      r0,r4,#1
0000a8  4941              LDR      r1,|L5.432|
0000aa  f8310010          LDRH     r0,[r1,r0,LSL #1]
0000ae  b200              SXTH     r0,r0
0000b0  2800              CMP      r0,#0
0000b2  dd04              BLE      |L5.190|
0000b4  0060              LSLS     r0,r4,#1
0000b6  f8310010          LDRH     r0,[r1,r0,LSL #1]
0000ba  b200              SXTH     r0,r0
0000bc  e005              B        |L5.202|
                  |L5.190|
0000be  0060              LSLS     r0,r4,#1
0000c0  493b              LDR      r1,|L5.432|
0000c2  f8310010          LDRH     r0,[r1,r0,LSL #1]
0000c6  b200              SXTH     r0,r0
0000c8  4240              RSBS     r0,r0,#0
                  |L5.202|
0000ca  0061              LSLS     r1,r4,#1
0000cc  4a38              LDR      r2,|L5.432|
0000ce  f8321011          LDRH     r1,[r2,r1,LSL #1]
0000d2  b209              SXTH     r1,r1
0000d4  2900              CMP      r1,#0
0000d6  dd04              BLE      |L5.226|
0000d8  0061              LSLS     r1,r4,#1
0000da  f8321011          LDRH     r1,[r2,r1,LSL #1]
0000de  b209              SXTH     r1,r1
0000e0  e005              B        |L5.238|
                  |L5.226|
0000e2  0061              LSLS     r1,r4,#1
0000e4  4a32              LDR      r2,|L5.432|
0000e6  f8321011          LDRH     r1,[r2,r1,LSL #1]
0000ea  b209              SXTH     r1,r1
0000ec  4249              RSBS     r1,r1,#0
                  |L5.238|
0000ee  4348              MULS     r0,r1,r0
0000f0  19c7              ADDS     r7,r0,r7
0000f2  eb4878e0          ADC      r8,r8,r0,ASR #31
0000f6  f1040001          ADD      r0,r4,#1              ;216
0000fa  b284              UXTH     r4,r0                 ;216
                  |L5.252|
0000fc  f5b46f61          CMP      r4,#0xe10             ;216
000100  dba8              BLT      |L5.84|
;;;220    	}
;;;221    	temp5>>=6;
000102  09a8              LSRS     r0,r5,#6
000104  ea406586          ORR      r5,r0,r6,LSL #26
000108  09b6              LSRS     r6,r6,#6
;;;222    	temp6>>=6;
00010a  09b8              LSRS     r0,r7,#6
00010c  ea406788          ORR      r7,r0,r8,LSL #26
000110  ea4f1898          LSR      r8,r8,#6
;;;223    	Intensity1=sqrt(temp5);
000114  4628              MOV      r0,r5
000116  4631              MOV      r1,r6
000118  f7fffffe          BL       __aeabi_ul2d
00011c  ec410b19          VMOV     d9,r0,r1
000120  eeb00a49          VMOV.F32 s0,s18
000124  eef00a69          VMOV.F32 s1,s19
000128  f7fffffe          BL       __hardfp_sqrt
00012c  eeb08a40          VMOV.F32 s16,s0
000130  eef08a60          VMOV.F32 s17,s1
000134  ec510b18          VMOV     r0,r1,d8
000138  f7fffffe          BL       __aeabi_d2uiz
00013c  491d              LDR      r1,|L5.436|
00013e  6008              STR      r0,[r1,#0]  ; Intensity1
;;;224    	Intensity2=sqrt(temp6);
000140  4638              MOV      r0,r7
000142  4641              MOV      r1,r8
000144  f7fffffe          BL       __aeabi_ul2d
000148  ec410b19          VMOV     d9,r0,r1
00014c  eeb00a49          VMOV.F32 s0,s18
000150  eef00a69          VMOV.F32 s1,s19
000154  f7fffffe          BL       __hardfp_sqrt
000158  eeb08a40          VMOV.F32 s16,s0
00015c  eef08a60          VMOV.F32 s17,s1
000160  ec510b18          VMOV     r0,r1,d8
000164  f7fffffe          BL       __aeabi_d2uiz
000168  4913              LDR      r1,|L5.440|
00016a  6008              STR      r0,[r1,#0]  ; Intensity2
;;;225    
;;;226    	AK_Left_Data[0]	= (temp5>>48)&0xFFFF;
00016c  0c30              LSRS     r0,r6,#16
00016e  490f              LDR      r1,|L5.428|
000170  8008              STRH     r0,[r1,#0]
;;;227    	AK_Left_Data[1]	= (temp5>>32)&0xFFFF;
000172  804e              STRH     r6,[r1,#2]
;;;228    	AK_Left_Data[2]	= (temp5>>16)&0xFFFF;
000174  0c28              LSRS     r0,r5,#16
000176  ea404006          ORR      r0,r0,r6,LSL #16
00017a  8088              STRH     r0,[r1,#4]
;;;229    	AK_Left_Data[3]	= temp5&0xFFFF;
00017c  80cd              STRH     r5,[r1,#6]
;;;230    
;;;231    	AK_Left_Data[4]	= (temp6>>48)&0xFFFF;
00017e  ea4f4018          LSR      r0,r8,#16
000182  8108              STRH     r0,[r1,#8]
;;;232    	AK_Left_Data[5]	= (temp6>>32)&0xFFFF;
000184  f64f70ff          MOV      r0,#0xffff
000188  ea080000          AND      r0,r8,r0
00018c  8148              STRH     r0,[r1,#0xa]
;;;233    	AK_Left_Data[6]	= (temp6>>16)&0xFFFF;
00018e  0c38              LSRS     r0,r7,#16
000190  ea404008          ORR      r0,r0,r8,LSL #16
000194  8188              STRH     r0,[r1,#0xc]
;;;234    	AK_Left_Data[7]	= temp6&0xFFFF; 
000196  81cf              STRH     r7,[r1,#0xe]
;;;235    //u16	i;
;;;236    //	unsigned long long temp5=0;
;;;237    //	unsigned long long temp6=0;
;;;238    // 	unsigned long long leftdata=0;
;;;239    //	unsigned long long rightdata=0;
;;;240    //	RxLeftIdx	= 0;
;;;241    //	RxRightIdx	= 0;
;;;242    
;;;243    //	SPI_I2S_ClearITPendingBit(SPI2,SPI_I2S_IT_RXNE); 
;;;244    //	SPI_I2S_ITConfig(SPI2, SPI_I2S_IT_RXNE, ENABLE);
;;;245    //   	//µÈ´ý¶ÁÈ¡ÖÐ¶Ï½áÊø
;;;246    //	while (RxLeftIdx<DataLength*2 ||RxRightIdx<DataLength*2);
;;;247    //	SPI_I2S_ITConfig(SPI2, SPI_I2S_IT_RXNE, DISABLE);
;;;248    //	for(i=0;i<DataLength;i++)
;;;249    //	{
;;;250    //		leftdata	= (ABS((s32)(AK_Left_Data [i*2]<<16	+ AK_Left_Data [i*2+1])))/0x1000; 
;;;251    //		rightdata	= (ABS((s32)(AK_Right_Data[i*2]<<16+ AK_Right_Data [i*2+1])))/0x1000;
;;;252    //		temp5 += leftdata*leftdata;
;;;253    //		temp6 += rightdata*rightdata;
;;;254    //	}
;;;255    //	temp5>>=1;
;;;256    //	temp6>>=1;
;;;257    //	Intensity=sqrt(temp5);
;;;258    //	Intensitys1=sqrt(temp5);
;;;259    //	Intensitys2=sqrt(temp6);
;;;260    //	AK_Left_Data[0]	= (temp5>>48)&0xFFFF;
;;;261    //	AK_Left_Data[1]	= (temp5>>32)&0xFFFF;
;;;262    //	AK_Left_Data[2]	= (temp5>>16)&0xFFFF;
;;;263    //	AK_Left_Data[3]	= temp5&0xFFFF;
;;;264    
;;;265    //	AK_Left_Data[4]	= (temp6>>48)&0xFFFF;
;;;266    //	AK_Left_Data[5]	= (temp6>>32)&0xFFFF;
;;;267    //	AK_Left_Data[6]	= (temp6>>16)&0xFFFF;
;;;268    //	AK_Left_Data[7]	= temp6&0xFFFF; 
;;;269    }
000198  ecbd8b04          VPOP     {d8-d9}
00019c  e8bd81f0          POP      {r4-r8,pc}
;;;270    void Valve(unsigned char Vnum)
                          ENDP

                  |L5.416|
                          DCD      RxLeftIdx
                  |L5.420|
                          DCD      RxRightIdx
                  |L5.424|
                          DCD      0x40003800
                  |L5.428|
                          DCD      AK_Left_Data
                  |L5.432|
                          DCD      AK_Right_Data
                  |L5.436|
                          DCD      Intensity1
                  |L5.440|
                          DCD      Intensity2

                          AREA ||i.AK_Test||, CODE, READONLY, ALIGN=2

                  AK_Test PROC
;;;904    }
;;;905    void AK_Test(void)
000000  b510              PUSH     {r4,lr}
;;;906    {
;;;907    	u16 i;		
;;;908    	AK_Conv();
000002  f7fffffe          BL       AK_Conv
;;;909    	for(i=0; i<256; i++)
000006  2400              MOVS     r4,#0
000008  e00c              B        |L6.36|
                  |L6.10|
;;;910    	{
;;;911    			lBUFIN[i] = AK_Left_Data[1200+i*2]<<16;
00000a  f44f6096          MOV      r0,#0x4b0
00000e  eb000044          ADD      r0,r0,r4,LSL #1
000012  490b              LDR      r1,|L6.64|
000014  f8310010          LDRH     r0,[r1,r0,LSL #1]
000018  0400              LSLS     r0,r0,#16
00001a  490a              LDR      r1,|L6.68|
00001c  f8410024          STR      r0,[r1,r4,LSL #2]
000020  1c60              ADDS     r0,r4,#1              ;909
000022  b284              UXTH     r4,r0                 ;909
                  |L6.36|
000024  2cff              CMP      r4,#0xff              ;909
000026  ddf0              BLE      |L6.10|
;;;912    	}
;;;913    	cr4_fft_256_stm32(lBUFOUT,lBUFIN,NPT);
000028  f44f7280          MOV      r2,#0x100
00002c  4905              LDR      r1,|L6.68|
00002e  4806              LDR      r0,|L6.72|
000030  f7fffffe          BL       cr4_fft_256_stm32
;;;914    	powerMag(NPT,"1SIDED");
000034  a105              ADR      r1,|L6.76|
000036  f44f7080          MOV      r0,#0x100
00003a  f7fffffe          BL       powerMag
;;;915    }
00003e  bd10              POP      {r4,pc}
;;;916    void ChopperCheck1(u8 run)
                          ENDP

                  |L6.64|
                          DCD      AK_Left_Data
                  |L6.68|
                          DCD      lBUFIN
                  |L6.72|
                          DCD      lBUFOUT
                  |L6.76|
00004c  31534944          DCB      "1SIDED",0
000050  454400  
000053  00                DCB      0

                          AREA ||i.Cartridge||, CODE, READONLY, ALIGN=2

                  Cartridge PROC
;;;1233   }
;;;1234   void  	Cartridge(u8 wash)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;1235   {
000004  ed2d8b04          VPUSH    {d8-d9}
000008  b08c              SUB      sp,sp,#0x30
00000a  4605              MOV      r5,r0
;;;1236       u8 i;
;;;1237       u8 OpenValve=0,CloseValve=0;
00000c  2600              MOVS     r6,#0
00000e  2700              MOVS     r7,#0
;;;1238       switch(wash)
000010  2d08              CMP      r5,#8
000012  d002              BEQ      |L7.26|
000014  2d09              CMP      r5,#9
000016  d10c              BNE      |L7.50|
000018  e008              B        |L7.44|
                  |L7.26|
;;;1239       {
;;;1240       case 8:
;;;1241           Valve(171);
00001a  20ab              MOVS     r0,#0xab
00001c  f7fffffe          BL       Valve
;;;1242           Valve(181);
000020  20b5              MOVS     r0,#0xb5
000022  f7fffffe          BL       Valve
;;;1243           OpenValve=81,CloseValve=80;
000026  2651              MOVS     r6,#0x51
000028  2750              MOVS     r7,#0x50
;;;1244           break;
00002a  e003              B        |L7.52|
                  |L7.44|
;;;1245       case 9:
;;;1246           OpenValve=91,CloseValve=90;
00002c  265b              MOVS     r6,#0x5b
00002e  275a              MOVS     r7,#0x5a
;;;1247           break;
000030  e000              B        |L7.52|
                  |L7.50|
;;;1248       default:
;;;1249           break;
000032  bf00              NOP      
                  |L7.52|
000034  bf00              NOP                            ;1244
;;;1250       }
;;;1251   
;;;1252       for(i=0; i<2; i++)
000036  2400              MOVS     r4,#0
000038  e035              B        |L7.166|
                  |L7.58|
;;;1253       {
;;;1254           Motorun(1,3250,FORWARD,0,      30,60,8,20,      20,6,20,0, 	 OpenValve, 150, 40);   //³éÆø 4~8r/s	Âö³åÊý:1500
00003a  2028              MOVS     r0,#0x28
00003c  2196              MOVS     r1,#0x96
00003e  2200              MOVS     r2,#0
000040  e9cd2607          STRD     r2,r6,[sp,#0x1c]
000044  e9cd1009          STRD     r1,r0,[sp,#0x24]
000048  2014              MOVS     r0,#0x14
00004a  2106              MOVS     r1,#6
00004c  9003              STR      r0,[sp,#0xc]
00004e  e9cd0104          STRD     r0,r1,[sp,#0x10]
000052  9006              STR      r0,[sp,#0x18]
000054  2008              MOVS     r0,#8
000056  213c              MOVS     r1,#0x3c
000058  221e              MOVS     r2,#0x1e
00005a  2300              MOVS     r3,#0
00005c  e9cd2100          STRD     r2,r1,[sp,#0]
000060  9002              STR      r0,[sp,#8]
000062  461a              MOV      r2,r3
000064  f64041b2          MOV      r1,#0xcb2
000068  2001              MOVS     r0,#1
00006a  f7fffffe          BL       Motorun
;;;1255           Motorun(1,3250,BACKWARD,0,     30,60,8,20,      20,6,20,200,	 CloseValve, 151, 40);  //´òÆø£¬µ×ÆøÇåÏ´
00006e  2028              MOVS     r0,#0x28
000070  2197              MOVS     r1,#0x97
000072  22c8              MOVS     r2,#0xc8
000074  e9cd2707          STRD     r2,r7,[sp,#0x1c]
000078  e9cd1009          STRD     r1,r0,[sp,#0x24]
00007c  2014              MOVS     r0,#0x14
00007e  2106              MOVS     r1,#6
000080  9003              STR      r0,[sp,#0xc]
000082  e9cd0104          STRD     r0,r1,[sp,#0x10]
000086  9006              STR      r0,[sp,#0x18]
000088  2008              MOVS     r0,#8
00008a  213c              MOVS     r1,#0x3c
00008c  221e              MOVS     r2,#0x1e
00008e  2300              MOVS     r3,#0
000090  e9cd2100          STRD     r2,r1,[sp,#0]
000094  9002              STR      r0,[sp,#8]
000096  2201              MOVS     r2,#1
000098  f64041b2          MOV      r1,#0xcb2
00009c  4610              MOV      r0,r2
00009e  f7fffffe          BL       Motorun
0000a2  1c60              ADDS     r0,r4,#1              ;1252
0000a4  b2c4              UXTB     r4,r0                 ;1252
                  |L7.166|
0000a6  2c02              CMP      r4,#2                 ;1252
0000a8  dbc7              BLT      |L7.58|
;;;1256       }
;;;1257       Motorun(1,T,FORWARD,0,      30,50,8,20,      20,6,20,0, 	 OpenValve, 150, 40);   //³éÆø£¬ÂúÐÐ³Ì
0000aa  484c              LDR      r0,|L7.476|
0000ac  ed901b0e          VLDR     d1,[r0,#0x38]
0000b0  eeb00a41          VMOV.F32 s0,s2
0000b4  eef00a61          VMOV.F32 s1,s3
0000b8  ec510b10          VMOV     r0,r1,d0
0000bc  f7fffffe          BL       __aeabi_d2uiz
0000c0  fa1ff880          UXTH     r8,r0
0000c4  2028              MOVS     r0,#0x28
0000c6  2196              MOVS     r1,#0x96
0000c8  2200              MOVS     r2,#0
0000ca  e9cd2607          STRD     r2,r6,[sp,#0x1c]
0000ce  e9cd1009          STRD     r1,r0,[sp,#0x24]
0000d2  2014              MOVS     r0,#0x14
0000d4  2106              MOVS     r1,#6
0000d6  9003              STR      r0,[sp,#0xc]
0000d8  e9cd0104          STRD     r0,r1,[sp,#0x10]
0000dc  9006              STR      r0,[sp,#0x18]
0000de  2008              MOVS     r0,#8
0000e0  2132              MOVS     r1,#0x32
0000e2  221e              MOVS     r2,#0x1e
0000e4  2300              MOVS     r3,#0
0000e6  e9cd2100          STRD     r2,r1,[sp,#0]
0000ea  9002              STR      r0,[sp,#8]
0000ec  461a              MOV      r2,r3
0000ee  4641              MOV      r1,r8
0000f0  2001              MOVS     r0,#1
0000f2  f7fffffe          BL       Motorun
;;;1258       bsp_DelayMS(1500);
0000f6  f24050dc          MOV      r0,#0x5dc
0000fa  f7fffffe          BL       bsp_DelayMS
;;;1259       Valve(170);
0000fe  20aa              MOVS     r0,#0xaa
000100  f7fffffe          BL       Valve
;;;1260       Valve(180);
000104  20b4              MOVS     r0,#0xb4
000106  f7fffffe          BL       Valve
;;;1261       Motorun(1, m,  BACKWARD,0,   30,30,0,0,      30,0,0,0,	CloseValve, 151, 40);  //·´ÍÆm¸öÂö³å  ,ËÙ¶È4~5r/s
00010a  2028              MOVS     r0,#0x28
00010c  2197              MOVS     r1,#0x97
00010e  2200              MOVS     r2,#0
000110  e9cd2707          STRD     r2,r7,[sp,#0x1c]
000114  e9cd1009          STRD     r1,r0,[sp,#0x24]
000118  4610              MOV      r0,r2
00011a  4611              MOV      r1,r2
00011c  221e              MOVS     r2,#0x1e
00011e  2300              MOVS     r3,#0
000120  e9cd3203          STRD     r3,r2,[sp,#0xc]
000124  9200              STR      r2,[sp,#0]
000126  e9cd2301          STRD     r2,r3,[sp,#4]
00012a  e9cd1005          STRD     r1,r0,[sp,#0x14]
00012e  482c              LDR      r0,|L7.480|
000130  8800              LDRH     r0,[r0,#0]  ; m
000132  b281              UXTH     r1,r0
000134  2201              MOVS     r2,#1
000136  4610              MOV      r0,r2
000138  f7fffffe          BL       Motorun
;;;1262       bsp_DelayMS(1000);
00013c  f44f707a          MOV      r0,#0x3e8
000140  f7fffffe          BL       bsp_DelayMS
;;;1263       Motorun(1,T-m,BACKWARD,0,   20,30,1,20, 20,5,50,200,	 0, 0, 41);  //´òÆøÖÁµ×
000144  4826              LDR      r0,|L7.480|
000146  f9b00000          LDRSH    r0,[r0,#0]  ; m
00014a  f7fffffe          BL       __aeabi_i2d
00014e  ec410b19          VMOV     d9,r0,r1
000152  4822              LDR      r0,|L7.476|
000154  ed901b0e          VLDR     d1,[r0,#0x38]
000158  eeb00a41          VMOV.F32 s0,s2
00015c  eef00a61          VMOV.F32 s1,s3
000160  ec532b10          VMOV     r2,r3,d0
000164  ec510b19          VMOV     r0,r1,d9
000168  f7fffffe          BL       __aeabi_drsub
00016c  ec410b18          VMOV     d8,r0,r1
000170  f7fffffe          BL       __aeabi_d2uiz
000174  fa1ff880          UXTH     r8,r0
000178  2029              MOVS     r0,#0x29
00017a  2100              MOVS     r1,#0
00017c  23c8              MOVS     r3,#0xc8
00017e  e9cd3107          STRD     r3,r1,[sp,#0x1c]
000182  e9cd1009          STRD     r1,r0,[sp,#0x24]
000186  2032              MOVS     r0,#0x32
000188  2105              MOVS     r1,#5
00018a  2214              MOVS     r2,#0x14
00018c  9203              STR      r2,[sp,#0xc]
00018e  e9cd2104          STRD     r2,r1,[sp,#0x10]
000192  9006              STR      r0,[sp,#0x18]
000194  2001              MOVS     r0,#1
000196  211e              MOVS     r1,#0x1e
000198  2300              MOVS     r3,#0
00019a  e9cd2100          STRD     r2,r1,[sp,#0]
00019e  9002              STR      r0,[sp,#8]
0001a0  4602              MOV      r2,r0
0001a2  4641              MOV      r1,r8
0001a4  f7fffffe          BL       Motorun
;;;1264       Valve(150);
0001a8  2096              MOVS     r0,#0x96
0001aa  f7fffffe          BL       Valve
;;;1265       bsp_DelayMS(5000);         //¹²ÑÓÊ±5sµÈÆøÑ¹ÎÈ¶¨
0001ae  f2413088          MOV      r0,#0x1388
0001b2  f7fffffe          BL       bsp_DelayMS
;;;1266       //×ª»»·¢ËÍÊý¾Ý
;;;1267       AK_Conv();
0001b6  f7fffffe          BL       AK_Conv
;;;1268       Valve(151);
0001ba  2097              MOVS     r0,#0x97
0001bc  f7fffffe          BL       Valve
;;;1269       Valve(40);//ÅÅÆø
0001c0  2028              MOVS     r0,#0x28
0001c2  f7fffffe          BL       Valve
;;;1270       bsp_DelayMS(100);
0001c6  2064              MOVS     r0,#0x64
0001c8  f7fffffe          BL       bsp_DelayMS
;;;1271       Valve(150);
0001cc  2096              MOVS     r0,#0x96
0001ce  f7fffffe          BL       Valve
;;;1272   }
0001d2  b00c              ADD      sp,sp,#0x30
0001d4  ecbd8b04          VPOP     {d8-d9}
0001d8  e8bd81f0          POP      {r4-r8,pc}
;;;1273   void PerkCheck(void)
                          ENDP

                  |L7.476|
                          DCD      m_lCf
                  |L7.480|
                          DCD      m

                          AREA ||i.ChopperCheck||, CODE, READONLY, ALIGN=2

                  ChopperCheck PROC
;;;960    
;;;961    void ChopperCheck(u8 run)
000000  b510              PUSH     {r4,lr}
;;;962    {
000002  4604              MOV      r4,r0
;;;963     	u8 i;
;;;964    	if(m_bChopper==1)
000004  4807              LDR      r0,|L8.36|
000006  7800              LDRB     r0,[r0,#0]  ; m_bChopper
000008  2801              CMP      r0,#1
00000a  d100              BNE      |L8.14|
                  |L8.12|
;;;965            return;
;;;966    	ChopperCheck1(run);	 
;;;967    	if(m_bChopper==0)
;;;968      {
;;;969    		while(1)
;;;970    		{}
;;;971      }
;;;972    }
00000c  bd10              POP      {r4,pc}
                  |L8.14|
00000e  4620              MOV      r0,r4                 ;966
000010  f7fffffe          BL       ChopperCheck1
000014  4803              LDR      r0,|L8.36|
000016  7800              LDRB     r0,[r0,#0]            ;967  ; m_bChopper
000018  b908              CBNZ     r0,|L8.30|
00001a  bf00              NOP                            ;969
                  |L8.28|
00001c  e7fe              B        |L8.28|
                  |L8.30|
00001e  bf00              NOP      
000020  e7f4              B        |L8.12|
;;;973    void Sys_100msClock_Config(void)
                          ENDP

000022  0000              DCW      0x0000
                  |L8.36|
                          DCD      m_bChopper

                          AREA ||i.ChopperCheck1||, CODE, READONLY, ALIGN=2

                  ChopperCheck1 PROC
;;;915    }
;;;916    void ChopperCheck1(u8 run)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;917    {
000004  4606              MOV      r6,r0
;;;918        u8	m_bRestart= 1;
000006  2701              MOVS     r7,#1
;;;919        u16  i;
;;;920        u8	times=0;
000008  2500              MOVS     r5,#0
;;;921    
;;;922        while(m_bRestart)
00000a  e049              B        |L9.160|
                  |L9.12|
;;;923        {
;;;924            LightModulation(ON);
00000c  2001              MOVS     r0,#1
00000e  f7fffffe          BL       LightModulation
;;;925            bsp_DelayMS(10000);
000012  f2427010          MOV      r0,#0x2710
000016  f7fffffe          BL       bsp_DelayMS
;;;926            AK_Conv();
00001a  f7fffffe          BL       AK_Conv
;;;927            for(i=0; i<256; i++)
00001e  2400              MOVS     r4,#0
000020  e00c              B        |L9.60|
                  |L9.34|
;;;928            {
;;;929                lBUFIN[i] = AK_Left_Data[1200+i*2]<<16;
000022  f44f6096          MOV      r0,#0x4b0
000026  eb000044          ADD      r0,r0,r4,LSL #1
00002a  4922              LDR      r1,|L9.180|
00002c  f8310010          LDRH     r0,[r1,r0,LSL #1]
000030  0400              LSLS     r0,r0,#16
000032  4921              LDR      r1,|L9.184|
000034  f8410024          STR      r0,[r1,r4,LSL #2]
000038  1c60              ADDS     r0,r4,#1              ;927
00003a  b284              UXTH     r4,r0                 ;927
                  |L9.60|
00003c  2cff              CMP      r4,#0xff              ;927
00003e  ddf0              BLE      |L9.34|
;;;930            }
;;;931            cr4_fft_256_stm32(lBUFOUT,lBUFIN,NPT);
000040  f44f7280          MOV      r2,#0x100
000044  491c              LDR      r1,|L9.184|
000046  481d              LDR      r0,|L9.188|
000048  f7fffffe          BL       cr4_fft_256_stm32
;;;932            powerMag(NPT,"1SIDED");
00004c  a11c              ADR      r1,|L9.192|
00004e  f44f7080          MOV      r0,#0x100
000052  f7fffffe          BL       powerMag
;;;933            for(i=0; i<32; i++)
000056  2400              MOVS     r4,#0
000058  e00f              B        |L9.122|
                  |L9.90|
;;;934            {
;;;935                if(lBUFMAG[i]>(60*(6+times)))
00005a  481b              LDR      r0,|L9.200|
00005c  f8501024          LDR      r1,[r0,r4,LSL #2]
000060  1da8              ADDS     r0,r5,#6
000062  ebc01000          RSB      r0,r0,r0,LSL #4
000066  0080              LSLS     r0,r0,#2
000068  4281              CMP      r1,r0
00006a  dd03              BLE      |L9.116|
;;;936                {
;;;937                    m_bRestart	= 1;
00006c  2701              MOVS     r7,#1
;;;938                    times++;
00006e  1c68              ADDS     r0,r5,#1
000070  b2c5              UXTB     r5,r0
;;;939    								break;
000072  e004              B        |L9.126|
                  |L9.116|
;;;940                }
;;;941                else
;;;942                    m_bRestart	= 0;
000074  2700              MOVS     r7,#0
000076  1c60              ADDS     r0,r4,#1              ;933
000078  b284              UXTH     r4,r0                 ;933
                  |L9.122|
00007a  2c20              CMP      r4,#0x20              ;933
00007c  dbed              BLT      |L9.90|
                  |L9.126|
00007e  bf00              NOP                            ;939
;;;943            }
;;;944            if(lBUFMAG[32]<1280)
000080  4811              LDR      r0,|L9.200|
000082  f8d00080          LDR      r0,[r0,#0x80]  ; lBUFMAG
000086  f5b06fa0          CMP      r0,#0x500
00008a  da02              BGE      |L9.146|
;;;945            {
;;;946                m_bRestart	= 1;
00008c  2701              MOVS     r7,#1
;;;947                times++;
00008e  1c68              ADDS     r0,r5,#1
000090  b2c5              UXTB     r5,r0
                  |L9.146|
;;;948            }
;;;949            if(times>4)
000092  2d04              CMP      r5,#4
000094  dd04              BLE      |L9.160|
;;;950            {
;;;951                LightModulation(OFF);
000096  2000              MOVS     r0,#0
000098  f7fffffe          BL       LightModulation
                  |L9.156|
;;;952                return;
;;;953            }
;;;954        }
;;;955        if(run!=1)
;;;956        {
;;;957            LightModulation(OFF);
;;;958        }
;;;959    }
00009c  e8bd81f0          POP      {r4-r8,pc}
                  |L9.160|
0000a0  2f00              CMP      r7,#0                 ;922
0000a2  d1b3              BNE      |L9.12|
0000a4  2e01              CMP      r6,#1                 ;955
0000a6  d002              BEQ      |L9.174|
0000a8  2000              MOVS     r0,#0                 ;957
0000aa  f7fffffe          BL       LightModulation
                  |L9.174|
0000ae  bf00              NOP      
0000b0  e7f4              B        |L9.156|
;;;960    
                          ENDP

0000b2  0000              DCW      0x0000
                  |L9.180|
                          DCD      AK_Left_Data
                  |L9.184|
                          DCD      lBUFIN
                  |L9.188|
                          DCD      lBUFOUT
                  |L9.192|
0000c0  31534944          DCB      "1SIDED",0
0000c4  454400  
0000c7  00                DCB      0
                  |L9.200|
                          DCD      lBUFMAG

                          AREA ||i.EXTI_Config||, CODE, READONLY, ALIGN=2

                  EXTI_Config PROC
;;;767    
;;;768    void EXTI_Config(void)
000000  b51f              PUSH     {r0-r4,lr}
;;;769    {
;;;770    	GPIO_InitTypeDef GPIO_InitStructure;
;;;771    	EXTI_InitTypeDef EXTI_InitStructure;
;;;772    	
;;;773    	/* Ê¹ÄÜSYSCFGÊ±ÖÓ */
;;;774    	RCC_APB2PeriphClockCmd(RCC_APB2Periph_SYSCFG, ENABLE);
000002  2101              MOVS     r1,#1
000004  0388              LSLS     r0,r1,#14
000006  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;775    	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_TripSwitch;
00000a  2080              MOVS     r0,#0x80
00000c  9002              STR      r0,[sp,#8]
;;;776    	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;
00000e  2000              MOVS     r0,#0
000010  f88d000c          STRB     r0,[sp,#0xc]
;;;777    	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;		/* ÉèÎªÍÆÍìÄ£Ê½ */
000014  f88d000e          STRB     r0,[sp,#0xe]
;;;778    	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;	/* ÎÞÐèÉÏÏÂÀ­µç×è */
000018  f88d000f          STRB     r0,[sp,#0xf]
;;;779    	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;	/* IO¿Ú×î´óËÙ¶È */
00001c  2002              MOVS     r0,#2
00001e  f88d000d          STRB     r0,[sp,#0xd]
;;;780    	GPIO_Init(GPIO_TripSwitch, &GPIO_InitStructure);
000022  a902              ADD      r1,sp,#8
000024  480a              LDR      r0,|L10.80|
000026  f7fffffe          BL       GPIO_Init
;;;781    
;;;782    	SYSCFG_EXTILineConfig(EXTI_PortSourceGPIOD, EXTI_PinSource7);
00002a  2107              MOVS     r1,#7
00002c  2003              MOVS     r0,#3
00002e  f7fffffe          BL       SYSCFG_EXTILineConfig
;;;783    
;;;784    	EXTI_InitStructure.EXTI_Line = EXTI_LINE_TripSwitch;
000032  2080              MOVS     r0,#0x80
000034  9000              STR      r0,[sp,#0]
;;;785    	EXTI_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt;
000036  2000              MOVS     r0,#0
000038  f88d0004          STRB     r0,[sp,#4]
;;;786    	EXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Rising;
00003c  2008              MOVS     r0,#8
00003e  f88d0005          STRB     r0,[sp,#5]
;;;787    	EXTI_InitStructure.EXTI_LineCmd = ENABLE;
000042  2001              MOVS     r0,#1
000044  f88d0006          STRB     r0,[sp,#6]
;;;788    	EXTI_Init(&EXTI_InitStructure);
000048  4668              MOV      r0,sp
00004a  f7fffffe          BL       EXTI_Init
;;;789    	
;;;790    
;;;791    }
00004e  bd1f              POP      {r0-r4,pc}
;;;792    
                          ENDP

                  |L10.80|
                          DCD      0x40020c00

                          AREA ||i.IsTripSwitchClosed||, CODE, READONLY, ALIGN=2

                  IsTripSwitchClosed PROC
;;;351    }
;;;352    u8 IsTripSwitchClosed(void)
000000  b510              PUSH     {r4,lr}
;;;353    {
;;;354    	return GPIO_ReadInputDataBit(GPIO_TripSwitch,GPIO_Pin_TripSwitch);
000002  2180              MOVS     r1,#0x80
000004  4801              LDR      r0,|L11.12|
000006  f7fffffe          BL       GPIO_ReadInputDataBit
;;;355    }
00000a  bd10              POP      {r4,pc}
;;;356    
                          ENDP

                  |L11.12|
                          DCD      0x40020c00

                          AREA ||i.LeakageCheck||, CODE, READONLY, ALIGN=2

                  LeakageCheck PROC
;;;1088   
;;;1089   void LeakageCheck(u8 Go)
000000  b570              PUSH     {r4-r6,lr}
;;;1090   {	
000002  b086              SUB      sp,sp,#0x18
000004  4605              MOV      r5,r0
;;;1091     u8 i,j; 	
;;;1092   	u16 Press[10]={0},Y;
000006  2114              MOVS     r1,#0x14
000008  a801              ADD      r0,sp,#4
00000a  f7fffffe          BL       __aeabi_memclr4
;;;1093   	if(Go==0)
00000e  bbbd              CBNZ     r5,|L12.128|
;;;1094   	{
;;;1095   		bsp_DelayMS(50);
000010  2032              MOVS     r0,#0x32
000012  f7fffffe          BL       bsp_DelayMS
;;;1096   		for(i=0;i<10;i++)
000016  2400              MOVS     r4,#0
000018  e02c              B        |L12.116|
                  |L12.26|
;;;1097   		{
;;;1098   			bsp_DelayMS(1000);         //ÑÓÊ±
00001a  f44f707a          MOV      r0,#0x3e8
00001e  f7fffffe          BL       bsp_DelayMS
;;;1099   			Press[i] =ADC_1(ADC_FS);
000022  2001              MOVS     r0,#1
000024  f7fffffe          BL       ADC_1
000028  a901              ADD      r1,sp,#4
00002a  f8210014          STRH     r0,[r1,r4,LSL #1]
;;;1100   			Y=(u16)(((((float)(Press[i] + 28) * 3 / 4096) - 1) / 4)*1000);
00002e  a801              ADD      r0,sp,#4
000030  f8300014          LDRH     r0,[r0,r4,LSL #1]
000034  301c              ADDS     r0,r0,#0x1c
000036  ee000a10          VMOV     s0,r0
00003a  eeb80ac0          VCVT.F32.S32 s0,s0
00003e  eef00a08          VMOV.F32 s1,#3.00000000
000042  ee600a20          VMUL.F32 s1,s0,s1
000046  ed9f1a0f          VLDR     s2,|L12.132|
00004a  ee800a81          VDIV.F32 s0,s1,s2
00004e  eef70a00          VMOV.F32 s1,#1.00000000
000052  ee300a60          VSUB.F32 s0,s0,s1
000056  eeb11a00          VMOV.F32 s2,#4.00000000
00005a  eec00a01          VDIV.F32 s1,s0,s2
00005e  ed9f0a0a          VLDR     s0,|L12.136|
000062  ee200a80          VMUL.F32 s0,s1,s0
000066  eebc0ac0          VCVT.U32.F32 s0,s0
00006a  ee100a10          VMOV     r0,s0
00006e  b286              UXTH     r6,r0
000070  1c60              ADDS     r0,r4,#1              ;1096
000072  b2c4              UXTB     r4,r0                 ;1096
                  |L12.116|
000074  2c0a              CMP      r4,#0xa               ;1096
000076  dbd0              BLT      |L12.26|
;;;1101   		}
;;;1102   		bsp_DelayMS(50);	
000078  2032              MOVS     r0,#0x32
00007a  f7fffffe          BL       bsp_DelayMS
;;;1103   		if((Press[0]-Press[9])>100)
00007e  bf00              NOP      
                  |L12.128|
;;;1104   		{	
;;;1105   	//		print_pressure(Y,2);
;;;1106   		} 
;;;1107   		else
;;;1108   		{	
;;;1109   	//		print_pressure(Y,1);
;;;1110   		}
;;;1111   	}
;;;1112   }
000080  b006              ADD      sp,sp,#0x18
000082  bd70              POP      {r4-r6,pc}
;;;1113   
                          ENDP

                  |L12.132|
000084  45800000          DCFS     0x45800000 ; 4096
                  |L12.136|
000088  447a0000          DCFS     0x447a0000 ; 1000

                          AREA ||i.LightModulation||, CODE, READONLY, ALIGN=2

                  LightModulation PROC
;;;87     
;;;88     void LightModulation(u8 status)
000000  b510              PUSH     {r4,lr}
;;;89     {
000002  b08a              SUB      sp,sp,#0x28
000004  4604              MOV      r4,r0
;;;90     //	u32 ccr1,TimerPeriod;
;;;91     	TIM_TimeBaseInitTypeDef  TIM_TimeBaseStructure;
;;;92     	TIM_OCInitTypeDef  TIM_OCInitStructure;
;;;93     	GPIO_InitTypeDef GPIO_InitStructure;
;;;94     //RCC_MCO1Config(RCC_MCO1Source_PLLCLK, RCC_MCO1Div_1);
;;;95     	if(status==ON)
000006  2c01              CMP      r4,#1
000008  d176              BNE      |L13.248|
;;;96     	{
;;;97     		Step_LM=0;
00000a  2000              MOVS     r0,#0
00000c  4947              LDR      r1,|L13.300|
00000e  6008              STR      r0,[r1,#0]  ; Step_LM
;;;98     		GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
000010  2002              MOVS     r0,#2
000012  f88d0004          STRB     r0,[sp,#4]
;;;99     		GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
000016  2000              MOVS     r0,#0
000018  f88d0006          STRB     r0,[sp,#6]
;;;100    		GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0;
00001c  2001              MOVS     r0,#1
00001e  9000              STR      r0,[sp,#0]
;;;101    		GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
000020  f88d0007          STRB     r0,[sp,#7]
;;;102    		GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
000024  2003              MOVS     r0,#3
000026  f88d0005          STRB     r0,[sp,#5]
;;;103    		GPIO_Init(GPIOA,&GPIO_InitStructure);
00002a  4669              MOV      r1,sp
00002c  4840              LDR      r0,|L13.304|
00002e  f7fffffe          BL       GPIO_Init
;;;104    		GPIO_PinAFConfig(GPIOA,GPIO_PinSource0,GPIO_AF_TIM5);
000032  2202              MOVS     r2,#2
000034  2100              MOVS     r1,#0
000036  483e              LDR      r0,|L13.304|
000038  f7fffffe          BL       GPIO_PinAFConfig
;;;105    	 
;;;106    		//Ê±»ù³õÊ¼»¯
;;;107    		TIM_TimeBaseStructure.TIM_ClockDivision = TIM_CKD_DIV1; //ËÀÇø¿ØÖÆÓÃ¡£
00003c  2000              MOVS     r0,#0
00003e  f8ad0024          STRH     r0,[sp,#0x24]
;;;108    		TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;  //¼ÆÊýÆ÷·½Ïò
000042  f8ad001e          STRH     r0,[sp,#0x1e]
;;;109    		TIM_TimeBaseStructure.TIM_Prescaler = 0;   //Timer clock = sysclock /(TIM_Prescaler+1) = 84M
000046  f8ad001c          STRH     r0,[sp,#0x1c]
;;;110    		TIM_TimeBaseStructure.TIM_RepetitionCounter = 0;
00004a  f88d0026          STRB     r0,[sp,#0x26]
;;;111    		TIM_TimeBaseStructure.TIM_Period = Speedup[0];    //Period = (TIM counter clock / TIM output clock) - 1 = 20K
00004e  4839              LDR      r0,|L13.308|
000050  6800              LDR      r0,[r0,#0]  ; Speedup
000052  9008              STR      r0,[sp,#0x20]
;;;112    		TIM_TimeBaseInit(TIM5,&TIM_TimeBaseStructure);
000054  a907              ADD      r1,sp,#0x1c
000056  4838              LDR      r0,|L13.312|
000058  f7fffffe          BL       TIM_TimeBaseInit
;;;113    
;;;114    		GPIO_WriteBit(GPIO_M2CL,GPIO_Pin_M2CL,Bit_RESET);
00005c  2200              MOVS     r2,#0
00005e  2101              MOVS     r1,#1
000060  4833              LDR      r0,|L13.304|
000062  f7fffffe          BL       GPIO_WriteBit
;;;115    		GPIO_WriteBit(GPIO_M2EN,GPIO_Pin_M2EN,Bit_SET);
000066  2201              MOVS     r2,#1
000068  2140              MOVS     r1,#0x40
00006a  4834              LDR      r0,|L13.316|
00006c  f7fffffe          BL       GPIO_WriteBit
;;;116    		GPIO_WriteBit(GPIO_M2RESET,GPIO_Pin_M2RESET,Bit_RESET);
000070  2200              MOVS     r2,#0
000072  0221              LSLS     r1,r4,#8
000074  4832              LDR      r0,|L13.320|
000076  f7fffffe          BL       GPIO_WriteBit
;;;117    		
;;;118    		TIM_ITConfig(TIM5, TIM_IT_Update, DISABLE);
00007a  2200              MOVS     r2,#0
00007c  2101              MOVS     r1,#1
00007e  482e              LDR      r0,|L13.312|
000080  f7fffffe          BL       TIM_ITConfig
;;;119    		TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_PWM1;
000084  2060              MOVS     r0,#0x60
000086  f8ad0008          STRH     r0,[sp,#8]
;;;120    		TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable;
00008a  2001              MOVS     r0,#1
00008c  f8ad000a          STRH     r0,[sp,#0xa]
;;;121    //		TIM_OCInitStructure.TIM_OutputNState = TIM_OutputNState_Disable;
;;;122    //		TIM_OCInitStructure.TIM_Pulse = 2249;
;;;123    		TIM_OCInitStructure.TIM_Pulse = 1535;
000090  f24050ff          MOV      r0,#0x5ff
000094  9004              STR      r0,[sp,#0x10]
;;;124    		TIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_Low;
000096  2002              MOVS     r0,#2
000098  f8ad0014          STRH     r0,[sp,#0x14]
;;;125    //		TIM_OCInitStructure.TIM_OCNPolarity = TIM_OCPolarity_Low;
;;;126    //		TIM_OCInitStructure.TIM_OCIdleState = TIM_OCIdleState_Set;
;;;127    //		TIM_OCInitStructure.TIM_OCNIdleState = TIM_OCNIdleState_Reset;
;;;128    		TIM_OC1Init(TIM5,&TIM_OCInitStructure);
00009c  a902              ADD      r1,sp,#8
00009e  4826              LDR      r0,|L13.312|
0000a0  f7fffffe          BL       TIM_OC1Init
;;;129      	TIM5->ARR=Speedup[0]<<1;
0000a4  4823              LDR      r0,|L13.308|
0000a6  6800              LDR      r0,[r0,#0]  ; Speedup
0000a8  0040              LSLS     r0,r0,#1
0000aa  4923              LDR      r1,|L13.312|
0000ac  312c              ADDS     r1,r1,#0x2c
0000ae  6008              STR      r0,[r1,#0]
;;;130    //		TIM5->CCER=0x000B;
;;;131    		TIM_OC1PreloadConfig(TIM5, TIM_OCPreload_Disable);
0000b0  2100              MOVS     r1,#0
0000b2  4821              LDR      r0,|L13.312|
0000b4  f7fffffe          BL       TIM_OC1PreloadConfig
;;;132    		TIM_ARRPreloadConfig(TIM5, ENABLE);
0000b8  2101              MOVS     r1,#1
0000ba  481f              LDR      r0,|L13.312|
0000bc  f7fffffe          BL       TIM_ARRPreloadConfig
;;;133    		TIM_CtrlPWMOutputs(TIM5,ENABLE);
0000c0  2101              MOVS     r1,#1
0000c2  481d              LDR      r0,|L13.312|
0000c4  f7fffffe          BL       TIM_CtrlPWMOutputs
;;;134    		TIM_Cmd(TIM5,ENABLE);
0000c8  2101              MOVS     r1,#1
0000ca  481b              LDR      r0,|L13.312|
0000cc  f7fffffe          BL       TIM_Cmd
;;;135    	
;;;136    		//¼ÆÊýÆ÷ÉÏÒçÖÐ¶ÏÉè¶¨
;;;137    		TIM_ClearFlag(TIM5, TIM_FLAG_Update);/*Çå³ý¸üÐÂ±êÖ¾Î»*/
0000d0  2101              MOVS     r1,#1
0000d2  4819              LDR      r0,|L13.312|
0000d4  f7fffffe          BL       TIM_ClearFlag
;;;138    		TIM_ARRPreloadConfig(TIM5, DISABLE);/*Ô¤×°ÔØ¼Ä´æÆ÷µÄÄÚÈÝ±»Á¢¼´´«ËÍµ½Ó°×Ó¼Ä´æÆ÷ */
0000d8  2100              MOVS     r1,#0
0000da  4817              LDR      r0,|L13.312|
0000dc  f7fffffe          BL       TIM_ARRPreloadConfig
;;;139    		//Æô¶¯¶¨Ê±Æ÷
;;;140    		TIM_ITConfig(TIM5, TIM_IT_Update, ENABLE);   
0000e0  2201              MOVS     r2,#1
0000e2  4611              MOV      r1,r2
0000e4  4814              LDR      r0,|L13.312|
0000e6  f7fffffe          BL       TIM_ITConfig
;;;141    		TIM_Cmd(TIM5, ENABLE);   
0000ea  2101              MOVS     r1,#1
0000ec  4812              LDR      r0,|L13.312|
0000ee  f7fffffe          BL       TIM_Cmd
;;;142    		m_bChopper=1;
0000f2  2001              MOVS     r0,#1
0000f4  4913              LDR      r1,|L13.324|
0000f6  7008              STRB     r0,[r1,#0]
                  |L13.248|
;;;143    	}
;;;144    	if(status==OFF)
0000f8  b9ac              CBNZ     r4,|L13.294|
;;;145    	{		
;;;146    		TIM_CtrlPWMOutputs(TIM5, DISABLE);	
0000fa  2100              MOVS     r1,#0
0000fc  480e              LDR      r0,|L13.312|
0000fe  f7fffffe          BL       TIM_CtrlPWMOutputs
;;;147    		//¹Ø±Õ CL=0 EN=0 RESET=0
;;;148    		GPIO_WriteBit(GPIO_M2CL,GPIO_Pin_M2CL,Bit_RESET);
000102  2200              MOVS     r2,#0
000104  2101              MOVS     r1,#1
000106  480a              LDR      r0,|L13.304|
000108  f7fffffe          BL       GPIO_WriteBit
;;;149    		GPIO_WriteBit(GPIO_M2EN,GPIO_Pin_M2EN,Bit_RESET);
00010c  2200              MOVS     r2,#0
00010e  2140              MOVS     r1,#0x40
000110  480a              LDR      r0,|L13.316|
000112  f7fffffe          BL       GPIO_WriteBit
;;;150    		GPIO_WriteBit(GPIO_M2RESET,GPIO_Pin_M2RESET,Bit_SET);		
000116  2201              MOVS     r2,#1
000118  0211              LSLS     r1,r2,#8
00011a  4809              LDR      r0,|L13.320|
00011c  f7fffffe          BL       GPIO_WriteBit
;;;151    		m_bChopper=0;
000120  2000              MOVS     r0,#0
000122  4908              LDR      r1,|L13.324|
000124  7008              STRB     r0,[r1,#0]
                  |L13.294|
;;;152    	}
;;;153    }
000126  b00a              ADD      sp,sp,#0x28
000128  bd10              POP      {r4,pc}
;;;154    
                          ENDP

00012a  0000              DCW      0x0000
                  |L13.300|
                          DCD      Step_LM
                  |L13.304|
                          DCD      0x40020000
                  |L13.308|
                          DCD      Speedup
                  |L13.312|
                          DCD      0x40000c00
                  |L13.316|
                          DCD      0x40021800
                  |L13.320|
                          DCD      0x40021c00
                  |L13.324|
                          DCD      m_bChopper

                          AREA ||i.LightModulation_Config||, CODE, READONLY, ALIGN=2

                  LightModulation_Config PROC
;;;60     u8  TripSwitchStatus=0;
;;;61     void LightModulation_Config()
000000  b51c              PUSH     {r2-r4,lr}
;;;62     {
;;;63     	GPIO_InitTypeDef GPIO_InitStructure;
;;;64     	//CL
;;;65     //	GPIO_InitStructure.GPIO_Pin =GPIO_Pin_M2CL;
;;;66     //	GPIO_InitStructure.GPIO_Mode 	= GPIO_Mode_AF;
;;;67     //	GPIO_InitStructure.GPIO_OType = GPIO_OType_OD;
;;;68     //	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
;;;69     //	GPIO_Init(GPIO_M2CL, &GPIO_InitStructure);
;;;70     	 GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
000002  2001              MOVS     r0,#1
000004  f88d0004          STRB     r0,[sp,#4]
;;;71       GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
000008  2000              MOVS     r0,#0
00000a  f88d0006          STRB     r0,[sp,#6]
;;;72       GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0;
00000e  2001              MOVS     r0,#1
000010  9000              STR      r0,[sp,#0]
;;;73       GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
000012  2000              MOVS     r0,#0
000014  f88d0007          STRB     r0,[sp,#7]
;;;74       GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
000018  2003              MOVS     r0,#3
00001a  f88d0005          STRB     r0,[sp,#5]
;;;75       GPIO_Init(GPIOA,&GPIO_InitStructure);
00001e  4669              MOV      r1,sp
000020  480e              LDR      r0,|L14.92|
000022  f7fffffe          BL       GPIO_Init
;;;76     	//Reset
;;;77     	GPIO_InitStructure.GPIO_Pin =GPIO_Pin_M2RESET;
000026  f44f7080          MOV      r0,#0x100
00002a  9000              STR      r0,[sp,#0]
;;;78     	GPIO_Init(GPIO_M2RESET, &GPIO_InitStructure);
00002c  4669              MOV      r1,sp
00002e  480c              LDR      r0,|L14.96|
000030  f7fffffe          BL       GPIO_Init
;;;79     	//En
;;;80     	GPIO_InitStructure.GPIO_Pin =GPIO_Pin_M2EN;
000034  2040              MOVS     r0,#0x40
000036  9000              STR      r0,[sp,#0]
;;;81     	GPIO_Init(GPIO_M2EN, &GPIO_InitStructure); 
000038  4669              MOV      r1,sp
00003a  480a              LDR      r0,|L14.100|
00003c  f7fffffe          BL       GPIO_Init
;;;82     
;;;83     	GPIO_WriteBit(GPIO_M2EN,GPIO_Pin_M2EN,Bit_RESET);	  //Ê¹ÄÜ0
000040  2200              MOVS     r2,#0
000042  2140              MOVS     r1,#0x40
000044  4807              LDR      r0,|L14.100|
000046  f7fffffe          BL       GPIO_WriteBit
;;;84     	bsp_DelayMS(50);
00004a  2032              MOVS     r0,#0x32
00004c  f7fffffe          BL       bsp_DelayMS
;;;85     	GPIO_WriteBit(GPIO_M2RESET,GPIO_Pin_M2RESET,Bit_SET);//¸´Î»1
000050  2201              MOVS     r2,#1
000052  0211              LSLS     r1,r2,#8
000054  4802              LDR      r0,|L14.96|
000056  f7fffffe          BL       GPIO_WriteBit
;;;86     }
00005a  bd1c              POP      {r2-r4,pc}
;;;87     
                          ENDP

                  |L14.92|
                          DCD      0x40020000
                  |L14.96|
                          DCD      0x40021c00
                  |L14.100|
                          DCD      0x40021800

                          AREA ||i.Motor_Config||, CODE, READONLY, ALIGN=2

                  Motor_Config PROC
;;;436    
;;;437    void Motor_Config(void)
000000  b500              PUSH     {lr}
;;;438    {
000002  b085              SUB      sp,sp,#0x14
;;;439    	TIM_TimeBaseInitTypeDef  TIM_TimeBaseStructure;
;;;440    	//set up motor gpio
;;;441    	GPIO_InitTypeDef GPIO_InitStructure;
;;;442    	
;;;443    	GPIO_InitStructure.GPIO_Pin 	= GPIO_Pin_M1RESET;
000004  2080              MOVS     r0,#0x80
000006  9000              STR      r0,[sp,#0]
;;;444    	GPIO_InitStructure.GPIO_Speed 	= GPIO_Speed_100MHz;	
000008  2003              MOVS     r0,#3
00000a  f88d0005          STRB     r0,[sp,#5]
;;;445    	GPIO_InitStructure.GPIO_Mode 	= GPIO_Mode_OUT;
00000e  2001              MOVS     r0,#1
000010  f88d0004          STRB     r0,[sp,#4]
;;;446    	GPIO_InitStructure.GPIO_OType = GPIO_OType_OD;
000014  f88d0006          STRB     r0,[sp,#6]
;;;447    	GPIO_Init(GPIO_M1RESET, &GPIO_InitStructure);
000018  4669              MOV      r1,sp
00001a  482e              LDR      r0,|L15.212|
00001c  f7fffffe          BL       GPIO_Init
;;;448    
;;;449    	GPIO_InitStructure.GPIO_Pin 	= GPIO_Pin_M1CL|GPIO_Pin_M1EN|GPIO_Pin_M1CW;
000020  f44f50d0          MOV      r0,#0x1a00
000024  9000              STR      r0,[sp,#0]
;;;450    	GPIO_InitStructure.GPIO_Speed 	= GPIO_Speed_100MHz;
000026  2003              MOVS     r0,#3
000028  f88d0005          STRB     r0,[sp,#5]
;;;451    	GPIO_InitStructure.GPIO_Mode 	= GPIO_Mode_OUT;
00002c  2001              MOVS     r0,#1
00002e  f88d0004          STRB     r0,[sp,#4]
;;;452    	GPIO_InitStructure.GPIO_OType = GPIO_OType_OD;
000032  f88d0006          STRB     r0,[sp,#6]
;;;453    	GPIO_Init(GPIO_M1CL, &GPIO_InitStructure);
000036  4669              MOV      r1,sp
000038  4826              LDR      r0,|L15.212|
00003a  f7fffffe          BL       GPIO_Init
;;;454    
;;;455    	GPIO_InitStructure.GPIO_Pin 	= GPIO_Pin_M1MO;
00003e  f44f6080          MOV      r0,#0x400
000042  9000              STR      r0,[sp,#0]
;;;456    	GPIO_InitStructure.GPIO_Speed 	= GPIO_Speed_100MHz;
000044  2003              MOVS     r0,#3
000046  f88d0005          STRB     r0,[sp,#5]
;;;457    	GPIO_InitStructure.GPIO_Mode 	= GPIO_Mode_OUT;
00004a  2001              MOVS     r0,#1
00004c  f88d0004          STRB     r0,[sp,#4]
;;;458    	GPIO_InitStructure.GPIO_OType = GPIO_OType_OD;
000050  f88d0006          STRB     r0,[sp,#6]
;;;459    	GPIO_Init(GPIO_M1MO, &GPIO_InitStructure);
000054  4669              MOV      r1,sp
000056  481f              LDR      r0,|L15.212|
000058  f7fffffe          BL       GPIO_Init
;;;460    
;;;461    	GPIO_WriteBit(GPIO_M1CL,GPIO_Pin_M1CL,Bit_RESET);
00005c  2200              MOVS     r2,#0
00005e  f44f6100          MOV      r1,#0x800
000062  481c              LDR      r0,|L15.212|
000064  f7fffffe          BL       GPIO_WriteBit
;;;462    
;;;463    	GPIO_WriteBit(GPIO_M1EN, GPIO_Pin_M1EN, (BitAction)(0))	;	 	//Ê¹ÄÜ0
000068  2200              MOVS     r2,#0
00006a  f44f7100          MOV      r1,#0x200
00006e  4819              LDR      r0,|L15.212|
000070  f7fffffe          BL       GPIO_WriteBit
;;;464    	bsp_DelayMS(200);
000074  20c8              MOVS     r0,#0xc8
000076  f7fffffe          BL       bsp_DelayMS
;;;465    	GPIO_WriteBit(GPIO_M1RESET, GPIO_Pin_M1RESET, (BitAction)(1));	//¸´Î»1
00007a  2201              MOVS     r2,#1
00007c  2180              MOVS     r1,#0x80
00007e  4815              LDR      r0,|L15.212|
000080  f7fffffe          BL       GPIO_WriteBit
;;;466    	GPIO_WriteBit(GPIO_M1MO,GPIO_Pin_M1MO,Bit_RESET); 
000084  2200              MOVS     r2,#0
000086  f44f6180          MOV      r1,#0x400
00008a  4812              LDR      r0,|L15.212|
00008c  f7fffffe          BL       GPIO_WriteBit
;;;467    		
;;;468    	//set up timer2
;;;469    	TIM_TimeBaseStructure.TIM_Period	= 1000; 
000090  f44f707a          MOV      r0,#0x3e8
000094  9003              STR      r0,[sp,#0xc]
;;;470    	TIM_TimeBaseStructure.TIM_Prescaler = 9;
000096  2009              MOVS     r0,#9
000098  f8ad0008          STRH     r0,[sp,#8]
;;;471    	TIM_TimeBaseStructure.TIM_ClockDivision = 0;
00009c  2000              MOVS     r0,#0
00009e  f8ad0010          STRH     r0,[sp,#0x10]
;;;472    	TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;
0000a2  f8ad000a          STRH     r0,[sp,#0xa]
;;;473    	TIM_TimeBaseStructure.TIM_RepetitionCounter=0;
0000a6  f88d0012          STRB     r0,[sp,#0x12]
;;;474    	TIM_TimeBaseInit(TIM2, &TIM_TimeBaseStructure);
0000aa  a902              ADD      r1,sp,#8
0000ac  f04f4080          MOV      r0,#0x40000000
0000b0  f7fffffe          BL       TIM_TimeBaseInit
;;;475    	//¼ÆÊýÆ÷ÉÏÒçÖÐ¶ÏÉè¶¨
;;;476    	TIM_ClearFlag(TIM2, TIM_FLAG_Update);/*Çå³ý¸üÐÂ±êÖ¾Î»*/
0000b4  2101              MOVS     r1,#1
0000b6  0788              LSLS     r0,r1,#30
0000b8  f7fffffe          BL       TIM_ClearFlag
;;;477    	TIM_ARRPreloadConfig(TIM2, DISABLE);/*Ô¤×°ÔØ¼Ä´æÆ÷µÄÄÚÈÝ±»Á¢¼´´«ËÍµ½Ó°×Ó¼Ä´æÆ÷ */
0000bc  2100              MOVS     r1,#0
0000be  f04f4080          MOV      r0,#0x40000000
0000c2  f7fffffe          BL       TIM_ARRPreloadConfig
;;;478    	//¹Ø±Õ¶¨Ê±Æ÷
;;;479    	TIM_ITConfig(TIM2, TIM_IT_Update, DISABLE);
0000c6  2200              MOVS     r2,#0
0000c8  2101              MOVS     r1,#1
0000ca  0788              LSLS     r0,r1,#30
0000cc  f7fffffe          BL       TIM_ITConfig
;;;480    }
0000d0  b005              ADD      sp,sp,#0x14
0000d2  bd00              POP      {pc}
;;;481    
                          ENDP

                  |L15.212|
                          DCD      0x40021c00

                          AREA ||i.Motor_Init||, CODE, READONLY, ALIGN=2

                  Motor_Init PROC
;;;830    u8 Trip2;
;;;831    void Motor_Init(void)
000000  b500              PUSH     {lr}
;;;832    {
000002  b08d              SUB      sp,sp,#0x34
;;;833    		FONT_T aFont;
;;;834    		aFont.FontCode = FC_ST_48;		/* ×ÖÌå´úÂë 16µãÕó */
000004  2003              MOVS     r0,#3
000006  f8ad002c          STRH     r0,[sp,#0x2c]
;;;835    		aFont.FrontColor = CL_WHITE;	/* ×ÖÌåÑÕÉ« */
00000a  f64f70ff          MOV      r0,#0xffff
00000e  f8ad002e          STRH     r0,[sp,#0x2e]
;;;836    		aFont.BackColor = CL_MASK;		/* ÎÄ×Ö±³¾°ÑÕÉ« */
000012  f6491099          MOV      r0,#0x9999
000016  f8ad0030          STRH     r0,[sp,#0x30]
;;;837    		aFont.Space = 0;
00001a  2000              MOVS     r0,#0
00001c  f8ad0032          STRH     r0,[sp,#0x32]
;;;838        LCD_DispStr(304, 100, "ÒÇÆ÷×Ô¼ì", &aFont);
000020  ab0b              ADD      r3,sp,#0x2c
000022  a241              ADR      r2,|L16.296|
000024  2164              MOVS     r1,#0x64
000026  f44f7098          MOV      r0,#0x130
00002a  f7fffffe          BL       LCD_DispStr
;;;839    		LCD_DispStr(304, 200, "´óµç»ú³õÊ¼»¯", &aFont);
00002e  ab0b              ADD      r3,sp,#0x2c
000030  a242              ADR      r2,|L16.316|
000032  21c8              MOVS     r1,#0xc8
000034  f44f7098          MOV      r0,#0x130
000038  f7fffffe          BL       LCD_DispStr
;;;840        Trip2= IsTripSwitchClosed() ;
00003c  f7fffffe          BL       IsTripSwitchClosed
000040  4945              LDR      r1,|L16.344|
000042  7008              STRB     r0,[r1,#0]
;;;841        if(Trip2)
000044  4608              MOV      r0,r1
000046  7800              LDRB     r0,[r0,#0]  ; Trip2
000048  2800              CMP      r0,#0
00004a  d045              BEQ      |L16.216|
;;;842        {
;;;843            Motorun(  0,800,FORWARD,0,      20,50,5,20,      30,3,20,0,        91,100,41);
00004c  2029              MOVS     r0,#0x29
00004e  2164              MOVS     r1,#0x64
000050  225b              MOVS     r2,#0x5b
000052  2300              MOVS     r3,#0
000054  e9cd3207          STRD     r3,r2,[sp,#0x1c]
000058  e9cd1009          STRD     r1,r0,[sp,#0x24]
00005c  2014              MOVS     r0,#0x14
00005e  2103              MOVS     r1,#3
000060  221e              MOVS     r2,#0x1e
000062  e9cd0203          STRD     r0,r2,[sp,#0xc]
000066  e9cd1005          STRD     r1,r0,[sp,#0x14]
00006a  2005              MOVS     r0,#5
00006c  2132              MOVS     r1,#0x32
00006e  2214              MOVS     r2,#0x14
000070  e9cd2100          STRD     r2,r1,[sp,#0]
000074  9002              STR      r0,[sp,#8]
000076  461a              MOV      r2,r3
000078  0109              LSLS     r1,r1,#4
00007a  4618              MOV      r0,r3
00007c  f7fffffe          BL       Motorun
;;;844    
;;;845            Trip2= IsTripSwitchClosed() ;
000080  f7fffffe          BL       IsTripSwitchClosed
000084  4934              LDR      r1,|L16.344|
000086  7008              STRB     r0,[r1,#0]
;;;846            if(Trip2)
000088  4608              MOV      r0,r1
00008a  7800              LDRB     r0,[r0,#0]  ; Trip2
00008c  b140              CBZ      r0,|L16.160|
;;;847            {        
;;;848    					while(1)
00008e  e006              B        |L16.158|
                  |L16.144|
;;;849    					{
;;;850    						LCD_DispStr(304, 100, "¹âµç¿ª¹ØÒì³£", &aFont);
000090  ab0b              ADD      r3,sp,#0x2c
000092  a232              ADR      r2,|L16.348|
000094  2164              MOVS     r1,#0x64
000096  f44f7098          MOV      r0,#0x130
00009a  f7fffffe          BL       LCD_DispStr
                  |L16.158|
00009e  e7f7              B        |L16.144|
                  |L16.160|
;;;851    					}//
;;;852            }
;;;853            else
;;;854            {  
;;;855    						Motorun(  0,800,BACKWARD,0,     20,50,5,20,      30,3,20,200,      90,101,40);
0000a0  2028              MOVS     r0,#0x28
0000a2  2165              MOVS     r1,#0x65
0000a4  225a              MOVS     r2,#0x5a
0000a6  23c8              MOVS     r3,#0xc8
0000a8  e9cd3207          STRD     r3,r2,[sp,#0x1c]
0000ac  e9cd1009          STRD     r1,r0,[sp,#0x24]
0000b0  2014              MOVS     r0,#0x14
0000b2  2103              MOVS     r1,#3
0000b4  221e              MOVS     r2,#0x1e
0000b6  e9cd0203          STRD     r0,r2,[sp,#0xc]
0000ba  e9cd1005          STRD     r1,r0,[sp,#0x14]
0000be  2005              MOVS     r0,#5
0000c0  2132              MOVS     r1,#0x32
0000c2  2214              MOVS     r2,#0x14
0000c4  2300              MOVS     r3,#0
0000c6  e9cd2100          STRD     r2,r1,[sp,#0]
0000ca  9002              STR      r0,[sp,#8]
0000cc  2201              MOVS     r2,#1
0000ce  0109              LSLS     r1,r1,#4
0000d0  4618              MOV      r0,r3
0000d2  f7fffffe          BL       Motorun
0000d6  e025              B        |L16.292|
                  |L16.216|
;;;856            }
;;;857        }
;;;858        else
;;;859        {
;;;860            TripSwitchStatus=0;
0000d8  2000              MOVS     r0,#0
0000da  4927              LDR      r1,|L16.376|
0000dc  7008              STRB     r0,[r1,#0]
;;;861            Motorun(  0,6000,BACKWARD,0,     20,30,0,0,      30,0,0,200,      90,101,40);
0000de  2028              MOVS     r0,#0x28
0000e0  2165              MOVS     r1,#0x65
0000e2  225a              MOVS     r2,#0x5a
0000e4  23c8              MOVS     r3,#0xc8
0000e6  e9cd3207          STRD     r3,r2,[sp,#0x1c]
0000ea  e9cd1009          STRD     r1,r0,[sp,#0x24]
0000ee  2000              MOVS     r0,#0
0000f0  221e              MOVS     r2,#0x1e
0000f2  e9cd0203          STRD     r0,r2,[sp,#0xc]
0000f6  9005              STR      r0,[sp,#0x14]
0000f8  4611              MOV      r1,r2
0000fa  2214              MOVS     r2,#0x14
0000fc  9006              STR      r0,[sp,#0x18]
0000fe  4603              MOV      r3,r0
000100  e9cd2100          STRD     r2,r1,[sp,#0]
000104  9002              STR      r0,[sp,#8]
000106  2201              MOVS     r2,#1
000108  f2417170          MOV      r1,#0x1770
00010c  f7fffffe          BL       Motorun
;;;862            if(!TripSwitchStatus)
000110  4819              LDR      r0,|L16.376|
000112  7800              LDRB     r0,[r0,#0]  ; TripSwitchStatus
000114  b930              CBNZ     r0,|L16.292|
;;;863            {
;;;864                LCD_DispStr(304, 100, "¹âµç¿ª¹ØÒì³£", &aFont);/*ÏÔÊ¾¹âµç¿ª¹Ø³ö´í*/	
000116  ab0b              ADD      r3,sp,#0x2c
000118  a210              ADR      r2,|L16.348|
00011a  2164              MOVS     r1,#0x64
00011c  f44f7098          MOV      r0,#0x130
000120  f7fffffe          BL       LCD_DispStr
                  |L16.292|
;;;865    				}
;;;866    		}
;;;867    }
000124  b00d              ADD      sp,sp,#0x34
000126  bd00              POP      {pc}
;;;868    void onesided(long nfill)
                          ENDP

                  |L16.296|
000128  c392c387          DCB      195,146,195,135,195,134,195,183,195,151,195,148,194,188,195
00012c  c386c3b7
000130  c397c394
000134  c2bcc3  
000137  ac00              DCB      172,0
000139  00                DCB      0
00013a  00                DCB      0
00013b  00                DCB      0
                  |L16.316|
00013c  c2b4c3b3          DCB      194,180,195,179,194,181,195,167,194,187,195,186,194,179,195
000140  c2b5c3a7
000144  c2bbc3ba
000148  c2b3c3  
00014b  b5c38ac2          DCB      181,195,138,194,188,194,187,194,175,0
00014f  bcc2bbc2
000153  af00    
000155  00                DCB      0
000156  00                DCB      0
000157  00                DCB      0
                  |L16.344|
                          DCD      Trip2
                  |L16.348|
00015c  c2b9c3a2          DCB      194,185,195,162,194,181,195,167,194,191,194,170,194,185,195
000160  c2b5c3a7
000164  c2bfc2aa
000168  c2b9c3  
00016b  98c392c3          DCB      152,195,146,195,172,194,179,194,163,0
00016f  acc2b3c2
000173  a300    
000175  00                DCB      0
000176  00                DCB      0
000177  00                DCB      0
                  |L16.376|
                          DCD      TripSwitchStatus

                          AREA ||i.Motorun||, CODE, READONLY, ALIGN=2

                  Motorun PROC
;;;371    */
;;;372    void Motorun(u8 En,u16 FPulseNum,u8 Cw,u8 IfConv,
000000  e92d5ff0          PUSH     {r4-r12,lr}
;;;373    			u8 FStartSpeed,u8 FTargeSpeed,u8 FStepTimes_1,u16 FStepCount_1,
;;;374    			u8 FEndSpeed,u8 FStepTimes_2,u16 FStepCount_2,u16 FAddedNum,
;;;375    			u8 vnum1,u8 vnum2,u8 vnum3)//(  0,800,FORWARD,0,      20,50,5,20,      30,3,20,0,        91,150,161)
;;;376    {
000004  4605              MOV      r5,r0
000006  460e              MOV      r6,r1
000008  4614              MOV      r4,r2
00000a  461f              MOV      r7,r3
00000c  e9ddab0a          LDRD     r10,r11,[sp,#0x28]
000010  e9dd890c          LDRD     r8,r9,[sp,#0x30]
;;;377    	GPIO_WriteBit(GPIO_M1MO,GPIO_Pin_M1MO,Bit_RESET); 	
000014  2200              MOVS     r2,#0
000016  f44f6180          MOV      r1,#0x400
00001a  484a              LDR      r0,|L17.324|
00001c  f7fffffe          BL       GPIO_WriteBit
;;;378    	//µç´Å·§¶¯×÷
;;;379     	Valve(vnum1);
000020  9812              LDR      r0,[sp,#0x48]
000022  f7fffffe          BL       Valve
;;;380      Valve(vnum2);
000026  9813              LDR      r0,[sp,#0x4c]
000028  f7fffffe          BL       Valve
;;;381      Valve(vnum3); 
00002c  9814              LDR      r0,[sp,#0x50]
00002e  f7fffffe          BL       Valve
;;;382    	
;;;383    //	Valve(11);
;;;384    //  Valve(21);
;;;385    //  Valve(41); 
;;;386    //	Valve(81);
;;;387    //  Valve(91);
;;;388    //  Valve(101);
;;;389    	flagPress=En;
000032  4845              LDR      r0,|L17.328|
000034  7005              STRB     r5,[r0,#0]
;;;390    	GPIO_WriteBit(GPIO_M1EN, GPIO_Pin_M1EN, (BitAction)(1));
000036  2201              MOVS     r2,#1
000038  0251              LSLS     r1,r2,#9
00003a  4842              LDR      r0,|L17.324|
00003c  f7fffffe          BL       GPIO_WriteBit
;;;391    	GPIO_WriteBit(GPIO_M1CW, GPIO_Pin_M1CW, (BitAction)(Cw));//Cw;
000040  4622              MOV      r2,r4
000042  f44f5180          MOV      r1,#0x1000
000046  483f              LDR      r0,|L17.324|
000048  f7fffffe          BL       GPIO_WriteBit
;;;392    	//ÑÓÊ±30ms
;;;393    	bsp_DelayMS(30);
00004c  201e              MOVS     r0,#0x1e
00004e  f7fffffe          BL       bsp_DelayMS
;;;394    		   
;;;395    	//Í£Ö¹reset
;;;396    	GPIO_WriteBit(GPIO_M1RESET, GPIO_Pin_M1RESET, Bit_RESET);
000052  2200              MOVS     r2,#0
000054  2180              MOVS     r1,#0x80
000056  483b              LDR      r0,|L17.324|
000058  f7fffffe          BL       GPIO_WriteBit
;;;397    	//Âö³å¼ÆÊý¹éÁã
;;;398    	PulseCount	= 0;
00005c  2000              MOVS     r0,#0
00005e  493b              LDR      r1,|L17.332|
000060  8008              STRH     r0,[r1,#0]
;;;399    	//ÅäÖÃÈ«¾Ö±äÁ¿
;;;400    	PulseNum	= (u16)((FPulseNum<<2));
000062  f64f70ff          MOV      r0,#0xffff
000066  ea000086          AND      r0,r0,r6,LSL #2
00006a  4939              LDR      r1,|L17.336|
00006c  8008              STRH     r0,[r1,#0]
;;;401    	StartSpeed	= FStartSpeed<<1;
00006e  ea4f604a          LSL      r0,r10,#25
000072  0e00              LSRS     r0,r0,#24
000074  4937              LDR      r1,|L17.340|
000076  7008              STRB     r0,[r1,#0]
;;;402    	TargeSpeed	= FTargeSpeed<<1;
000078  ea4f604b          LSL      r0,r11,#25
00007c  0e00              LSRS     r0,r0,#24
00007e  4936              LDR      r1,|L17.344|
000080  7008              STRB     r0,[r1,#0]
;;;403    	StepTimes_1	= FStepTimes_1;
000082  4836              LDR      r0,|L17.348|
000084  f8808000          STRB     r8,[r0,#0]
;;;404    	StepCount_1	= FStepCount_1;
000088  4835              LDR      r0,|L17.352|
00008a  f8a09000          STRH     r9,[r0,#0]
;;;405    	EndSpeed	= FEndSpeed<<1;
00008e  980e              LDR      r0,[sp,#0x38]
000090  0640              LSLS     r0,r0,#25
000092  0e00              LSRS     r0,r0,#24
000094  4933              LDR      r1,|L17.356|
000096  7008              STRB     r0,[r1,#0]
;;;406    	StepTimes_2	= FStepTimes_2;
000098  4933              LDR      r1,|L17.360|
00009a  980f              LDR      r0,[sp,#0x3c]
00009c  7008              STRB     r0,[r1,#0]
;;;407    	StepCount_2	= FStepCount_2;
00009e  4933              LDR      r1,|L17.364|
0000a0  9810              LDR      r0,[sp,#0x40]
0000a2  8008              STRH     r0,[r1,#0]
;;;408    	AddedNum	= FAddedNum;
0000a4  4932              LDR      r1,|L17.368|
0000a6  9811              LDR      r0,[sp,#0x44]
0000a8  8008              STRH     r0,[r1,#0]
;;;409    
;;;410    	cw_status	= Cw;
0000aa  4832              LDR      r0,|L17.372|
0000ac  7004              STRB     r4,[r0,#0]
;;;411    	if(Cw==BACKWARD)
0000ae  2c01              CMP      r4,#1
0000b0  d105              BNE      |L17.190|
;;;412    		EXTI->IMR|=0x2000;
0000b2  4831              LDR      r0,|L17.376|
0000b4  6800              LDR      r0,[r0,#0]
0000b6  f4405000          ORR      r0,r0,#0x2000
0000ba  492f              LDR      r1,|L17.376|
0000bc  6008              STR      r0,[r1,#0]
                  |L17.190|
;;;413    	//Éè¶¨timer2
;;;414    	TIM2->ARR	= 2671;//122880/StartSpeed;
0000be  f640206f          MOV      r0,#0xa6f
0000c2  f04f4180          MOV      r1,#0x40000000
0000c6  62c8              STR      r0,[r1,#0x2c]
;;;415    	TIM_ITConfig(TIM2, TIM_IT_Update, ENABLE);
0000c8  2201              MOVS     r2,#1
0000ca  4611              MOV      r1,r2
0000cc  0790              LSLS     r0,r2,#30
0000ce  f7fffffe          BL       TIM_ITConfig
;;;416    	TIM_Cmd(TIM2,ENABLE);
0000d2  2101              MOVS     r1,#1
0000d4  0788              LSLS     r0,r1,#30
0000d6  f7fffffe          BL       TIM_Cmd
;;;417    	//Èç¹ûÐèÒªÔÚ´òÆø¹ý³ÌÖÐ½øÐÐÊý¾Ý²É¼¯
;;;418    	if(IfConv)
0000da  b16f              CBZ      r7,|L17.248|
;;;419    	{
;;;420    		bsp_DelayMS(300);
0000dc  f44f7096          MOV      r0,#0x12c
0000e0  f7fffffe          BL       bsp_DelayMS
;;;421    		AK_Conv();
0000e4  f7fffffe          BL       AK_Conv
;;;422    		while(PulseCount<=FStepTimes_1*FStepCount_1+200) ;
0000e8  bf00              NOP      
                  |L17.234|
0000ea  fb08f009          MUL      r0,r8,r9
0000ee  30c8              ADDS     r0,r0,#0xc8
0000f0  4916              LDR      r1,|L17.332|
0000f2  8809              LDRH     r1,[r1,#0]  ; PulseCount
0000f4  4288              CMP      r0,r1
0000f6  daf8              BGE      |L17.234|
                  |L17.248|
;;;423    	}
;;;424    	//µÈ´ýÔË¶¯½áÊø
;;;425    	while(PulseCount<PulseNum+AddedNum)
0000f8  e007              B        |L17.266|
                  |L17.250|
;;;426    	{
;;;427    		if(IsTripSwitchClosed() && cw_status==BACKWARD)
0000fa  f7fffffe          BL       IsTripSwitchClosed
0000fe  b120              CBZ      r0,|L17.266|
000100  481c              LDR      r0,|L17.372|
000102  7800              LDRB     r0,[r0,#0]  ; cw_status
000104  2801              CMP      r0,#1
000106  d100              BNE      |L17.266|
;;;428    			break;
000108  e008              B        |L17.284|
                  |L17.266|
00010a  4811              LDR      r0,|L17.336|
00010c  8800              LDRH     r0,[r0,#0]            ;425  ; PulseNum
00010e  4918              LDR      r1,|L17.368|
000110  8809              LDRH     r1,[r1,#0]            ;425  ; AddedNum
000112  4408              ADD      r0,r0,r1              ;425
000114  490d              LDR      r1,|L17.332|
000116  8809              LDRH     r1,[r1,#0]            ;425  ; PulseCount
000118  4288              CMP      r0,r1                 ;425
00011a  dcee              BGT      |L17.250|
                  |L17.284|
00011c  bf00              NOP      
;;;429    	}
;;;430    	TIM_ITConfig(TIM2, TIM_IT_Update, DISABLE);
00011e  2200              MOVS     r2,#0
000120  2101              MOVS     r1,#1
000122  0788              LSLS     r0,r1,#30
000124  f7fffffe          BL       TIM_ITConfig
;;;431    	TIM_Cmd(TIM2,DISABLE);
000128  2100              MOVS     r1,#0
00012a  f04f4080          MOV      r0,#0x40000000
00012e  f7fffffe          BL       TIM_Cmd
;;;432    	cw_status=255;
000132  20ff              MOVS     r0,#0xff
000134  490f              LDR      r1,|L17.372|
000136  7008              STRB     r0,[r1,#0]
;;;433    	PulseCount=0; 
000138  2000              MOVS     r0,#0
00013a  4904              LDR      r1,|L17.332|
00013c  8008              STRH     r0,[r1,#0]
;;;434    } 
00013e  e8bd9ff0          POP      {r4-r12,pc}
;;;435    
                          ENDP

000142  0000              DCW      0x0000
                  |L17.324|
                          DCD      0x40021c00
                  |L17.328|
                          DCD      flagPress
                  |L17.332|
                          DCD      PulseCount
                  |L17.336|
                          DCD      PulseNum
                  |L17.340|
                          DCD      StartSpeed
                  |L17.344|
                          DCD      TargeSpeed
                  |L17.348|
                          DCD      StepTimes_1
                  |L17.352|
                          DCD      StepCount_1
                  |L17.356|
                          DCD      EndSpeed
                  |L17.360|
                          DCD      StepTimes_2
                  |L17.364|
                          DCD      StepCount_2
                  |L17.368|
                          DCD      AddedNum
                  |L17.372|
                          DCD      cw_status
                  |L17.376|
                          DCD      0x40013c00

                          AREA ||i.PRINT_Init||, CODE, READONLY, ALIGN=2

                  PRINT_Init PROC
;;;808    }
;;;809    void PRINT_Init (void)
000000  b510              PUSH     {r4,lr}
;;;810    {
;;;811       u16 i=500;
000002  f44f74fa          MOV      r4,#0x1f4
;;;812    	while(BUSY)
000006  e006              B        |L18.22|
                  |L18.8|
;;;813    	{
;;;814    		i--;
000008  1e60              SUBS     r0,r4,#1
00000a  b284              UXTH     r4,r0
;;;815    		if(i==0)
00000c  b91c              CBNZ     r4,|L18.22|
;;;816    		{			
;;;817    			prnerr=1;
00000e  2001              MOVS     r0,#1
000010  490b              LDR      r1,|L18.64|
000012  7008              STRB     r0,[r1,#0]
;;;818    			break;
000014  e003              B        |L18.30|
                  |L18.22|
000016  480b              LDR      r0,|L18.68|
000018  6800              LDR      r0,[r0,#0]            ;812
00001a  2800              CMP      r0,#0                 ;812
00001c  d1f4              BNE      |L18.8|
                  |L18.30|
00001e  bf00              NOP      
;;;819    		}	
;;;820    	}
;;;821    	if(!prnerr)
000020  4807              LDR      r0,|L18.64|
000022  7800              LDRB     r0,[r0,#0]  ; prnerr
000024  b958              CBNZ     r0,|L18.62|
;;;822    	{
;;;823    		BUSY = 1;		 
000026  2001              MOVS     r0,#1
000028  4906              LDR      r1,|L18.68|
00002a  6008              STR      r0,[r1,#0]
;;;824    		STB  = 1; 
00002c  4906              LDR      r1,|L18.72|
00002e  f8c101a0          STR      r0,[r1,#0x1a0]
;;;825    		pprint(0x1b);
000032  201b              MOVS     r0,#0x1b
000034  f7fffffe          BL       pprint
;;;826    		pprint(0x40);     
000038  2040              MOVS     r0,#0x40
00003a  f7fffffe          BL       pprint
                  |L18.62|
;;;827    	}
;;;828    //	pprint(0x1c);pprint(0x26);  
;;;829    }
00003e  bd10              POP      {r4,pc}
;;;830    u8 Trip2;
                          ENDP

                  |L18.64|
                          DCD      prnerr
                  |L18.68|
                          DCD      0x42408124
                  |L18.72|
                          DCD      0x42408000

                          AREA ||i.PerkCheck||, CODE, READONLY, ALIGN=2

                  PerkCheck PROC
;;;1272   }
;;;1273   void PerkCheck(void)
000000  b570              PUSH     {r4-r6,lr}
;;;1274   {
000002  ed2d8b0a          VPUSH    {d8-d12}
;;;1275       u8 i;
;;;1276       u32 Intensityair;
;;;1277       u32 Intensityref;
;;;1278       s16 ratioc12 ;
;;;1279       Cartridge(9);
000006  2009              MOVS     r0,#9
000008  f7fffffe          BL       Cartridge
;;;1280       Intensityair=Intensity1;
00000c  4817              LDR      r0,|L19.108|
00000e  6804              LDR      r4,[r0,#0]  ; Intensity1
;;;1281       bsp_DelayMS(10);
000010  200a              MOVS     r0,#0xa
000012  f7fffffe          BL       bsp_DelayMS
;;;1282       Cartridge(8);
000016  2008              MOVS     r0,#8
000018  f7fffffe          BL       Cartridge
;;;1283       Intensityref=Intensity1;
00001c  4813              LDR      r0,|L19.108|
00001e  6805              LDR      r5,[r0,#0]  ; Intensity1
;;;1284       ratioc12 = (s16)((double)Intensityair / (double)Intensityref * 2000.0 - 1000.0);
000020  4628              MOV      r0,r5
000022  f7fffffe          BL       __aeabi_ui2d
000026  ec410b1b          VMOV     d11,r0,r1
00002a  4620              MOV      r0,r4
00002c  f7fffffe          BL       __aeabi_ui2d
000030  ec410b1c          VMOV     d12,r0,r1
000034  ec532b1b          VMOV     r2,r3,d11
000038  f7fffffe          BL       __aeabi_ddiv
00003c  ec410b1a          VMOV     d10,r0,r1
000040  ed9f0b0b          VLDR     d0,|L19.112|
000044  ec532b10          VMOV     r2,r3,d0
000048  f7fffffe          BL       __aeabi_dmul
00004c  ec410b19          VMOV     d9,r0,r1
000050  ed9f0b09          VLDR     d0,|L19.120|
000054  ec532b10          VMOV     r2,r3,d0
000058  f7fffffe          BL       __aeabi_dsub
00005c  ec410b18          VMOV     d8,r0,r1
000060  f7fffffe          BL       __aeabi_d2iz
000064  b206              SXTH     r6,r0
;;;1285   //	print_filter(ratioc12);
;;;1286   }
000066  ecbd8b0a          VPOP     {d8-d12}
00006a  bd70              POP      {r4-r6,pc}
;;;1287   
                          ENDP

                  |L19.108|
                          DCD      Intensity1
                  |L19.112|
000070  00000000          DCFD     0x409f400000000000 ; 2000
000074  409f4000
                  |L19.120|
000078  00000000          DCFD     0x408f400000000000 ; 1000
00007c  408f4000

                          AREA ||i.PowerCheck||, CODE, READONLY, ALIGN=2

                  PowerCheck PROC
;;;1048   }
;;;1049   void PowerCheck(void)
000000  b510              PUSH     {r4,lr}
;;;1050   {
000002  b08c              SUB      sp,sp,#0x30
;;;1051   	  u8	i,j;
;;;1052   	  ChopperCheck(1);
000004  2001              MOVS     r0,#1
000006  f7fffffe          BL       ChopperCheck
;;;1053       Valve(171);
00000a  20ab              MOVS     r0,#0xab
00000c  f7fffffe          BL       Valve
;;;1054       Valve(181);
000010  20b5              MOVS     r0,#0xb5
000012  f7fffffe          BL       Valve
;;;1055       for(i=0; i<2; i++)
000016  2400              MOVS     r4,#0
000018  e03a              B        |L20.144|
                  |L20.26|
;;;1056       {
;;;1057           Motorun(0,3000,FORWARD,0,  20,60,8,20, 30,5,20,0,    81,150,0);      //³éÆø
00001a  2000              MOVS     r0,#0
00001c  2196              MOVS     r1,#0x96
00001e  2251              MOVS     r2,#0x51
000020  e9cd0207          STRD     r0,r2,[sp,#0x1c]
000024  e9cd1009          STRD     r1,r0,[sp,#0x24]
000028  2014              MOVS     r0,#0x14
00002a  2105              MOVS     r1,#5
00002c  221e              MOVS     r2,#0x1e
00002e  e9cd0203          STRD     r0,r2,[sp,#0xc]
000032  e9cd1005          STRD     r1,r0,[sp,#0x14]
000036  2008              MOVS     r0,#8
000038  213c              MOVS     r1,#0x3c
00003a  2214              MOVS     r2,#0x14
00003c  2300              MOVS     r3,#0
00003e  e9cd2100          STRD     r2,r1,[sp,#0]
000042  9002              STR      r0,[sp,#8]
000044  461a              MOV      r2,r3
000046  f64031b8          MOV      r1,#0xbb8
00004a  4618              MOV      r0,r3
00004c  f7fffffe          BL       Motorun
;;;1058           Motorun(0,3000,BACKWARD,0, 20,60,8,20, 20,4,50,200,  81,151,161);      //´òÆø,ÇåÏ´
000050  20a1              MOVS     r0,#0xa1
000052  2197              MOVS     r1,#0x97
000054  2251              MOVS     r2,#0x51
000056  23c8              MOVS     r3,#0xc8
000058  e9cd3207          STRD     r3,r2,[sp,#0x1c]
00005c  e9cd1009          STRD     r1,r0,[sp,#0x24]
000060  2032              MOVS     r0,#0x32
000062  2104              MOVS     r1,#4
000064  2214              MOVS     r2,#0x14
000066  9203              STR      r2,[sp,#0xc]
000068  e9cd2104          STRD     r2,r1,[sp,#0x10]
00006c  9006              STR      r0,[sp,#0x18]
00006e  2008              MOVS     r0,#8
000070  213c              MOVS     r1,#0x3c
000072  2300              MOVS     r3,#0
000074  e9cd2100          STRD     r2,r1,[sp,#0]
000078  9002              STR      r0,[sp,#8]
00007a  2201              MOVS     r2,#1
00007c  f64031b8          MOV      r1,#0xbb8
000080  4618              MOV      r0,r3
000082  f7fffffe          BL       Motorun
;;;1059   
;;;1060           Valve(160);
000086  20a0              MOVS     r0,#0xa0
000088  f7fffffe          BL       Valve
00008c  1c60              ADDS     r0,r4,#1              ;1055
00008e  b2c4              UXTB     r4,r0                 ;1055
                  |L20.144|
000090  2c02              CMP      r4,#2                 ;1055
000092  dbc2              BLT      |L20.26|
;;;1061       }
;;;1062       Motorun(0,4000,FORWARD,0,      20,60,8,20,  30,5,20,0,   81,150,0);      //³éÆø
000094  2000              MOVS     r0,#0
000096  2196              MOVS     r1,#0x96
000098  2251              MOVS     r2,#0x51
00009a  e9cd0207          STRD     r0,r2,[sp,#0x1c]
00009e  e9cd1009          STRD     r1,r0,[sp,#0x24]
0000a2  2014              MOVS     r0,#0x14
0000a4  2105              MOVS     r1,#5
0000a6  221e              MOVS     r2,#0x1e
0000a8  e9cd0203          STRD     r0,r2,[sp,#0xc]
0000ac  e9cd1005          STRD     r1,r0,[sp,#0x14]
0000b0  2008              MOVS     r0,#8
0000b2  213c              MOVS     r1,#0x3c
0000b4  2214              MOVS     r2,#0x14
0000b6  2300              MOVS     r3,#0
0000b8  e9cd2100          STRD     r2,r1,[sp,#0]
0000bc  9002              STR      r0,[sp,#8]
0000be  461a              MOV      r2,r3
0000c0  f44f617a          MOV      r1,#0xfa0
0000c4  4618              MOV      r0,r3
0000c6  f7fffffe          BL       Motorun
;;;1063       bsp_DelayMS(20);
0000ca  2014              MOVS     r0,#0x14
0000cc  f7fffffe          BL       bsp_DelayMS
;;;1064       Motorun(0,4000,BACKWARD,0,     30,60,8,20,  30,1,20,1200,81,151,160);      //´òÆø£¬ÂýÍÆ1~3r/s£¬
0000d0  20a0              MOVS     r0,#0xa0
0000d2  2197              MOVS     r1,#0x97
0000d4  2251              MOVS     r2,#0x51
0000d6  f44f6396          MOV      r3,#0x4b0
0000da  e9cd3207          STRD     r3,r2,[sp,#0x1c]
0000de  e9cd1009          STRD     r1,r0,[sp,#0x24]
0000e2  2014              MOVS     r0,#0x14
0000e4  2101              MOVS     r1,#1
0000e6  221e              MOVS     r2,#0x1e
0000e8  e9cd0203          STRD     r0,r2,[sp,#0xc]
0000ec  e9cd1005          STRD     r1,r0,[sp,#0x14]
0000f0  2008              MOVS     r0,#8
0000f2  213c              MOVS     r1,#0x3c
0000f4  2300              MOVS     r3,#0
0000f6  e9cd2100          STRD     r2,r1,[sp,#0]
0000fa  9002              STR      r0,[sp,#8]
0000fc  2201              MOVS     r2,#1
0000fe  f44f617a          MOV      r1,#0xfa0
000102  4618              MOV      r0,r3
000104  f7fffffe          BL       Motorun
;;;1065       Valve(150);
000108  2096              MOVS     r0,#0x96
00010a  f7fffffe          BL       Valve
;;;1066       Valve(161);
00010e  20a1              MOVS     r0,#0xa1
000110  f7fffffe          BL       Valve
;;;1067       for(i=0; i<60; i++)
000114  2400              MOVS     r4,#0
000116  e019              B        |L20.332|
                  |L20.280|
;;;1068       {
;;;1069         AK_Conv();	
000118  f7fffffe          BL       AK_Conv
;;;1070   			C12[i]=Intensity1;
00011c  4811              LDR      r0,|L20.356|
00011e  6800              LDR      r0,[r0,#0]  ; Intensity1
000120  4911              LDR      r1,|L20.360|
000122  f8410024          STR      r0,[r1,r4,LSL #2]
;;;1071   			C13[i]=Intensity2;       
000126  4811              LDR      r0,|L20.364|
000128  6800              LDR      r0,[r0,#0]  ; Intensity2
00012a  4911              LDR      r1,|L20.368|
00012c  f8410024          STR      r0,[r1,r4,LSL #2]
;;;1072   //		print_power(i+1,1);		
;;;1073      
;;;1074   			if(m_bMeasureBreak==0)
000130  4810              LDR      r0,|L20.372|
000132  7800              LDRB     r0,[r0,#0]  ; m_bMeasureBreak
000134  b920              CBNZ     r0,|L20.320|
;;;1075   			{
;;;1076   					bsp_DelayMS(350);
000136  f44f70af          MOV      r0,#0x15e
00013a  f7fffffe          BL       bsp_DelayMS
00013e  e003              B        |L20.328|
                  |L20.320|
;;;1077   			}
;;;1078   			else
;;;1079   			{		
;;;1080   					m_bMeasureBreak=0;
000140  2000              MOVS     r0,#0
000142  490c              LDR      r1,|L20.372|
000144  7008              STRB     r0,[r1,#0]
;;;1081   						break;
000146  e003              B        |L20.336|
                  |L20.328|
000148  1c60              ADDS     r0,r4,#1              ;1067
00014a  b2c4              UXTB     r4,r0                 ;1067
                  |L20.332|
00014c  2c3c              CMP      r4,#0x3c              ;1067
00014e  dbe3              BLT      |L20.280|
                  |L20.336|
000150  bf00              NOP      
;;;1082   			}
;;;1083       }
;;;1084       Valve(151);
000152  2097              MOVS     r0,#0x97
000154  f7fffffe          BL       Valve
;;;1085       Valve(160);					   
000158  20a0              MOVS     r0,#0xa0
00015a  f7fffffe          BL       Valve
;;;1086   }	
00015e  b00c              ADD      sp,sp,#0x30
000160  bd10              POP      {r4,pc}
;;;1087   
                          ENDP

000162  0000              DCW      0x0000
                  |L20.356|
                          DCD      Intensity1
                  |L20.360|
                          DCD      ||C12||
                  |L20.364|
                          DCD      Intensity2
                  |L20.368|
                          DCD      ||C13||
                  |L20.372|
                          DCD      m_bMeasureBreak

                          AREA ||i.Speaker||, CODE, READONLY, ALIGN=2

                  Speaker PROC
;;;989    }
;;;990    void Speaker(u8 Num)
000000  b510              PUSH     {r4,lr}
;;;991    {
000002  4604              MOV      r4,r0
;;;992    	while(Num-->0)
000004  e012              B        |L21.44|
                  |L21.6|
;;;993    	{
;;;994    		GPIO_WriteBit(GPIO_SPEAKER, GPIO_Pin_SPEAKER, Bit_SET);
000006  2201              MOVS     r2,#1
000008  0291              LSLS     r1,r2,#10
00000a  480b              LDR      r0,|L21.56|
00000c  f7fffffe          BL       GPIO_WriteBit
;;;995    		//500ms
;;;996    		bsp_DelayMS(500);
000010  f44f70fa          MOV      r0,#0x1f4
000014  f7fffffe          BL       bsp_DelayMS
;;;997    		GPIO_WriteBit(GPIO_SPEAKER, GPIO_Pin_SPEAKER, Bit_RESET);
000018  2200              MOVS     r2,#0
00001a  f44f6180          MOV      r1,#0x400
00001e  4806              LDR      r0,|L21.56|
000020  f7fffffe          BL       GPIO_WriteBit
;;;998    		bsp_DelayMS(500);
000024  f44f70fa          MOV      r0,#0x1f4
000028  f7fffffe          BL       bsp_DelayMS
                  |L21.44|
00002c  1e20              SUBS     r0,r4,#0              ;992
00002e  f1a40101          SUB      r1,r4,#1              ;992
000032  b2cc              UXTB     r4,r1                 ;992
000034  dce7              BGT      |L21.6|
;;;999    	}
;;;1000   }
000036  bd10              POP      {r4,pc}
;;;1001   
                          ENDP

                  |L21.56|
                          DCD      0x40021800

                          AREA ||i.Speaker_Config||, CODE, READONLY, ALIGN=2

                  Speaker_Config PROC
;;;592    
;;;593    void Speaker_Config(void)
000000  b51c              PUSH     {r2-r4,lr}
;;;594    {
;;;595    	GPIO_InitTypeDef 	GPIO_InitStructure;
;;;596    	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_SPEAKER;
000002  f44f6080          MOV      r0,#0x400
000006  9000              STR      r0,[sp,#0]
;;;597    	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
000008  2003              MOVS     r0,#3
00000a  f88d0005          STRB     r0,[sp,#5]
;;;598    	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
00000e  2001              MOVS     r0,#1
000010  f88d0004          STRB     r0,[sp,#4]
;;;599    	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;		/* ÉèÎªÍÆÍìÄ£Ê½ */
000014  2000              MOVS     r0,#0
000016  f88d0006          STRB     r0,[sp,#6]
;;;600    	GPIO_Init(GPIO_SPEAKER, &GPIO_InitStructure);
00001a  4669              MOV      r1,sp
00001c  4804              LDR      r0,|L22.48|
00001e  f7fffffe          BL       GPIO_Init
;;;601    	GPIO_WriteBit(GPIO_SPEAKER, GPIO_Pin_SPEAKER, Bit_RESET);
000022  2200              MOVS     r2,#0
000024  f44f6180          MOV      r1,#0x400
000028  4801              LDR      r0,|L22.48|
00002a  f7fffffe          BL       GPIO_WriteBit
;;;602    }
00002e  bd1c              POP      {r2-r4,pc}
;;;603    
                          ENDP

                  |L22.48|
                          DCD      0x40021800

                          AREA ||i.Sys_100msClock_Config||, CODE, READONLY, ALIGN=2

                  Sys_100msClock_Config PROC
;;;972    }
;;;973    void Sys_100msClock_Config(void)
000000  b50e              PUSH     {r1-r3,lr}
;;;974    {
;;;975    	TIM_TimeBaseInitTypeDef  TIM_TimeBaseStructure;
;;;976    	//ÖÜÆÚ100ms
;;;977    	TIM_TimeBaseStructure.TIM_Period	= 6143; 
000002  f24170ff          MOV      r0,#0x17ff
000006  9001              STR      r0,[sp,#4]
;;;978    	TIM_TimeBaseStructure.TIM_Prescaler = 999;
000008  f24030e7          MOV      r0,#0x3e7
00000c  f8ad0000          STRH     r0,[sp,#0]
;;;979    	TIM_TimeBaseStructure.TIM_ClockDivision = 0;
000010  2000              MOVS     r0,#0
000012  f8ad0008          STRH     r0,[sp,#8]
;;;980    	TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;
000016  f8ad0002          STRH     r0,[sp,#2]
;;;981    	TIM_TimeBaseStructure.TIM_RepetitionCounter=0;
00001a  f88d000a          STRB     r0,[sp,#0xa]
;;;982    	TIM_TimeBaseInit(TIM3, &TIM_TimeBaseStructure);
00001e  4669              MOV      r1,sp
000020  480a              LDR      r0,|L23.76|
000022  f7fffffe          BL       TIM_TimeBaseInit
;;;983    	//¼ÆÊýÆ÷ÉÏÒçÖÐ¶ÏÉè¶¨
;;;984    	TIM_ClearFlag(TIM3, TIM_FLAG_Update);/*Çå³ý¸üÐÂ±êÖ¾Î»*/
000026  2101              MOVS     r1,#1
000028  4808              LDR      r0,|L23.76|
00002a  f7fffffe          BL       TIM_ClearFlag
;;;985    	TIM_ARRPreloadConfig(TIM3, DISABLE);/*Ô¤×°ÔØ¼Ä´æÆ÷µÄÄÚÈÝ±»Á¢¼´´«ËÍµ½Ó°×Ó¼Ä´æÆ÷ */
00002e  2100              MOVS     r1,#0
000030  4806              LDR      r0,|L23.76|
000032  f7fffffe          BL       TIM_ARRPreloadConfig
;;;986    	//Æô¶¯¶¨Ê±Æ÷
;;;987    	TIM_ITConfig(TIM3, TIM_IT_Update, ENABLE);   
000036  2201              MOVS     r2,#1
000038  4611              MOV      r1,r2
00003a  4804              LDR      r0,|L23.76|
00003c  f7fffffe          BL       TIM_ITConfig
;;;988    	TIM_Cmd(TIM3, ENABLE);
000040  2101              MOVS     r1,#1
000042  4802              LDR      r0,|L23.76|
000044  f7fffffe          BL       TIM_Cmd
;;;989    }
000048  bd0e              POP      {r1-r3,pc}
;;;990    void Speaker(u8 Num)
                          ENDP

00004a  0000              DCW      0x0000
                  |L23.76|
                          DCD      0x40000400

                          AREA ||i.Test||, CODE, READONLY, ALIGN=2

                  Test PROC
;;;1124   -------------------------------------*/
;;;1125   s16 Test(void)
000000  b500              PUSH     {lr}
;;;1126   { 
000002  b08f              SUB      sp,sp,#0x3c
;;;1127   	FONT_T aFont;
;;;1128   	int	i;
;;;1129   	n	= 0;
000004  2000              MOVS     r0,#0
000006  49f6              LDR      r1,|L24.992|
000008  8008              STRH     r0,[r1,#0]
;;;1130   //m_lCf[6]=2190;
;;;1131   	Go=0;
00000a  49f6              LDR      r1,|L24.996|
00000c  7008              STRB     r0,[r1,#0]
;;;1132     if(m_lCf[7]<3000||m_lCf[7]>4500)  
00000e  48f6              LDR      r0,|L24.1000|
000010  ed900b0e          VLDR     d0,[r0,#0x38]
000014  ed8d0b0a          VSTR     d0,[sp,#0x28]
000018  ed9f0bf4          VLDR     d0,|L24.1004|
00001c  ec532b10          VMOV     r2,r3,d0
000020  ed9d0b0a          VLDR     d0,[sp,#0x28]
000024  ec510b10          VMOV     r0,r1,d0
000028  f7fffffe          BL       __aeabi_cdcmple
00002c  d30f              BCC      |L24.78|
00002e  48ee              LDR      r0,|L24.1000|
000030  ed900b0e          VLDR     d0,[r0,#0x38]
000034  ed8d0b0a          VSTR     d0,[sp,#0x28]
000038  ed9f0bee          VLDR     d0,|L24.1012|
00003c  ec532b10          VMOV     r2,r3,d0
000040  ed9d0b0a          VLDR     d0,[sp,#0x28]
000044  ec510b10          VMOV     r0,r1,d0
000048  f7fffffe          BL       __aeabi_cdrcmple
00004c  d204              BCS      |L24.88|
                  |L24.78|
;;;1133     m_lCf[7]=4000;
00004e  ed9f0beb          VLDR     d0,|L24.1020|
000052  48e5              LDR      r0,|L24.1000|
000054  ed800b0e          VSTR     d0,[r0,#0x38]
                  |L24.88|
;;;1134     T= m_lCf[7];
000058  48e3              LDR      r0,|L24.1000|
00005a  ed900b0e          VLDR     d0,[r0,#0x38]
00005e  ed800b0e          VSTR     d0,[r0,#0x38]
;;;1135   	
;;;1136   	aFont.FontCode = FC_ST_48;		/* ×ÖÌå´úÂë 16µãÕó */
000062  2003              MOVS     r0,#3
000064  f8ad0034          STRH     r0,[sp,#0x34]
;;;1137   	aFont.FrontColor = CL_WHITE;	/* ×ÖÌåÑÕÉ« */
000068  f64f70ff          MOV      r0,#0xffff
00006c  f8ad0036          STRH     r0,[sp,#0x36]
;;;1138   	aFont.BackColor = CL_MASK;		/* ÎÄ×Ö±³¾°ÑÕÉ« */
000070  f6491099          MOV      r0,#0x9999
000074  f8ad0038          STRH     r0,[sp,#0x38]
;;;1139   	aFont.Space = 0;
000078  2000              MOVS     r0,#0
00007a  f8ad003a          STRH     r0,[sp,#0x3a]
;;;1140   	LCD_DispStr(304, 100, "¹âµç¿ª¹ØÒì³£", &aFont);
00007e  ab0d              ADD      r3,sp,#0x34
000080  a2e0              ADR      r2,|L24.1028|
000082  2164              MOVS     r1,#0x64
000084  f44f7098          MOV      r0,#0x130
000088  f7fffffe          BL       LCD_DispStr
;;;1141   	while(Go<=3)
00008c  e2e4              B        |L24.1624|
                  |L24.142|
;;;1142   	{
;;;1143   		//·ÅÆø
;;;1144   		Valve(101);
00008e  2065              MOVS     r0,#0x65
000090  f7fffffe          BL       Valve
;;;1145   		Valve(40);//ÅÅÆø
000094  2028              MOVS     r0,#0x28
000096  f7fffffe          BL       Valve
;;;1146   		Valve(170);
00009a  20aa              MOVS     r0,#0xaa
00009c  f7fffffe          BL       Valve
;;;1147   		Valve(180);
0000a0  20b4              MOVS     r0,#0xb4
0000a2  f7fffffe          BL       Valve
;;;1148   		bsp_DelayMS(1000);
0000a6  f44f707a          MOV      r0,#0x3e8
0000aa  f7fffffe          BL       bsp_DelayMS
;;;1149   		Pressure0=ADC_1(ADC_FS);				//¶ÁÈ¡Ñ¹Á¦±í³õÊ¼ADÖµ
0000ae  2001              MOVS     r0,#1
0000b0  f7fffffe          BL       ADC_1
0000b4  49da              LDR      r1,|L24.1056|
0000b6  8008              STRH     r0,[r1,#0]
;;;1150   		Motorun(0,2000,FORWARD,0,     30,60,5,20,     30,6,20,0,        91,100,40);
0000b8  2028              MOVS     r0,#0x28
0000ba  2164              MOVS     r1,#0x64
0000bc  225b              MOVS     r2,#0x5b
0000be  2300              MOVS     r3,#0
0000c0  e9cd3207          STRD     r3,r2,[sp,#0x1c]
0000c4  e9cd1009          STRD     r1,r0,[sp,#0x24]
0000c8  2014              MOVS     r0,#0x14
0000ca  2106              MOVS     r1,#6
0000cc  221e              MOVS     r2,#0x1e
0000ce  e9cd0203          STRD     r0,r2,[sp,#0xc]
0000d2  e9cd1005          STRD     r1,r0,[sp,#0x14]
0000d6  2005              MOVS     r0,#5
0000d8  213c              MOVS     r1,#0x3c
0000da  e9cd2100          STRD     r2,r1,[sp,#0]
0000de  9002              STR      r0,[sp,#8]
0000e0  461a              MOV      r2,r3
0000e2  f44f61fa          MOV      r1,#0x7d0
0000e6  4618              MOV      r0,r3
0000e8  f7fffffe          BL       Motorun
;;;1151   		bsp_DelayMS(50);
0000ec  2032              MOVS     r0,#0x32
0000ee  f7fffffe          BL       bsp_DelayMS
;;;1152   		Motorun(0,2000,BACKWARD,0,    30,60,5,20,     30,6,20,200,      90,101,40);
0000f2  2028              MOVS     r0,#0x28
0000f4  2165              MOVS     r1,#0x65
0000f6  225a              MOVS     r2,#0x5a
0000f8  23c8              MOVS     r3,#0xc8
0000fa  e9cd3207          STRD     r3,r2,[sp,#0x1c]
0000fe  e9cd1009          STRD     r1,r0,[sp,#0x24]
000102  2014              MOVS     r0,#0x14
000104  2106              MOVS     r1,#6
000106  221e              MOVS     r2,#0x1e
000108  e9cd0203          STRD     r0,r2,[sp,#0xc]
00010c  e9cd1005          STRD     r1,r0,[sp,#0x14]
000110  2005              MOVS     r0,#5
000112  213c              MOVS     r1,#0x3c
000114  2300              MOVS     r3,#0
000116  e9cd2100          STRD     r2,r1,[sp,#0]
00011a  9002              STR      r0,[sp,#8]
00011c  2201              MOVS     r2,#1
00011e  f44f61fa          MOV      r1,#0x7d0
000122  4618              MOV      r0,r3
000124  f7fffffe          BL       Motorun
;;;1153   		bsp_DelayMS(100);
000128  2064              MOVS     r0,#0x64
00012a  f7fffffe          BL       bsp_DelayMS
;;;1154   		//´Ó·§ÃÅ11ÎüÆø
;;;1155   		Motorun(0,2000,FORWARD,0,     30,60,5,20,     30,6,20,0,        91,100,40);
00012e  2028              MOVS     r0,#0x28
000130  2164              MOVS     r1,#0x64
000132  225b              MOVS     r2,#0x5b
000134  2300              MOVS     r3,#0
000136  e9cd3207          STRD     r3,r2,[sp,#0x1c]
00013a  e9cd1009          STRD     r1,r0,[sp,#0x24]
00013e  2014              MOVS     r0,#0x14
000140  2106              MOVS     r1,#6
000142  221e              MOVS     r2,#0x1e
000144  e9cd0203          STRD     r0,r2,[sp,#0xc]
000148  e9cd1005          STRD     r1,r0,[sp,#0x14]
00014c  2005              MOVS     r0,#5
00014e  213c              MOVS     r1,#0x3c
000150  e9cd2100          STRD     r2,r1,[sp,#0]
000154  9002              STR      r0,[sp,#8]
000156  461a              MOV      r2,r3
000158  f44f61fa          MOV      r1,#0x7d0
00015c  4618              MOV      r0,r3
00015e  f7fffffe          BL       Motorun
;;;1156   		bsp_DelayMS(50);
000162  2032              MOVS     r0,#0x32
000164  f7fffffe          BL       bsp_DelayMS
;;;1157   		Motorun(0,2000,BACKWARD,0,    30,60,5,20,     30,6,20,200,      90,101,40);
000168  2028              MOVS     r0,#0x28
00016a  2165              MOVS     r1,#0x65
00016c  225a              MOVS     r2,#0x5a
00016e  23c8              MOVS     r3,#0xc8
000170  e9cd3207          STRD     r3,r2,[sp,#0x1c]
000174  e9cd1009          STRD     r1,r0,[sp,#0x24]
000178  2014              MOVS     r0,#0x14
00017a  2106              MOVS     r1,#6
00017c  221e              MOVS     r2,#0x1e
00017e  e9cd0203          STRD     r0,r2,[sp,#0xc]
000182  e9cd1005          STRD     r1,r0,[sp,#0x14]
000186  2005              MOVS     r0,#5
000188  213c              MOVS     r1,#0x3c
00018a  2300              MOVS     r3,#0
00018c  e9cd2100          STRD     r2,r1,[sp,#0]
000190  9002              STR      r0,[sp,#8]
000192  2201              MOVS     r2,#1
000194  f44f61fa          MOV      r1,#0x7d0
000198  4618              MOV      r0,r3
00019a  f7fffffe          BL       Motorun
;;;1158   		bsp_DelayMS(100);
00019e  2064              MOVS     r0,#0x64
0001a0  f7fffffe          BL       bsp_DelayMS
;;;1159   		Motorun(0,T,FORWARD,0,     30,60,5,20,     30,7,20,0,        91,100,41);
0001a4  4890              LDR      r0,|L24.1000|
0001a6  ed900b0e          VLDR     d0,[r0,#0x38]
0001aa  ed8d0b0a          VSTR     d0,[sp,#0x28]
0001ae  ed9d0b0a          VLDR     d0,[sp,#0x28]
0001b2  ec510b10          VMOV     r0,r1,d0
0001b6  f7fffffe          BL       __aeabi_d2uiz
0001ba  b280              UXTH     r0,r0
0001bc  900c              STR      r0,[sp,#0x30]
0001be  2029              MOVS     r0,#0x29
0001c0  2164              MOVS     r1,#0x64
0001c2  225b              MOVS     r2,#0x5b
0001c4  2300              MOVS     r3,#0
0001c6  e9cd3207          STRD     r3,r2,[sp,#0x1c]
0001ca  e9cd1009          STRD     r1,r0,[sp,#0x24]
0001ce  2014              MOVS     r0,#0x14
0001d0  2107              MOVS     r1,#7
0001d2  221e              MOVS     r2,#0x1e
0001d4  e9cd0203          STRD     r0,r2,[sp,#0xc]
0001d8  e9cd1005          STRD     r1,r0,[sp,#0x14]
0001dc  2005              MOVS     r0,#5
0001de  213c              MOVS     r1,#0x3c
0001e0  e9cd2100          STRD     r2,r1,[sp,#0]
0001e4  9002              STR      r0,[sp,#8]
0001e6  461a              MOV      r2,r3
0001e8  4618              MOV      r0,r3
0001ea  990c              LDR      r1,[sp,#0x30]
0001ec  f7fffffe          BL       Motorun
;;;1160   		bsp_DelayMS(1500);
0001f0  f24050dc          MOV      r0,#0x5dc
0001f4  f7fffffe          BL       bsp_DelayMS
;;;1161   		Motorun(1,T,BACKWARD,0,    20,30,1,20,     20,4,50,200,      90,101,41);
0001f8  487b              LDR      r0,|L24.1000|
0001fa  ed900b0e          VLDR     d0,[r0,#0x38]
0001fe  ed8d0b0a          VSTR     d0,[sp,#0x28]
000202  ed9d0b0a          VLDR     d0,[sp,#0x28]
000206  ec510b10          VMOV     r0,r1,d0
00020a  f7fffffe          BL       __aeabi_d2uiz
00020e  b280              UXTH     r0,r0
000210  900c              STR      r0,[sp,#0x30]
000212  2029              MOVS     r0,#0x29
000214  2165              MOVS     r1,#0x65
000216  225a              MOVS     r2,#0x5a
000218  23c8              MOVS     r3,#0xc8
00021a  e9cd3207          STRD     r3,r2,[sp,#0x1c]
00021e  e9cd1009          STRD     r1,r0,[sp,#0x24]
000222  2132              MOVS     r1,#0x32
000224  2004              MOVS     r0,#4
000226  2214              MOVS     r2,#0x14
000228  9203              STR      r2,[sp,#0xc]
00022a  e9cd2004          STRD     r2,r0,[sp,#0x10]
00022e  9106              STR      r1,[sp,#0x18]
000230  2001              MOVS     r0,#1
000232  211e              MOVS     r1,#0x1e
000234  2300              MOVS     r3,#0
000236  e9cd2100          STRD     r2,r1,[sp,#0]
00023a  9002              STR      r0,[sp,#8]
00023c  4602              MOV      r2,r0
00023e  990c              LDR      r1,[sp,#0x30]
000240  f7fffffe          BL       Motorun
;;;1162   	//	bsp_DelayMS(400);
;;;1163   		//¹Ø±Õ·§ÃÅ9±£³ÖÑùÆ·³ØÆøÑ¹
;;;1164   		Valve(100);
000244  2064              MOVS     r0,#0x64
000246  f7fffffe          BL       Valve
;;;1165   		LeakageCheck(Go);
00024a  4866              LDR      r0,|L24.996|
00024c  7800              LDRB     r0,[r0,#0]  ; Go
00024e  f7fffffe          BL       LeakageCheck
;;;1166   		Pressure1=ADC_1(ADC_FS);         //¶ÁÈ¡Ñ¹Á¦±íÊÔ²âADÖµ
000252  2001              MOVS     r0,#1
000254  f7fffffe          BL       ADC_1
000258  4972              LDR      r1,|L24.1060|
00025a  8008              STRH     r0,[r1,#0]
;;;1167   		Pressure1=Pressure1-Pressure0;
00025c  4608              MOV      r0,r1
00025e  8800              LDRH     r0,[r0,#0]  ; Pressure1
000260  496f              LDR      r1,|L24.1056|
000262  8809              LDRH     r1,[r1,#0]  ; Pressure0
000264  1a40              SUBS     r0,r0,r1
000266  496f              LDR      r1,|L24.1060|
000268  8008              STRH     r0,[r1,#0]
;;;1168   		if(m_lCf[8]==400)
00026a  485f              LDR      r0,|L24.1000|
00026c  ed900b10          VLDR     d0,[r0,#0x40]
000270  ed8d0b0a          VSTR     d0,[sp,#0x28]
000274  ed9f0b6c          VLDR     d0,|L24.1064|
000278  ec532b10          VMOV     r2,r3,d0
00027c  ed9d0b0a          VLDR     d0,[sp,#0x28]
000280  ec510b10          VMOV     r0,r1,d0
000284  f7fffffe          BL       __aeabi_cdcmpeq
000288  d12d              BNE      |L24.742|
;;;1169   		{
;;;1170   		// 	if(m_lCf[6]<1700||m_lCf[6]>2200)  m_lCf[6]=1900;
;;;1171   	   	if(m_lCf[6]<2000||m_lCf[6]>2400)
00028a  4857              LDR      r0,|L24.1000|
00028c  ed900b0c          VLDR     d0,[r0,#0x30]
000290  ed8d0b0a          VSTR     d0,[sp,#0x28]
000294  ed9f0b66          VLDR     d0,|L24.1072|
000298  ec532b10          VMOV     r2,r3,d0
00029c  ed9d0b0a          VLDR     d0,[sp,#0x28]
0002a0  ec510b10          VMOV     r0,r1,d0
0002a4  f7fffffe          BL       __aeabi_cdcmple
0002a8  d30f              BCC      |L24.714|
0002aa  484f              LDR      r0,|L24.1000|
0002ac  ed900b0c          VLDR     d0,[r0,#0x30]
0002b0  ed8d0b0a          VSTR     d0,[sp,#0x28]
0002b4  ed9f0b60          VLDR     d0,|L24.1080|
0002b8  ec532b10          VMOV     r2,r3,d0
0002bc  ed9d0b0a          VLDR     d0,[sp,#0x28]
0002c0  ec510b10          VMOV     r0,r1,d0
0002c4  f7fffffe          BL       __aeabi_cdrcmple
0002c8  d20c              BCS      |L24.740|
                  |L24.714|
;;;1172   			{
;;;1173   			 	m_lCf[6]=2190;
0002ca  ed9f0b5d          VLDR     d0,|L24.1088|
0002ce  4846              LDR      r0,|L24.1000|
0002d0  ed800b0c          VSTR     d0,[r0,#0x30]
;;;1174   				temp1=3620;
0002d4  f6406024          MOV      r0,#0xe24
0002d8  495b              LDR      r1,|L24.1096|
0002da  8008              STRH     r0,[r1,#0]
;;;1175   				temp2=3500;
0002dc  f64050ac          MOV      r0,#0xdac
0002e0  495a              LDR      r1,|L24.1100|
0002e2  8008              STRH     r0,[r1,#0]
                  |L24.740|
0002e4  e0e1              B        |L24.1194|
                  |L24.742|
;;;1176   			}
;;;1177   		}
;;;1178   		else if(m_lCf[8]==300)
0002e6  4840              LDR      r0,|L24.1000|
0002e8  ed900b10          VLDR     d0,[r0,#0x40]
0002ec  ed8d0b0a          VSTR     d0,[sp,#0x28]
0002f0  ed9f0b57          VLDR     d0,|L24.1104|
0002f4  ec532b10          VMOV     r2,r3,d0
0002f8  ed9d0b0a          VLDR     d0,[sp,#0x28]
0002fc  ec510b10          VMOV     r0,r1,d0
000300  f7fffffe          BL       __aeabi_cdcmpeq
000304  d12d              BNE      |L24.866|
;;;1179   		{
;;;1180   			if(m_lCf[6]<1300||m_lCf[6]>1800)
000306  4838              LDR      r0,|L24.1000|
000308  ed900b0c          VLDR     d0,[r0,#0x30]
00030c  ed8d0b0a          VSTR     d0,[sp,#0x28]
000310  ed9f0b51          VLDR     d0,|L24.1112|
000314  ec532b10          VMOV     r2,r3,d0
000318  ed9d0b0a          VLDR     d0,[sp,#0x28]
00031c  ec510b10          VMOV     r0,r1,d0
000320  f7fffffe          BL       __aeabi_cdcmple
000324  d30f              BCC      |L24.838|
000326  4830              LDR      r0,|L24.1000|
000328  ed900b0c          VLDR     d0,[r0,#0x30]
00032c  ed8d0b0a          VSTR     d0,[sp,#0x28]
000330  ed9f0b4b          VLDR     d0,|L24.1120|
000334  ec532b10          VMOV     r2,r3,d0
000338  ed9d0b0a          VLDR     d0,[sp,#0x28]
00033c  ec510b10          VMOV     r0,r1,d0
000340  f7fffffe          BL       __aeabi_cdrcmple
000344  d20c              BCS      |L24.864|
                  |L24.838|
;;;1181   			{
;;;1182   			  m_lCf[6]=1580;
000346  ed9f0b48          VLDR     d0,|L24.1128|
00034a  4827              LDR      r0,|L24.1000|
00034c  ed800b0c          VSTR     d0,[r0,#0x30]
;;;1183   				temp1=3250;
000350  f64040b2          MOV      r0,#0xcb2
000354  493c              LDR      r1,|L24.1096|
000356  8008              STRH     r0,[r1,#0]
;;;1184   				temp2=2850;
000358  f6403022          MOV      r0,#0xb22
00035c  493b              LDR      r1,|L24.1100|
00035e  8008              STRH     r0,[r1,#0]
                  |L24.864|
000360  e0a3              B        |L24.1194|
                  |L24.866|
;;;1185   			}
;;;1186   		}
;;;1187   		else if(m_lCf[8]==200)
000362  4821              LDR      r0,|L24.1000|
000364  ed900b10          VLDR     d0,[r0,#0x40]
000368  ed8d0b0a          VSTR     d0,[sp,#0x28]
00036c  ed9f0b40          VLDR     d0,|L24.1136|
000370  ec532b10          VMOV     r2,r3,d0
000374  ed9d0b0a          VLDR     d0,[sp,#0x28]
000378  ec510b10          VMOV     r0,r1,d0
00037c  f7fffffe          BL       __aeabi_cdcmpeq
000380  d12d              BNE      |L24.990|
;;;1188   		{
;;;1189   			if(m_lCf[6]<800||m_lCf[6]>1400)
000382  4819              LDR      r0,|L24.1000|
000384  ed900b0c          VLDR     d0,[r0,#0x30]
000388  ed8d0b0a          VSTR     d0,[sp,#0x28]
00038c  ed9f0b3a          VLDR     d0,|L24.1144|
000390  ec532b10          VMOV     r2,r3,d0
000394  ed9d0b0a          VLDR     d0,[sp,#0x28]
000398  ec510b10          VMOV     r0,r1,d0
00039c  f7fffffe          BL       __aeabi_cdcmple
0003a0  d30f              BCC      |L24.962|
0003a2  4811              LDR      r0,|L24.1000|
0003a4  ed900b0c          VLDR     d0,[r0,#0x30]
0003a8  ed8d0b0a          VSTR     d0,[sp,#0x28]
0003ac  ed9f0b34          VLDR     d0,|L24.1152|
0003b0  ec532b10          VMOV     r2,r3,d0
0003b4  ed9d0b0a          VLDR     d0,[sp,#0x28]
0003b8  ec510b10          VMOV     r0,r1,d0
0003bc  f7fffffe          BL       __aeabi_cdrcmple
0003c0  d273              BCS      |L24.1194|
                  |L24.962|
;;;1190   			{
;;;1191   				m_lCf[6]=1100;
0003c2  ed9f0b31          VLDR     d0,|L24.1160|
0003c6  4808              LDR      r0,|L24.1000|
0003c8  ed800b0c          VSTR     d0,[r0,#0x30]
;;;1192   				temp1=2520;
0003cc  f64010d8          MOV      r0,#0x9d8
0003d0  491d              LDR      r1,|L24.1096|
0003d2  8008              STRH     r0,[r1,#0]
;;;1193   				temp2=2400;
0003d4  f44f6016          MOV      r0,#0x960
0003d8  491c              LDR      r1,|L24.1100|
0003da  8008              STRH     r0,[r1,#0]
0003dc  e065              B        |L24.1194|
                  |L24.990|
0003de  e057              B        |L24.1168|
                  |L24.992|
                          DCD      n
                  |L24.996|
                          DCD      ||Go||
                  |L24.1000|
                          DCD      m_lCf
                  |L24.1004|
0003ec  00000000          DCFD     0x40a7700000000000 ; 3000
0003f0  40a77000
                  |L24.1012|
0003f4  00000000          DCFD     0x40b1940000000000 ; 4500
0003f8  40b19400
                  |L24.1020|
0003fc  00000000          DCFD     0x40af400000000000 ; 4000
000400  40af4000
                  |L24.1028|
000404  c2b9c3a2          DCB      194,185,195,162,194,181,195,167,194,191,194,170,194,185,195
000408  c2b5c3a7
00040c  c2bfc2aa
000410  c2b9c3  
000413  98c392c3          DCB      152,195,146,195,172,194,179,194,163,0
000417  acc2b3c2
00041b  a300    
00041d  00                DCB      0
00041e  00                DCB      0
00041f  00                DCB      0
                  |L24.1056|
                          DCD      Pressure0
                  |L24.1060|
                          DCD      Pressure1
                  |L24.1064|
000428  00000000          DCFD     0x4079000000000000 ; 400
00042c  40790000
                  |L24.1072|
000430  00000000          DCFD     0x409f400000000000 ; 2000
000434  409f4000
                  |L24.1080|
000438  00000000          DCFD     0x40a2c00000000000 ; 2400
00043c  40a2c000
                  |L24.1088|
000440  00000000          DCFD     0x40a11c0000000000 ; 2190
000444  40a11c00
                  |L24.1096|
                          DCD      temp1
                  |L24.1100|
                          DCD      temp2
                  |L24.1104|
000450  00000000          DCFD     0x4072c00000000000 ; 300
000454  4072c000
                  |L24.1112|
000458  00000000          DCFD     0x4094500000000000 ; 1300
00045c  40945000
                  |L24.1120|
000460  00000000          DCFD     0x409c200000000000 ; 1800
000464  409c2000
                  |L24.1128|
000468  00000000          DCFD     0x4098b00000000000 ; 1580
00046c  4098b000
                  |L24.1136|
000470  00000000          DCFD     0x4069000000000000 ; 200
000474  40690000
                  |L24.1144|
000478  00000000          DCFD     0x4089000000000000 ; 800
00047c  40890000
                  |L24.1152|
000480  00000000          DCFD     0x4095e00000000000 ; 1400
000484  4095e000
                  |L24.1160|
000488  00000000          DCFD     0x4091300000000000 ; 1100
00048c  40913000
                  |L24.1168|
;;;1194   			}
;;;1195   		}
;;;1196   		else
;;;1197   		{
;;;1198   			m_lCf[6]=2190;
000490  ed1f0b15          VLDR     d0,|L24.1088|
000494  4892              LDR      r0,|L24.1760|
000496  ed800b0c          VSTR     d0,[r0,#0x30]
;;;1199   				temp1=3620;
00049a  f6406024          MOV      r0,#0xe24
00049e  4991              LDR      r1,|L24.1764|
0004a0  8008              STRH     r0,[r1,#0]
;;;1200   				temp2=3500;
0004a2  f64050ac          MOV      r0,#0xdac
0004a6  4990              LDR      r1,|L24.1768|
0004a8  8008              STRH     r0,[r1,#0]
                  |L24.1194|
;;;1201   		}
;;;1202   		n=(unsigned int)(m_lCf[6]*T/Pressure1);   // Ðè¸ù¾ÝÊµÑé½á¹ûÐ£Õý	1084 3800   1110 0000
0004aa  4890              LDR      r0,|L24.1772|
0004ac  8800              LDRH     r0,[r0,#0]  ; Pressure1
0004ae  f7fffffe          BL       __aeabi_ui2d
0004b2  e9cd0108          STRD     r0,r1,[sp,#0x20]
0004b6  488a              LDR      r0,|L24.1760|
0004b8  ed900b0e          VLDR     d0,[r0,#0x38]
0004bc  ed8d0b04          VSTR     d0,[sp,#0x10]
0004c0  ed900b0c          VLDR     d0,[r0,#0x30]
0004c4  ed8d0b02          VSTR     d0,[sp,#8]
0004c8  ed9d0b04          VLDR     d0,[sp,#0x10]
0004cc  ec532b10          VMOV     r2,r3,d0
0004d0  ed9d0b02          VLDR     d0,[sp,#8]
0004d4  ec510b10          VMOV     r0,r1,d0
0004d8  f7fffffe          BL       __aeabi_dmul
0004dc  e9cd0106          STRD     r0,r1,[sp,#0x18]
0004e0  ed9d0b08          VLDR     d0,[sp,#0x20]
0004e4  ec532b10          VMOV     r2,r3,d0
0004e8  ed9d0b06          VLDR     d0,[sp,#0x18]
0004ec  ec510b10          VMOV     r0,r1,d0
0004f0  f7fffffe          BL       __aeabi_ddiv
0004f4  e9cd010a          STRD     r0,r1,[sp,#0x28]
0004f8  ed9d0b0a          VLDR     d0,[sp,#0x28]
0004fc  ec510b10          VMOV     r0,r1,d0
000500  f7fffffe          BL       __aeabi_d2uiz
000504  497a              LDR      r1,|L24.1776|
000506  8008              STRH     r0,[r1,#0]
;;;1203   		Valve(101);
000508  2065              MOVS     r0,#0x65
00050a  f7fffffe          BL       Valve
;;;1204   		Valve(40);
00050e  2028              MOVS     r0,#0x28
000510  f7fffffe          BL       Valve
;;;1205   		bsp_DelayMS(1000);
000514  f44f707a          MOV      r0,#0x3e8
000518  f7fffffe          BL       bsp_DelayMS
;;;1206    		Motorun(0,T,FORWARD,0,      30,60,8,20,  30,6,20,0,     91,101,40);      //³éÆø
00051c  4870              LDR      r0,|L24.1760|
00051e  ed900b0e          VLDR     d0,[r0,#0x38]
000522  ed8d0b0a          VSTR     d0,[sp,#0x28]
000526  ed9d0b0a          VLDR     d0,[sp,#0x28]
00052a  ec510b10          VMOV     r0,r1,d0
00052e  f7fffffe          BL       __aeabi_d2uiz
000532  b280              UXTH     r0,r0
000534  900c              STR      r0,[sp,#0x30]
000536  2028              MOVS     r0,#0x28
000538  2165              MOVS     r1,#0x65
00053a  225b              MOVS     r2,#0x5b
00053c  2300              MOVS     r3,#0
00053e  e9cd3207          STRD     r3,r2,[sp,#0x1c]
000542  e9cd1009          STRD     r1,r0,[sp,#0x24]
000546  2014              MOVS     r0,#0x14
000548  2106              MOVS     r1,#6
00054a  221e              MOVS     r2,#0x1e
00054c  e9cd0203          STRD     r0,r2,[sp,#0xc]
000550  e9cd1005          STRD     r1,r0,[sp,#0x14]
000554  2008              MOVS     r0,#8
000556  213c              MOVS     r1,#0x3c
000558  e9cd2100          STRD     r2,r1,[sp,#0]
00055c  9002              STR      r0,[sp,#8]
00055e  461a              MOV      r2,r3
000560  4618              MOV      r0,r3
000562  990c              LDR      r1,[sp,#0x30]
000564  f7fffffe          BL       Motorun
;;;1207   		bsp_DelayMS(1500);	
000568  f24050dc          MOV      r0,#0x5dc
00056c  f7fffffe          BL       bsp_DelayMS
;;;1208   		Motorun(0,T-n,BACKWARD,0,   30,30,0,0,  30,0,0,0,      90,101,40);
000570  485f              LDR      r0,|L24.1776|
000572  8800              LDRH     r0,[r0,#0]  ; n
000574  f7fffffe          BL       __aeabi_ui2d
000578  e9cd0108          STRD     r0,r1,[sp,#0x20]
00057c  4858              LDR      r0,|L24.1760|
00057e  ed900b0e          VLDR     d0,[r0,#0x38]
000582  ed8d0b06          VSTR     d0,[sp,#0x18]
000586  ed9d0b06          VLDR     d0,[sp,#0x18]
00058a  ec532b10          VMOV     r2,r3,d0
00058e  ed9d0b08          VLDR     d0,[sp,#0x20]
000592  ec510b10          VMOV     r0,r1,d0
000596  f7fffffe          BL       __aeabi_drsub
00059a  e9cd010a          STRD     r0,r1,[sp,#0x28]
00059e  ed9d0b0a          VLDR     d0,[sp,#0x28]
0005a2  ec510b10          VMOV     r0,r1,d0
0005a6  f7fffffe          BL       __aeabi_d2uiz
0005aa  b280              UXTH     r0,r0
0005ac  900c              STR      r0,[sp,#0x30]
0005ae  2028              MOVS     r0,#0x28
0005b0  2165              MOVS     r1,#0x65
0005b2  225a              MOVS     r2,#0x5a
0005b4  2300              MOVS     r3,#0
0005b6  e9cd3207          STRD     r3,r2,[sp,#0x1c]
0005ba  e9cd1009          STRD     r1,r0,[sp,#0x24]
0005be  221e              MOVS     r2,#0x1e
0005c0  e9cd3203          STRD     r3,r2,[sp,#0xc]
0005c4  9305              STR      r3,[sp,#0x14]
0005c6  9200              STR      r2,[sp,#0]
0005c8  9306              STR      r3,[sp,#0x18]
0005ca  e9cd2301          STRD     r2,r3,[sp,#4]
0005ce  2201              MOVS     r2,#1
0005d0  2000              MOVS     r0,#0
0005d2  990c              LDR      r1,[sp,#0x30]
0005d4  f7fffffe          BL       Motorun
;;;1209   		bsp_DelayMS(1000);				  
0005d8  f44f707a          MOV      r0,#0x3e8
0005dc  f7fffffe          BL       bsp_DelayMS
;;;1210   		Motorun(1,n,BACKWARD,0,     20,30,1,20,     20,4,50,200,   90,101,41);
0005e0  2029              MOVS     r0,#0x29
0005e2  2165              MOVS     r1,#0x65
0005e4  225a              MOVS     r2,#0x5a
0005e6  23c8              MOVS     r3,#0xc8
0005e8  e9cd3207          STRD     r3,r2,[sp,#0x1c]
0005ec  e9cd1009          STRD     r1,r0,[sp,#0x24]
0005f0  2032              MOVS     r0,#0x32
0005f2  2104              MOVS     r1,#4
0005f4  2214              MOVS     r2,#0x14
0005f6  9203              STR      r2,[sp,#0xc]
0005f8  e9cd2104          STRD     r2,r1,[sp,#0x10]
0005fc  9006              STR      r0,[sp,#0x18]
0005fe  2001              MOVS     r0,#1
000600  211e              MOVS     r1,#0x1e
000602  2300              MOVS     r3,#0
000604  e9cd2100          STRD     r2,r1,[sp,#0]
000608  9002              STR      r0,[sp,#8]
00060a  4602              MOV      r2,r0
00060c  4838              LDR      r0,|L24.1776|
00060e  8801              LDRH     r1,[r0,#0]  ; n
000610  2001              MOVS     r0,#1
000612  f7fffffe          BL       Motorun
;;;1211   		Valve(100);
000616  2064              MOVS     r0,#0x64
000618  f7fffffe          BL       Valve
;;;1212   	//	LeakageCheck(Go);  
;;;1213   	  bsp_DelayMS(5000);
00061c  f2413088          MOV      r0,#0x1388
000620  f7fffffe          BL       bsp_DelayMS
;;;1214   		Pressure2=ADC_1(ADC_FS);
000624  2001              MOVS     r0,#1
000626  f7fffffe          BL       ADC_1
00062a  4932              LDR      r1,|L24.1780|
00062c  8008              STRH     r0,[r1,#0]
;;;1215   	//  if(Pressure2<3380&&Pressure2>3200)
;;;1216    	  if(Pressure2<temp1&&Pressure2>temp2)
00062e  4608              MOV      r0,r1
000630  8800              LDRH     r0,[r0,#0]  ; Pressure2
000632  492c              LDR      r1,|L24.1764|
000634  8809              LDRH     r1,[r1,#0]  ; temp1
000636  4288              CMP      r0,r1
000638  da09              BGE      |L24.1614|
00063a  482e              LDR      r0,|L24.1780|
00063c  8800              LDRH     r0,[r0,#0]  ; Pressure2
00063e  492a              LDR      r1,|L24.1768|
000640  8809              LDRH     r1,[r1,#0]  ; temp2
000642  4288              CMP      r0,r1
000644  dd03              BLE      |L24.1614|
;;;1217       { Go=6; }
000646  2006              MOVS     r0,#6
000648  492b              LDR      r1,|L24.1784|
00064a  7008              STRB     r0,[r1,#0]
00064c  e004              B        |L24.1624|
                  |L24.1614|
;;;1218   		else 
;;;1219   		{ Go++; }
00064e  482a              LDR      r0,|L24.1784|
000650  7800              LDRB     r0,[r0,#0]  ; Go
000652  1c40              ADDS     r0,r0,#1
000654  4928              LDR      r1,|L24.1784|
000656  7008              STRB     r0,[r1,#0]
                  |L24.1624|
000658  4827              LDR      r0,|L24.1784|
00065a  7800              LDRB     r0,[r0,#0]            ;1141  ; Go
00065c  2803              CMP      r0,#3                 ;1141
00065e  f77fad16          BLE      |L24.142|
;;;1220   	}
;;;1221   	m=T-n;  //¿Û³ým¸öÂö³åºó·´ÍÆ¼´¿ÉµÃµ½0.4MPaÆøÑ¹//568
000662  4823              LDR      r0,|L24.1776|
000664  8800              LDRH     r0,[r0,#0]  ; n
000666  f7fffffe          BL       __aeabi_ui2d
00066a  e9cd0108          STRD     r0,r1,[sp,#0x20]
00066e  481c              LDR      r0,|L24.1760|
000670  ed900b0e          VLDR     d0,[r0,#0x38]
000674  ed8d0b06          VSTR     d0,[sp,#0x18]
000678  ed9d0b06          VLDR     d0,[sp,#0x18]
00067c  ec532b10          VMOV     r2,r3,d0
000680  ed9d0b08          VLDR     d0,[sp,#0x20]
000684  ec510b10          VMOV     r0,r1,d0
000688  f7fffffe          BL       __aeabi_drsub
00068c  e9cd010a          STRD     r0,r1,[sp,#0x28]
000690  ed9d0b0a          VLDR     d0,[sp,#0x28]
000694  ec510b10          VMOV     r0,r1,d0
000698  f7fffffe          BL       __aeabi_d2iz
00069c  b200              SXTH     r0,r0
00069e  4917              LDR      r1,|L24.1788|
0006a0  8008              STRH     r0,[r1,#0]
;;;1222   	//·ÅÆø
;;;1223   	Valve(11);
0006a2  200b              MOVS     r0,#0xb
0006a4  f7fffffe          BL       Valve
;;;1224   	Valve(40);//ÅÅÆø
0006a8  2028              MOVS     r0,#0x28
0006aa  f7fffffe          BL       Valve
;;;1225   	Valve(170);
0006ae  20aa              MOVS     r0,#0xaa
0006b0  f7fffffe          BL       Valve
;;;1226   	Valve(180);
0006b4  20b4              MOVS     r0,#0xb4
0006b6  f7fffffe          BL       Valve
;;;1227   	bsp_DelayMS(1000);
0006ba  f44f707a          MOV      r0,#0x3e8
0006be  f7fffffe          BL       bsp_DelayMS
;;;1228   	//È«²¿¹Ø±Õ
;;;1229   	Valve(100);
0006c2  2064              MOVS     r0,#0x64
0006c4  f7fffffe          BL       Valve
;;;1230   	bsp_DelayMS(100);
0006c8  2064              MOVS     r0,#0x64
0006ca  f7fffffe          BL       bsp_DelayMS
;;;1231   	reTest = 0;
0006ce  2000              MOVS     r0,#0
0006d0  490b              LDR      r1,|L24.1792|
0006d2  7008              STRB     r0,[r1,#0]
;;;1232   	return m;
0006d4  4809              LDR      r0,|L24.1788|
0006d6  f9b00000          LDRSH    r0,[r0,#0]  ; m
;;;1233   }
0006da  b00f              ADD      sp,sp,#0x3c
0006dc  bd00              POP      {pc}
;;;1234   void  	Cartridge(u8 wash)
                          ENDP

0006de  0000              DCW      0x0000
                  |L24.1760|
                          DCD      m_lCf
                  |L24.1764|
                          DCD      temp1
                  |L24.1768|
                          DCD      temp2
                  |L24.1772|
                          DCD      Pressure1
                  |L24.1776|
                          DCD      n
                  |L24.1780|
                          DCD      Pressure2
                  |L24.1784|
                          DCD      ||Go||
                  |L24.1788|
                          DCD      m
                  |L24.1792|
                          DCD      reTest

                          AREA ||i.Valve||, CODE, READONLY, ALIGN=2

                  Valve PROC
;;;269    }
;;;270    void Valve(unsigned char Vnum)
000000  b510              PUSH     {r4,lr}
;;;271    {
000002  4604              MOV      r4,r0
;;;272    	switch(Vnum)
000004  2c3d              CMP      r4,#0x3d
000006  d073              BEQ      |L25.240|
000008  dc1d              BGT      |L25.70|
00000a  2c1f              CMP      r4,#0x1f
00000c  d05d              BEQ      |L25.202|
00000e  dc0d              BGT      |L25.44|
000010  2c14              CMP      r4,#0x14
000012  d046              BEQ      |L25.162|
000014  dc05              BGT      |L25.34|
000016  b384              CBZ      r4,|L25.122|
000018  2c0a              CMP      r4,#0xa
00001a  d035              BEQ      |L25.136|
00001c  2c0b              CMP      r4,#0xb
                  |L25.30|
00001e  d168              BNE      |L25.242|
000020  e039              B        |L25.150|
                  |L25.34|
000022  2c15              CMP      r4,#0x15
000024  d044              BEQ      |L25.176|
000026  2c1e              CMP      r4,#0x1e
000028  d1f9              BNE      |L25.30|
00002a  e047              B        |L25.188|
                  |L25.44|
00002c  2c32              CMP      r4,#0x32
00002e  d061              BEQ      |L25.244|
000030  dc04              BGT      |L25.60|
000032  2c28              CMP      r4,#0x28
000034  d04f              BEQ      |L25.214|
000036  2c29              CMP      r4,#0x29
000038  d1f1              BNE      |L25.30|
00003a  e053              B        |L25.228|
                  |L25.60|
00003c  2c33              CMP      r4,#0x33
00003e  d05f              BEQ      |L25.256|
000040  2c3c              CMP      r4,#0x3c
000042  d1ec              BNE      |L25.30|
000044  e062              B        |L25.268|
                  |L25.70|
000046  2c64              CMP      r4,#0x64
000048  d073              BEQ      |L25.306|
00004a  dc0e              BGT      |L25.106|
00004c  2c51              CMP      r4,#0x51
00004e  d071              BEQ      |L25.308|
000050  dc06              BGT      |L25.96|
000052  2c46              CMP      r4,#0x46
000054  d067              BEQ      |L25.294|
000056  2c47              CMP      r4,#0x47
000058  d06f              BEQ      |L25.314|
00005a  2c50              CMP      r4,#0x50
00005c  d1df              BNE      |L25.30|
00005e  e072              B        |L25.326|
                  |L25.96|
000060  2c5a              CMP      r4,#0x5a
000062  d07f              BEQ      |L25.356|
000064  2c5b              CMP      r4,#0x5b
000066  d1da              BNE      |L25.30|
000068  e082              B        |L25.368|
                  |L25.106|
00006a  2c6f              CMP      r4,#0x6f
00006c  d071              BEQ      |L25.338|
00006e  dc05              BGT      |L25.124|
000070  2c65              CMP      r4,#0x65
000072  d06f              BEQ      |L25.340|
000074  2c6e              CMP      r4,#0x6e
000076  d1d2              BNE      |L25.30|
000078  e08c              B        |L25.404|
                  |L25.122|
00007a  e004              B        |L25.134|
                  |L25.124|
00007c  2c78              CMP      r4,#0x78
00007e  d06a              BEQ      |L25.342|
000080  2c79              CMP      r4,#0x79
000082  d1cc              BNE      |L25.30|
000084  e098              B        |L25.440|
                  |L25.134|
;;;273    	{
;;;274    	case 0:		
;;;275    		break;
000086  e09e              B        |L25.454|
                  |L25.136|
;;;276    	case 10:
;;;277    		GPIO_WriteBit(GPIO_Valve1_4, GPIO_Pin_Valve1, Bit_RESET);
000088  2200              MOVS     r2,#0
00008a  f44f6100          MOV      r1,#0x800
00008e  484f              LDR      r0,|L25.460|
000090  f7fffffe          BL       GPIO_WriteBit
;;;278    		break;
000094  e097              B        |L25.454|
                  |L25.150|
;;;279    	case 11:
;;;280    		GPIO_WriteBit(GPIO_Valve1_4, GPIO_Pin_Valve1, Bit_SET);
000096  2201              MOVS     r2,#1
000098  02d1              LSLS     r1,r2,#11
00009a  484c              LDR      r0,|L25.460|
00009c  f7fffffe          BL       GPIO_WriteBit
;;;281    		break;
0000a0  e091              B        |L25.454|
                  |L25.162|
;;;282    	case 20:
;;;283    		GPIO_WriteBit(GPIO_Valve1_4, GPIO_Pin_Valve2, Bit_RESET);
0000a2  2200              MOVS     r2,#0
0000a4  f44f5100          MOV      r1,#0x2000
0000a8  4848              LDR      r0,|L25.460|
0000aa  f7fffffe          BL       GPIO_WriteBit
;;;284    		break;
0000ae  e08a              B        |L25.454|
                  |L25.176|
;;;285    	case 21:
;;;286    		GPIO_WriteBit(GPIO_Valve1_4, GPIO_Pin_Valve2, Bit_SET);
0000b0  2201              MOVS     r2,#1
0000b2  0351              LSLS     r1,r2,#13
0000b4  4845              LDR      r0,|L25.460|
0000b6  f7fffffe          BL       GPIO_WriteBit
;;;287    		break;
0000ba  e084              B        |L25.454|
                  |L25.188|
;;;288    	case 30:
;;;289    		GPIO_WriteBit(GPIO_Valve1_4, GPIO_Pin_Valve3, Bit_RESET);
0000bc  2200              MOVS     r2,#0
0000be  f44f4180          MOV      r1,#0x4000
0000c2  4842              LDR      r0,|L25.460|
0000c4  f7fffffe          BL       GPIO_WriteBit
;;;290    		break;
0000c8  e07d              B        |L25.454|
                  |L25.202|
;;;291    	case 31:
;;;292    		GPIO_WriteBit(GPIO_Valve1_4, GPIO_Pin_Valve3, Bit_SET);
0000ca  2201              MOVS     r2,#1
0000cc  0391              LSLS     r1,r2,#14
0000ce  483f              LDR      r0,|L25.460|
0000d0  f7fffffe          BL       GPIO_WriteBit
;;;293    		break;
0000d4  e077              B        |L25.454|
                  |L25.214|
;;;294    	case 40:
;;;295    		GPIO_WriteBit(GPIO_Valve1_4, GPIO_Pin_Valve4, Bit_RESET);
0000d6  2200              MOVS     r2,#0
0000d8  f44f4100          MOV      r1,#0x8000
0000dc  483b              LDR      r0,|L25.460|
0000de  f7fffffe          BL       GPIO_WriteBit
;;;296    		break;
0000e2  e070              B        |L25.454|
                  |L25.228|
;;;297    	case 41:
;;;298    		GPIO_WriteBit(GPIO_Valve1_4, GPIO_Pin_Valve4,  Bit_SET);
0000e4  2201              MOVS     r2,#1
0000e6  03d1              LSLS     r1,r2,#15
0000e8  4838              LDR      r0,|L25.460|
0000ea  f7fffffe          BL       GPIO_WriteBit
;;;299    		break;
0000ee  e06a              B        |L25.454|
                  |L25.240|
0000f0  e013              B        |L25.282|
                  |L25.242|
0000f2  e067              B        |L25.452|
                  |L25.244|
;;;300    	case 50:
;;;301    		GPIO_WriteBit(GPIO_Valve5_6, GPIO_Pin_Valve5, Bit_RESET);
0000f4  2200              MOVS     r2,#0
0000f6  2120              MOVS     r1,#0x20
0000f8  4835              LDR      r0,|L25.464|
0000fa  f7fffffe          BL       GPIO_WriteBit
;;;302    		break;
0000fe  e062              B        |L25.454|
                  |L25.256|
;;;303    	case 51:
;;;304    		GPIO_WriteBit(GPIO_Valve5_6, GPIO_Pin_Valve5,  Bit_SET);
000100  2201              MOVS     r2,#1
000102  2120              MOVS     r1,#0x20
000104  4832              LDR      r0,|L25.464|
000106  f7fffffe          BL       GPIO_WriteBit
;;;305    		break;
00010a  e05c              B        |L25.454|
                  |L25.268|
;;;306    	case 60:
;;;307    		GPIO_WriteBit(GPIO_Valve5_6, GPIO_Pin_Valve6, Bit_RESET);
00010c  2200              MOVS     r2,#0
00010e  f44f7180          MOV      r1,#0x100
000112  482f              LDR      r0,|L25.464|
000114  f7fffffe          BL       GPIO_WriteBit
;;;308    		break;
000118  e055              B        |L25.454|
                  |L25.282|
;;;309    	case 61:
;;;310    		GPIO_WriteBit(GPIO_Valve5_6, GPIO_Pin_Valve6, Bit_SET);
00011a  2201              MOVS     r2,#1
00011c  0211              LSLS     r1,r2,#8
00011e  482c              LDR      r0,|L25.464|
000120  f7fffffe          BL       GPIO_WriteBit
;;;311    		break;
000124  e04f              B        |L25.454|
                  |L25.294|
;;;312    	case 70:
;;;313    		GPIO_WriteBit(GPIO_Valve7_8, GPIO_Pin_Valve7, Bit_RESET);
000126  2200              MOVS     r2,#0
000128  2101              MOVS     r1,#1
00012a  482a              LDR      r0,|L25.468|
00012c  f7fffffe          BL       GPIO_WriteBit
;;;314    		break;
000130  e049              B        |L25.454|
                  |L25.306|
000132  e023              B        |L25.380|
                  |L25.308|
000134  e010              B        |L25.344|
000136  e000              B        |L25.314|
000138  e014              B        |L25.356|
                  |L25.314|
;;;315    	case 71:
;;;316    		GPIO_WriteBit(GPIO_Valve7_8, GPIO_Pin_Valve7, Bit_SET);
00013a  2201              MOVS     r2,#1
00013c  4611              MOV      r1,r2
00013e  4825              LDR      r0,|L25.468|
000140  f7fffffe          BL       GPIO_WriteBit
;;;317    		break;
000144  e03f              B        |L25.454|
                  |L25.326|
;;;318    	case 80:
;;;319    		GPIO_WriteBit(GPIO_Valve7_8, GPIO_Pin_Valve8, Bit_RESET);
000146  2200              MOVS     r2,#0
000148  2102              MOVS     r1,#2
00014a  4822              LDR      r0,|L25.468|
00014c  f7fffffe          BL       GPIO_WriteBit
;;;320    		break;
000150  e039              B        |L25.454|
                  |L25.338|
000152  e025              B        |L25.416|
                  |L25.340|
000154  e018              B        |L25.392|
                  |L25.342|
000156  e029              B        |L25.428|
                  |L25.344|
;;;321    	case 81:
;;;322    		GPIO_WriteBit(GPIO_Valve7_8, GPIO_Pin_Valve8, Bit_SET);
000158  2201              MOVS     r2,#1
00015a  2102              MOVS     r1,#2
00015c  481d              LDR      r0,|L25.468|
00015e  f7fffffe          BL       GPIO_WriteBit
;;;323    		break;
000162  e030              B        |L25.454|
                  |L25.356|
;;;324    	case 90:
;;;325    		GPIO_WriteBit(GPIO_Valve9_12, GPIO_Pin_Valve9, Bit_RESET);
000164  2200              MOVS     r2,#0
000166  2110              MOVS     r1,#0x10
000168  481b              LDR      r0,|L25.472|
00016a  f7fffffe          BL       GPIO_WriteBit
;;;326    		break;
00016e  e02a              B        |L25.454|
                  |L25.368|
;;;327    	case 91:
;;;328    		GPIO_WriteBit(GPIO_Valve9_12, GPIO_Pin_Valve9, Bit_SET);
000170  2201              MOVS     r2,#1
000172  2110              MOVS     r1,#0x10
000174  4818              LDR      r0,|L25.472|
000176  f7fffffe          BL       GPIO_WriteBit
;;;329    		break;
00017a  e024              B        |L25.454|
                  |L25.380|
;;;330    	case 100:
;;;331    		GPIO_WriteBit(GPIO_Valve9_12, GPIO_Pin_Valve10, Bit_RESET);
00017c  2200              MOVS     r2,#0
00017e  2120              MOVS     r1,#0x20
000180  4815              LDR      r0,|L25.472|
000182  f7fffffe          BL       GPIO_WriteBit
;;;332    		break;
000186  e01e              B        |L25.454|
                  |L25.392|
;;;333    	case 101:
;;;334    		GPIO_WriteBit(GPIO_Valve9_12, GPIO_Pin_Valve10, Bit_SET);
000188  2201              MOVS     r2,#1
00018a  2120              MOVS     r1,#0x20
00018c  4812              LDR      r0,|L25.472|
00018e  f7fffffe          BL       GPIO_WriteBit
;;;335    		break;
000192  e018              B        |L25.454|
                  |L25.404|
;;;336    	case 110:
;;;337    		GPIO_WriteBit(GPIO_Valve9_12, GPIO_Pin_Valve11, Bit_RESET);
000194  2200              MOVS     r2,#0
000196  2140              MOVS     r1,#0x40
000198  480f              LDR      r0,|L25.472|
00019a  f7fffffe          BL       GPIO_WriteBit
;;;338    		break;
00019e  e012              B        |L25.454|
                  |L25.416|
;;;339    	case 111:
;;;340    		GPIO_WriteBit(GPIO_Valve9_12, GPIO_Pin_Valve11, Bit_SET);
0001a0  2201              MOVS     r2,#1
0001a2  2140              MOVS     r1,#0x40
0001a4  480c              LDR      r0,|L25.472|
0001a6  f7fffffe          BL       GPIO_WriteBit
;;;341    		break;
0001aa  e00c              B        |L25.454|
                  |L25.428|
;;;342    	case 120:
;;;343    		GPIO_WriteBit(GPIO_Valve9_12, GPIO_Pin_Valve12,  Bit_RESET);
0001ac  2200              MOVS     r2,#0
0001ae  2180              MOVS     r1,#0x80
0001b0  4809              LDR      r0,|L25.472|
0001b2  f7fffffe          BL       GPIO_WriteBit
;;;344    		break;
0001b6  e006              B        |L25.454|
                  |L25.440|
;;;345    	case 121:
;;;346    		GPIO_WriteBit(GPIO_Valve9_12, GPIO_Pin_Valve12,  Bit_SET);
0001b8  2201              MOVS     r2,#1
0001ba  2180              MOVS     r1,#0x80
0001bc  4806              LDR      r0,|L25.472|
0001be  f7fffffe          BL       GPIO_WriteBit
;;;347    		break;
0001c2  e000              B        |L25.454|
                  |L25.452|
;;;348    	default:
;;;349    		break;
0001c4  bf00              NOP      
                  |L25.454|
0001c6  bf00              NOP                            ;275
;;;350    	}
;;;351    }
0001c8  bd10              POP      {r4,pc}
;;;352    u8 IsTripSwitchClosed(void)
                          ENDP

0001ca  0000              DCW      0x0000
                  |L25.460|
                          DCD      0x40021800
                  |L25.464|
                          DCD      0x40020400
                  |L25.468|
                          DCD      0x40021000
                  |L25.472|
                          DCD      0x40022000

                          AREA ||i.Valve_GPIO_Config||, CODE, READONLY, ALIGN=2

                  Valve_GPIO_Config PROC
;;;1001   
;;;1002   void Valve_GPIO_Config(void)
000000  b51c              PUSH     {r2-r4,lr}
;;;1003   {
;;;1004   	GPIO_InitTypeDef GPIO_InitStructure;
;;;1005   
;;;1006   	GPIO_InitStructure.GPIO_Pin 	= GPIO_Pin_Valve1|GPIO_Pin_Valve2 |GPIO_Pin_Valve3|GPIO_Pin_Valve4 ;
000002  f44f4068          MOV      r0,#0xe800
000006  9000              STR      r0,[sp,#0]
;;;1007   	GPIO_InitStructure.GPIO_Speed 	= GPIO_Speed_100MHz;
000008  2003              MOVS     r0,#3
00000a  f88d0005          STRB     r0,[sp,#5]
;;;1008   	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
00000e  2000              MOVS     r0,#0
000010  f88d0006          STRB     r0,[sp,#6]
;;;1009   	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;	/* ÉÏÏÂÀ­µç×è²»Ê¹ÄÜ */
000014  f88d0007          STRB     r0,[sp,#7]
;;;1010   	GPIO_InitStructure.GPIO_Mode 	= GPIO_Mode_OUT;
000018  2001              MOVS     r0,#1
00001a  f88d0004          STRB     r0,[sp,#4]
;;;1011   	GPIO_Init(GPIO_Valve1_4, &GPIO_InitStructure);
00001e  4669              MOV      r1,sp
000020  483b              LDR      r0,|L26.272|
000022  f7fffffe          BL       GPIO_Init
;;;1012   
;;;1013   	GPIO_InitStructure.GPIO_Pin 	= GPIO_Pin_Valve5 |GPIO_Pin_Valve6 ;
000026  f44f7090          MOV      r0,#0x120
00002a  9000              STR      r0,[sp,#0]
;;;1014   	GPIO_InitStructure.GPIO_Speed 	= GPIO_Speed_100MHz;
00002c  2003              MOVS     r0,#3
00002e  f88d0005          STRB     r0,[sp,#5]
;;;1015   	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
000032  2000              MOVS     r0,#0
000034  f88d0006          STRB     r0,[sp,#6]
;;;1016   	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;	/* ÉÏÏÂÀ­µç×è²»Ê¹ÄÜ */
000038  f88d0007          STRB     r0,[sp,#7]
;;;1017   	GPIO_InitStructure.GPIO_Mode 	= GPIO_Mode_OUT;
00003c  2001              MOVS     r0,#1
00003e  f88d0004          STRB     r0,[sp,#4]
;;;1018   	GPIO_Init(GPIO_Valve5_6, &GPIO_InitStructure);
000042  4669              MOV      r1,sp
000044  4833              LDR      r0,|L26.276|
000046  f7fffffe          BL       GPIO_Init
;;;1019   		
;;;1020   	GPIO_InitStructure.GPIO_Pin = 	GPIO_Pin_Valve7 | GPIO_Pin_Valve8 ;
00004a  2003              MOVS     r0,#3
00004c  9000              STR      r0,[sp,#0]
;;;1021   	GPIO_InitStructure.GPIO_Speed 	= GPIO_Speed_100MHz;
00004e  f88d0005          STRB     r0,[sp,#5]
;;;1022   	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
000052  2000              MOVS     r0,#0
000054  f88d0006          STRB     r0,[sp,#6]
;;;1023   	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;	/* ÉÏÏÂÀ­µç×è²»Ê¹ÄÜ */
000058  f88d0007          STRB     r0,[sp,#7]
;;;1024   	GPIO_InitStructure.GPIO_Mode 	= GPIO_Mode_OUT;
00005c  2001              MOVS     r0,#1
00005e  f88d0004          STRB     r0,[sp,#4]
;;;1025   	GPIO_Init(GPIO_Valve7_8, &GPIO_InitStructure);
000062  4669              MOV      r1,sp
000064  482c              LDR      r0,|L26.280|
000066  f7fffffe          BL       GPIO_Init
;;;1026   
;;;1027   	GPIO_InitStructure.GPIO_Pin 	= GPIO_Pin_Valve9 | GPIO_Pin_Valve10 |GPIO_Pin_Valve11 |GPIO_Pin_Valve12;
00006a  20f0              MOVS     r0,#0xf0
00006c  9000              STR      r0,[sp,#0]
;;;1028   	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
00006e  2003              MOVS     r0,#3
000070  f88d0005          STRB     r0,[sp,#5]
;;;1029   	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
000074  2000              MOVS     r0,#0
000076  f88d0006          STRB     r0,[sp,#6]
;;;1030   	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;	/* ÉÏÏÂÀ­µç×è²»Ê¹ÄÜ */
00007a  f88d0007          STRB     r0,[sp,#7]
;;;1031   	GPIO_InitStructure.GPIO_Mode 	= GPIO_Mode_OUT;
00007e  2001              MOVS     r0,#1
000080  f88d0004          STRB     r0,[sp,#4]
;;;1032   	GPIO_Init(GPIO_Valve9_12, &GPIO_InitStructure);
000084  4669              MOV      r1,sp
000086  4825              LDR      r0,|L26.284|
000088  f7fffffe          BL       GPIO_Init
;;;1033   
;;;1034   	//ËùÓÐ·§ÃÅµÍµçÆ½
;;;1035   	GPIO_WriteBit(GPIO_Valve1_4,	GPIO_Pin_Valve1,  Bit_RESET);
00008c  2200              MOVS     r2,#0
00008e  f44f6100          MOV      r1,#0x800
000092  481f              LDR      r0,|L26.272|
000094  f7fffffe          BL       GPIO_WriteBit
;;;1036   	GPIO_WriteBit(GPIO_Valve1_4,	GPIO_Pin_Valve2,  Bit_RESET);
000098  2200              MOVS     r2,#0
00009a  f44f5100          MOV      r1,#0x2000
00009e  481c              LDR      r0,|L26.272|
0000a0  f7fffffe          BL       GPIO_WriteBit
;;;1037   	GPIO_WriteBit(GPIO_Valve1_4,  GPIO_Pin_Valve3,  Bit_RESET);
0000a4  2200              MOVS     r2,#0
0000a6  f44f4180          MOV      r1,#0x4000
0000aa  4819              LDR      r0,|L26.272|
0000ac  f7fffffe          BL       GPIO_WriteBit
;;;1038   	GPIO_WriteBit(GPIO_Valve1_4, 	GPIO_Pin_Valve4,  Bit_RESET);
0000b0  2200              MOVS     r2,#0
0000b2  f44f4100          MOV      r1,#0x8000
0000b6  4816              LDR      r0,|L26.272|
0000b8  f7fffffe          BL       GPIO_WriteBit
;;;1039   	GPIO_WriteBit(GPIO_Valve5_6, 	GPIO_Pin_Valve5,  Bit_RESET);
0000bc  2200              MOVS     r2,#0
0000be  2120              MOVS     r1,#0x20
0000c0  4814              LDR      r0,|L26.276|
0000c2  f7fffffe          BL       GPIO_WriteBit
;;;1040   	GPIO_WriteBit(GPIO_Valve5_6, 	GPIO_Pin_Valve6,  Bit_RESET);
0000c6  2200              MOVS     r2,#0
0000c8  f44f7180          MOV      r1,#0x100
0000cc  4811              LDR      r0,|L26.276|
0000ce  f7fffffe          BL       GPIO_WriteBit
;;;1041   	GPIO_WriteBit(GPIO_Valve7_8, 	GPIO_Pin_Valve7,  Bit_RESET);
0000d2  2200              MOVS     r2,#0
0000d4  2101              MOVS     r1,#1
0000d6  4810              LDR      r0,|L26.280|
0000d8  f7fffffe          BL       GPIO_WriteBit
;;;1042   	GPIO_WriteBit(GPIO_Valve7_8, 	GPIO_Pin_Valve8,  Bit_RESET);
0000dc  2200              MOVS     r2,#0
0000de  2102              MOVS     r1,#2
0000e0  480d              LDR      r0,|L26.280|
0000e2  f7fffffe          BL       GPIO_WriteBit
;;;1043   	GPIO_WriteBit(GPIO_Valve9_12, GPIO_Pin_Valve9,  Bit_RESET);
0000e6  2200              MOVS     r2,#0
0000e8  2110              MOVS     r1,#0x10
0000ea  480c              LDR      r0,|L26.284|
0000ec  f7fffffe          BL       GPIO_WriteBit
;;;1044   	GPIO_WriteBit(GPIO_Valve9_12, GPIO_Pin_Valve10, Bit_RESET);
0000f0  2200              MOVS     r2,#0
0000f2  2120              MOVS     r1,#0x20
0000f4  4809              LDR      r0,|L26.284|
0000f6  f7fffffe          BL       GPIO_WriteBit
;;;1045   	GPIO_WriteBit(GPIO_Valve9_12, GPIO_Pin_Valve11, Bit_RESET);
0000fa  2200              MOVS     r2,#0
0000fc  2140              MOVS     r1,#0x40
0000fe  4807              LDR      r0,|L26.284|
000100  f7fffffe          BL       GPIO_WriteBit
;;;1046   	GPIO_WriteBit(GPIO_Valve9_12, GPIO_Pin_Valve12, Bit_RESET);
000104  2200              MOVS     r2,#0
000106  2180              MOVS     r1,#0x80
000108  4804              LDR      r0,|L26.284|
00010a  f7fffffe          BL       GPIO_WriteBit
;;;1047   
;;;1048   }
00010e  bd1c              POP      {r2-r4,pc}
;;;1049   void PowerCheck(void)
                          ENDP

                  |L26.272|
                          DCD      0x40021800
                  |L26.276|
                          DCD      0x40020400
                  |L26.280|
                          DCD      0x40021000
                  |L26.284|
                          DCD      0x40022000

                          AREA ||i.onesided||, CODE, READONLY, ALIGN=2

                  onesided PROC
;;;867    }
;;;868    void onesided(long nfill)
000000  b570              PUSH     {r4-r6,lr}
;;;869    {
;;;870        u32 i;
;;;871    
;;;872        lBUFMAG[0] = lBUFMAG[0];
000002  4a15              LDR      r2,|L27.88|
000004  6812              LDR      r2,[r2,#0]  ; lBUFMAG
000006  4b14              LDR      r3,|L27.88|
000008  601a              STR      r2,[r3,#0]  ; lBUFMAG
;;;873        lBUFMAG[nfill/2] = lBUFMAG[nfill/2];
00000a  4602              MOV      r2,r0
00000c  eb0074d2          ADD      r4,r0,r2,LSR #31
000010  1064              ASRS     r4,r4,#1
000012  461d              MOV      r5,r3
000014  f8554024          LDR      r4,[r5,r4,LSL #2]
000018  4603              MOV      r3,r0
00001a  eb0075d3          ADD      r5,r0,r3,LSR #31
00001e  106d              ASRS     r5,r5,#1
000020  4e0d              LDR      r6,|L27.88|
000022  f8464025          STR      r4,[r6,r5,LSL #2]
;;;874        for (i=1; i < nfill/2; i++)
000026  2101              MOVS     r1,#1
000028  e00f              B        |L27.74|
                  |L27.42|
;;;875        {
;;;876            lBUFMAG[i] = lBUFMAG[i] + lBUFMAG[nfill-i];
00002a  4a0b              LDR      r2,|L27.88|
00002c  f8522021          LDR      r2,[r2,r1,LSL #2]
000030  1a43              SUBS     r3,r0,r1
000032  4c09              LDR      r4,|L27.88|
000034  f8543023          LDR      r3,[r4,r3,LSL #2]
000038  441a              ADD      r2,r2,r3
00003a  4623              MOV      r3,r4
00003c  f8432021          STR      r2,[r3,r1,LSL #2]
;;;877            lBUFMAG[nfill-i] = 0x0;
000040  2200              MOVS     r2,#0
000042  1a43              SUBS     r3,r0,r1
000044  f8442023          STR      r2,[r4,r3,LSL #2]
000048  1c49              ADDS     r1,r1,#1              ;874
                  |L27.74|
00004a  eb0073d0          ADD      r3,r0,r0,LSR #31      ;874
00004e  ebb10f63          CMP      r1,r3,ASR #1          ;874
000052  d3ea              BCC      |L27.42|
;;;878        }
;;;879    }
000054  bd70              POP      {r4-r6,pc}
;;;880    /**
                          ENDP

000056  0000              DCW      0x0000
                  |L27.88|
                          DCD      lBUFMAG

                          AREA ||i.powerMag||, CODE, READONLY, ALIGN=2

                  powerMag PROC
;;;885    */
;;;886    void powerMag(long nfill, char* strPara)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;887    {
000004  ed2d8b0c          VPUSH    {d8-d13}
000008  4607              MOV      r7,r0
00000a  4688              MOV      r8,r1
;;;888        s32 lX,lY;
;;;889        u32 i;
;;;890    
;;;891        for (i=0; i < nfill; i++)
00000c  2400              MOVS     r4,#0
00000e  e055              B        |L28.188|
                  |L28.16|
;;;892        {
;;;893            lX= (lBUFOUT[i]<<16)>>16; /* sine_cosine --> cos */
000010  4830              LDR      r0,|L28.212|
000012  f8300024          LDRH     r0,[r0,r4,LSL #2]
000016  b205              SXTH     r5,r0
;;;894            lY= (lBUFOUT[i] >> 16);   /* sine_cosine --> sin */
000018  482e              LDR      r0,|L28.212|
00001a  f8500024          LDR      r0,[r0,r4,LSL #2]
00001e  1406              ASRS     r6,r0,#16
;;;895            {
;;;896                float X=  64*((float)lX)/32768;
000020  ee005a10          VMOV     s0,r5
000024  eeb80ac0          VCVT.F32.S32 s0,s0
000028  eddf0a2b          VLDR     s1,|L28.216|
00002c  ee200a20          VMUL.F32 s0,s0,s1
000030  eddf0a2a          VLDR     s1,|L28.220|
000034  ee801a20          VDIV.F32 s2,s0,s1
000038  eef08a41          VMOV.F32 s17,s2
;;;897                float Y = 64*((float)lY)/32768;
00003c  ee006a10          VMOV     s0,r6
000040  eeb80ac0          VCVT.F32.S32 s0,s0
000044  eddf0a24          VLDR     s1,|L28.216|
000048  ee200a20          VMUL.F32 s0,s0,s1
00004c  eddf0a23          VLDR     s1,|L28.220|
000050  ee801a20          VDIV.F32 s2,s0,s1
000054  eeb08a41          VMOV.F32 s16,s2
;;;898                float Mag = sqrt(X*X+ Y*Y)/nfill;
000058  4638              MOV      r0,r7
00005a  f7fffffe          BL       __aeabi_i2d
00005e  ec410b1b          VMOV     d11,r0,r1
000062  ee280aa8          VMUL.F32 s0,s17,s17
000066  ee080a08          VMLA.F32 s0,s16,s16
00006a  ee101a10          VMOV     r1,s0
00006e  4608              MOV      r0,r1
000070  f7fffffe          BL       __aeabi_f2d
000074  ec410b1d          VMOV     d13,r0,r1
000078  eeb00a4d          VMOV.F32 s0,s26
00007c  eef00a6d          VMOV.F32 s1,s27
000080  f7fffffe          BL       __hardfp_sqrt
000084  eeb0ca40          VMOV.F32 s24,s0
000088  eef0ca60          VMOV.F32 s25,s1
00008c  ec532b1b          VMOV     r2,r3,d11
000090  ec510b1c          VMOV     r0,r1,d12
000094  f7fffffe          BL       __aeabi_ddiv
000098  ec410b1a          VMOV     d10,r0,r1
00009c  f7fffffe          BL       __aeabi_d2f
0000a0  ee090a10          VMOV     s18,r0
;;;899                lBUFMAG[i] = (u32)(Mag*65536);
0000a4  ed9f0a0e          VLDR     s0,|L28.224|
0000a8  ee290a00          VMUL.F32 s0,s18,s0
0000ac  eebc0ac0          VCVT.U32.F32 s0,s0
0000b0  ee100a10          VMOV     r0,s0
0000b4  490b              LDR      r1,|L28.228|
0000b6  f8410024          STR      r0,[r1,r4,LSL #2]
0000ba  1c64              ADDS     r4,r4,#1              ;891
                  |L28.188|
0000bc  42bc              CMP      r4,r7                 ;891
0000be  d3a7              BCC      |L28.16|
;;;900            }
;;;901        }
;;;902        if (strPara == "1SIDED")
0000c0  a009              ADR      r0,|L28.232|
0000c2  4580              CMP      r8,r0
0000c4  d102              BNE      |L28.204|
;;;903            onesided(nfill);
0000c6  4638              MOV      r0,r7
0000c8  f7fffffe          BL       onesided
                  |L28.204|
;;;904    }
0000cc  ecbd8b0c          VPOP     {d8-d13}
0000d0  e8bd81f0          POP      {r4-r8,pc}
;;;905    void AK_Test(void)
                          ENDP

                  |L28.212|
                          DCD      lBUFOUT
                  |L28.216|
0000d8  42800000          DCFS     0x42800000 ; 64
                  |L28.220|
0000dc  47000000          DCFS     0x47000000 ; 32768
                  |L28.224|
0000e0  47800000          DCFS     0x47800000 ; 65536
                  |L28.228|
                          DCD      lBUFMAG
                  |L28.232|
0000e8  31534944          DCB      "1SIDED",0
0000ec  454400  
0000ef  00                DCB      0

                          AREA ||i.pprint||, CODE, READONLY, ALIGN=2

                  pprint PROC
;;;792    
;;;793    void pprint(unsigned char ch)                             
000000  b570              PUSH     {r4-r6,lr}
;;;794    { 	  
000002  4604              MOV      r4,r0
;;;795    	u16 i=3000;
000004  f64035b8          MOV      r5,#0xbb8
;;;796    //	unsigned char  tValue; 
;;;797    	while(BUSY) 
000008  e004              B        |L29.20|
                  |L29.10|
;;;798    	{
;;;799    	 	i--;
00000a  1e68              SUBS     r0,r5,#1
00000c  b285              UXTH     r5,r0
;;;800    		if(i<10)return;			
00000e  2d0a              CMP      r5,#0xa
000010  da00              BGE      |L29.20|
                  |L29.18|
;;;801    	}; 
;;;802    //	tValue=~ch; 
;;;803    	GPIOD->BSRRL=(unsigned int)ch; 
;;;804    //	GPIOD->BRR=(unsigned int)tValue;          
;;;805    	STB=0;                                              
;;;806    	bsp_DelayMS(5);
;;;807    	STB=1;                                               
;;;808    }
000012  bd70              POP      {r4-r6,pc}
                  |L29.20|
000014  4809              LDR      r0,|L29.60|
000016  6800              LDR      r0,[r0,#0]            ;797
000018  2800              CMP      r0,#0                 ;797
00001a  d1f6              BNE      |L29.10|
00001c  4808              LDR      r0,|L29.64|
00001e  8004              STRH     r4,[r0,#0]            ;803
000020  2000              MOVS     r0,#0                 ;805
000022  4906              LDR      r1,|L29.60|
000024  317c              ADDS     r1,r1,#0x7c           ;805
000026  6008              STR      r0,[r1,#0]            ;805
000028  2005              MOVS     r0,#5                 ;806
00002a  f7fffffe          BL       bsp_DelayMS
00002e  2001              MOVS     r0,#1                 ;807
000030  4904              LDR      r1,|L29.68|
000032  f8c101a0          STR      r0,[r1,#0x1a0]        ;807
000036  bf00              NOP      
000038  e7eb              B        |L29.18|
;;;809    void PRINT_Init (void)
                          ENDP

00003a  0000              DCW      0x0000
                  |L29.60|
                          DCD      0x42408124
                  |L29.64|
                          DCD      0x40020c18
                  |L29.68|
                          DCD      0x42408000

                          AREA ||i.weedavg||, CODE, READONLY, ALIGN=1

                  weedavg PROC
;;;157    ----------------------*/
;;;158    u16 weedavg(u16 a[ADCNUM],u8 num)  
000000  b5f0              PUSH     {r4-r7,lr}
;;;159    { 
000002  4602              MOV      r2,r0
000004  460c              MOV      r4,r1
;;;160    	u8	i, j;
;;;161    	u16	p;
;;;162    	u32	sum = 0;
000006  2500              MOVS     r5,#0
;;;163    	u8	exchange; //½»»»±êÖ¾
;;;164    	for( i=0;i<ADCNUM;i++)
000008  2300              MOVS     r3,#0
00000a  e01c              B        |L30.70|
                  |L30.12|
;;;165    	{ //×î¶à×ön-1ÌËÅÅÐò
;;;166    		exchange = 0; //±¾ÌËÅÅÐò¿ªÊ¼Ç°£¬½»»»±êÖ¾Ó¦Îª¼Ù
00000c  2700              MOVS     r7,#0
;;;167    		for( j = ADCNUM-1;j>i;j--) //¶Ôµ±Ç°ÎÞÐòÇøa[i..n]×ÔÏÂÏòÉÏÉ¨Ãè
00000e  2118              MOVS     r1,#0x18
000010  e013              B        |L30.58|
                  |L30.18|
;;;168    			if(a[j]<a[j-1])
000012  f832c011          LDRH     r12,[r2,r1,LSL #1]
000016  1e48              SUBS     r0,r1,#1
000018  f8320010          LDRH     r0,[r2,r0,LSL #1]
00001c  4584              CMP      r12,r0
00001e  da0a              BGE      |L30.54|
;;;169    			{//½»»»¼ÇÂ¼
;;;170    				p		= a[j]; //p×öÔÝ´æµ¥Ôª
000020  f8326011          LDRH     r6,[r2,r1,LSL #1]
;;;171    				a[j]	= a[j-1];
000024  1e48              SUBS     r0,r1,#1
000026  f8320010          LDRH     r0,[r2,r0,LSL #1]
00002a  f8220011          STRH     r0,[r2,r1,LSL #1]
;;;172    				a[j-1]	= p;
00002e  1e48              SUBS     r0,r1,#1
000030  f8226010          STRH     r6,[r2,r0,LSL #1]
;;;173    				exchange= 1; //·¢ÉúÁË½»»»£¬¹Ê½«½»»»±êÖ¾ÖÃÎªÕæ
000034  2701              MOVS     r7,#1
                  |L30.54|
000036  1e48              SUBS     r0,r1,#1              ;167
000038  b2c1              UXTB     r1,r0                 ;167
                  |L30.58|
00003a  4299              CMP      r1,r3                 ;167
00003c  dce9              BGT      |L30.18|
;;;174    			}
;;;175    			if(!exchange) //±¾ÌËÅÅÐòÎ´·¢Éú½»»»£¬ÌáÇ°ÖÕÖ¹Ëã·¨
00003e  b907              CBNZ     r7,|L30.66|
;;;176    				break;
000040  e003              B        |L30.74|
                  |L30.66|
000042  1c58              ADDS     r0,r3,#1              ;164
000044  b2c3              UXTB     r3,r0                 ;164
                  |L30.70|
000046  2b19              CMP      r3,#0x19              ;164
000048  dbe0              BLT      |L30.12|
                  |L30.74|
00004a  bf00              NOP      
;;;177    	} //endfor(ÍâÑ­»·)
;;;178    	for (i=num;i<ADCNUM-num;i++)         //³ýÈ¥×î´óa0,×îÐ¡anºóÈ¡Æ½¾ùÖµ
00004c  4623              MOV      r3,r4
00004e  e004              B        |L30.90|
                  |L30.80|
;;;179    		sum += a[i];
000050  f8320013          LDRH     r0,[r2,r3,LSL #1]
000054  4405              ADD      r5,r5,r0
000056  1c58              ADDS     r0,r3,#1              ;178
000058  b2c3              UXTB     r3,r0                 ;178
                  |L30.90|
00005a  f1c40019          RSB      r0,r4,#0x19           ;178
00005e  4298              CMP      r0,r3                 ;178
000060  dcf6              BGT      |L30.80|
;;;180    
;;;181    	return (sum/(ADCNUM-num*2));
000062  2019              MOVS     r0,#0x19
000064  eba00044          SUB      r0,r0,r4,LSL #1
000068  fbb5f0f0          UDIV     r0,r5,r0
00006c  b280              UXTH     r0,r0
;;;182    }//BubbleSort
00006e  bdf0              POP      {r4-r7,pc}
;;;183    
                          ENDP


                          AREA ||.bss||, DATA, NOINIT, ALIGN=3

                  lBUFIN
                          %        1024
                  lBUFOUT
                          %        1024
                  lBUFMAG
                          %        1536
                  ADCResult
                          %        72
                  ADCConv
                          %        50
                  uhADCConvertedValue
                          %        10
                  ||C12||
                          %        240
                  ||C13||
                          %        244
                  m_lCf
                          %        72
                  AK_Left_Data
                          %        14400
                  AK_Right_Data
                          %        14400

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  Speedup
                          DCD      0x0000f52e
                          DCD      0x0000f52e
                          DCD      0x0000f52e
                          DCD      0x0000f52e
                          DCD      0x0000f52e
                          DCD      0x0000f52e
                          DCD      0x0000f52e
                          DCD      0x0000f52e
                          DCD      0x0000f52e
                          DCD      0x0000f52e
                          DCD      0x0000f52e
                          DCD      0x0000f52e
                          DCD      0x0000f52e
                          DCD      0x0000f52e
                          DCD      0x0000f52e
                          DCD      0x0000f52e
                          DCD      0x0000f52e
                          DCD      0x0000f52e
                          DCD      0x0000f52e
                          DCD      0x0000f52e
                          DCD      0x0000de92
                          DCD      0x0000cafa
                          DCD      0x0000b9e2
                          DCD      0x0000aae2
                          DCD      0x00009da5
                          DCD      0x000091e7
                          DCD      0x00008771
                          DCD      0x00007e16
                          DCD      0x000075ad
                          DCD      0x00006e19
                          DCD      0x0000673d
                          DCD      0x00006103
                          DCD      0x00005b58
                          DCD      0x0000562b
                          DCD      0x0000516e
                          DCD      0x00004d15
                          DCD      0x00004915
                          DCD      0x00004565
                          DCD      0x000041fd
                          DCD      0x00003ed5
                          DCD      0x00003be7
                          DCD      0x0000392f
                          DCD      0x000036a7
                          DCD      0x0000344a
                          DCD      0x00003215
                          DCD      0x00003005
                          DCD      0x00002e16
                          DCD      0x00002c46
                          DCD      0x00002a92
                          DCD      0x000028f8
                          DCD      0x00002776
                          DCD      0x0000260a
                          DCD      0x000024b2
                          DCD      0x0000236e
                          DCD      0x0000223b
                          DCD      0x00002118
                          DCD      0x00002005
                          DCD      0x00001f00
                          DCD      0x00001e08
                          DCD      0x00001d1c
                          DCD      0x00001c3c
                          DCD      0x00001b67
                          DCD      0x00001a9b
                          DCD      0x000019da
                          DCD      0x00001921
                          DCD      0x00001871
                          DCD      0x000017c8
                          DCD      0x00001727
                          DCD      0x0000168d
                          DCD      0x000015fa
                          DCD      0x0000156d
                          DCD      0x000014e5
                          DCD      0x00001464
                          DCD      0x000013e7
                          DCD      0x00001370
                          DCD      0x000012fd
                          DCD      0x0000128f
                          DCD      0x00001225
                          DCD      0x000011bf
                          DCD      0x0000115d
                          DCD      0x000010ff
                          DCD      0x000010a4
                          DCD      0x0000104d
                          DCD      0x00000ff8
                          DCD      0x00000fa7
                          DCD      0x00000f59
                          DCD      0x00000f0d
                          DCD      0x00000ec4
                          DCD      0x00000e7d
                          DCD      0x00000e39
                          DCD      0x00000df7
                          DCD      0x00000db8
                          DCD      0x00000d7a
                          DCD      0x00000d3f
                          DCD      0x00000d05
                          DCD      0x00000ccd
                          DCD      0x00000c97
                          DCD      0x00000c63
                          DCD      0x00000c31
                          DCD      0x00000c00
                          DCD      0x00000bd0
                          DCD      0x00000ba2
                          DCD      0x00000b75
                          DCD      0x00000b4a
                          DCD      0x00000b20
                          DCD      0x00000af7
                          DCD      0x00000ad0
                          DCD      0x00000aa9
                          DCD      0x00000a84
                          DCD      0x00000a60
                          DCD      0x00000a3d
                          DCD      0x00000a1b
                          DCD      0x000009fa
                          DCD      0x000009d9
                          DCD      0x000009ba
                          DCD      0x0000099c
                          DCD      0x0000097e
                          DCD      0x00000961
                          DCD      0x00000945
                          DCD      0x0000092a
                          DCD      0x00000910
                          DCD      0x000008f6
                          DCD      0x000008dd
                          DCD      0x000008c5
                          DCD      0x000008ad
                          DCD      0x00000896
                          DCD      0x00000880
                          DCD      0x0000086a
                          DCD      0x00000855
                          DCD      0x00000840
                          DCD      0x0000082c
                          DCD      0x00000819
                          DCD      0x00000806
                          DCD      0x000007f3
                          DCD      0x000007e1
                          DCD      0x000007d0
                          DCD      0x000007bf
                          DCD      0x000007ae
                          DCD      0x0000079e
                          DCD      0x0000078e
                          DCD      0x0000077f
                          DCD      0x00000770
                          DCD      0x00000762
                          DCD      0x00000754
                          DCD      0x00000746
                          DCD      0x00000739
                          DCD      0x0000072c
                          DCD      0x0000071f
                          DCD      0x00000713
                          DCD      0x00000707
                          DCD      0x000006fb
                          DCD      0x000006f0
                          DCD      0x000006e5
                          DCD      0x000006db
                          DCD      0x000006d1
                          DCD      0x000006c7
                          DCD      0x000006bd
                          DCD      0x000006b4
                          DCD      0x000006aa
                          DCD      0x000006a2
                          DCD      0x00000699
                          DCD      0x00000691
                          DCD      0x00000689
                          DCD      0x00000681
                          DCD      0x0000067a
                          DCD      0x00000672
                          DCD      0x0000066b
                          DCD      0x00000665
                          DCD      0x0000065e
                          DCD      0x00000658
                          DCD      0x00000652
                          DCD      0x0000064c
                          DCD      0x00000647
                          DCD      0x00000641
                          DCD      0x0000063c
                          DCD      0x00000637
                          DCD      0x00000633
                          DCD      0x0000062e
                          DCD      0x0000062a
                          DCD      0x00000626
                          DCD      0x00000622
                          DCD      0x0000061f
                          DCD      0x0000061b
                          DCD      0x00000618
                          DCD      0x00000615
                          DCD      0x00000612
                          DCD      0x00000610
                          DCD      0x0000060d
                          DCD      0x0000060b
                          DCD      0x00000609
                          DCD      0x00000607
                          DCD      0x00000606
                          DCD      0x00000604
                          DCD      0x00000603
                          DCD      0x00000602
                          DCD      0x00000601
                          DCD      0x00000600
                          DCD      0x00000600
                          DCD      0x00000600
                          DCD      0x00000600

                          AREA ||.data||, DATA, ALIGN=3

                  TableFFT
000000  40000000          DCW      0x4000,0x0000
000004  40000000          DCW      0x4000,0x0000
000008  40000000          DCW      0x4000,0x0000
00000c  dd5d3b21          DCW      0xdd5d,0x3b21
000010  22a3187e          DCW      0x22a3,0x187e
000014  00002d41          DCW      0x0000,0x2d41
000018  a57e2d41          DCW      0xa57e,0x2d41
00001c  00002d41          DCW      0x0000,0x2d41
000020  c0004000          DCW      0xc000,0x4000
000024  dd5de782          DCW      0xdd5d,0xe782
000028  dd5d3b21          DCW      0xdd5d,0x3b21
00002c  a57e2d41          DCW      0xa57e,0x2d41
000030  40000000          DCW      0x4000,0x0000
000034  40000000          DCW      0x4000,0x0000
000038  40000000          DCW      0x4000,0x0000
00003c  2aaa1294          DCW      0x2aaa,0x1294
000040  396b0646          DCW      0x396b,0x0646
000044  32490c7c          DCW      0x3249,0x0c7c
000048  11a8238e          DCW      0x11a8,0x238e
00004c  32490c7c          DCW      0x3249,0x0c7c
000050  22a3187e          DCW      0x22a3,0x187e
000054  f7213179          DCW      0xf721,0x3179
000058  2aaa1294          DCW      0x2aaa,0x1294
00005c  11a8238e          DCW      0x11a8,0x238e
000060  dd5d3b21          DCW      0xdd5d,0x3b21
000064  22a3187e          DCW      0x22a3,0x187e
000068  00002d41          DCW      0x0000,0x2d41
00006c  c6953fb1          DCW      0xc695,0x3fb1
000070  1a461e2b          DCW      0x1a46,0x1e2b
000074  ee583537          DCW      0xee58,0x3537
000078  b4be3ec5          DCW      0xb4be,0x3ec5
00007c  11a8238e          DCW      0x11a8,0x238e
000080  dd5d3b21          DCW      0xdd5d,0x3b21
000084  a9633871          DCW      0xa963,0x3871
000088  08df289a          DCW      0x08df,0x289a
00008c  cdb73ec5          DCW      0xcdb7,0x3ec5
000090  a57e2d41          DCW      0xa57e,0x2d41
000094  00002d41          DCW      0x0000,0x2d41
000098  c0004000          DCW      0xc000,0x4000
00009c  a9631e2b          DCW      0xa963,0x1e2b
0000a0  f7213179          DCW      0xf721,0x3179
0000a4  b4be3ec5          DCW      0xb4be,0x3ec5
0000a8  b4be0c7c          DCW      0xb4be,0x0c7c
0000ac  ee583537          DCW      0xee58,0x3537
0000b0  ac613b21          DCW      0xac61,0x3b21
0000b4  c695f9ba          DCW      0xc695,0xf9ba
0000b8  e5ba3871          DCW      0xe5ba,0x3871
0000bc  a73b3537          DCW      0xa73b,0x3537
0000c0  dd5de782          DCW      0xdd5d,0xe782
0000c4  dd5d3b21          DCW      0xdd5d,0x3b21
0000c8  a57e2d41          DCW      0xa57e,0x2d41
0000cc  f721d766          DCW      0xf721,0xd766
0000d0  d5563d3f          DCW      0xd556,0x3d3f
0000d4  a73b238e          DCW      0xa73b,0x238e
0000d8  11a8cac9          DCW      0x11a8,0xcac9
0000dc  cdb73ec5          DCW      0xcdb7,0x3ec5
0000e0  ac61187e          DCW      0xac61,0x187e
0000e4  2aaac2c1          DCW      0x2aaa,0xc2c1
0000e8  c6953fb1          DCW      0xc695,0x3fb1
0000ec  b4be0c7c          DCW      0xb4be,0x0c7c
0000f0  40000000          DCW      0x4000,0x0000
0000f4  40000000          DCW      0x4000,0x0000
0000f8  40000000          DCW      0x4000,0x0000
0000fc  3b1e04b5          DCW      0x3b1e,0x04b5
000100  3e690192          DCW      0x3e69,0x0192
000104  3cc80324          DCW      0x3cc8,0x0324
000108  35eb0964          DCW      0x35eb,0x0964
00010c  3cc80324          DCW      0x3cc8,0x0324
000110  396b0646          DCW      0x396b,0x0646
000114  306c0e06          DCW      0x306c,0x0e06
000118  3b1e04b5          DCW      0x3b1e,0x04b5
00011c  35eb0964          DCW      0x35eb,0x0964
000120  2aaa1294          DCW      0x2aaa,0x1294
000124  396b0646          DCW      0x396b,0x0646
000128  32490c7c          DCW      0x3249,0x0c7c
00012c  24ae1709          DCW      0x24ae,0x1709
000130  37af07d6          DCW      0x37af,0x07d6
000134  2e880f8d          DCW      0x2e88,0x0f8d
000138  1e7e1b5d          DCW      0x1e7e,0x1b5d
00013c  35eb0964          DCW      0x35eb,0x0964
000140  2aaa1294          DCW      0x2aaa,0x1294
000144  18241f8c          DCW      0x1824,0x1f8c
000148  341e0af1          DCW      0x341e,0x0af1
00014c  26b31590          DCW      0x26b3,0x1590
000150  11a8238e          DCW      0x11a8,0x238e
000154  32490c7c          DCW      0x3249,0x0c7c
000158  22a3187e          DCW      0x22a3,0x187e
00015c  0b142760          DCW      0x0b14,0x2760
000160  306c0e06          DCW      0x306c,0x0e06
000164  1e7e1b5d          DCW      0x1e7e,0x1b5d
000168  04712afb          DCW      0x0471,0x2afb
00016c  2e880f8d          DCW      0x2e88,0x0f8d
000170  1a461e2b          DCW      0x1a46,0x1e2b
000174  fdc72e5a          DCW      0xfdc7,0x2e5a
000178  2c9d1112          DCW      0x2c9d,0x1112
00017c  15fe20e7          DCW      0x15fe,0x20e7
000180  f7213179          DCW      0xf721,0x3179
000184  2aaa1294          DCW      0x2aaa,0x1294
000188  11a8238e          DCW      0x11a8,0x238e
00018c  f0873453          DCW      0xf087,0x3453
000190  28b21413          DCW      0x28b2,0x1413
000194  0d482620          DCW      0x0d48,0x2620
000198  ea0236e5          DCW      0xea02,0x36e5
00019c  26b31590          DCW      0x26b3,0x1590
0001a0  08df289a          DCW      0x08df,0x289a
0001a4  e39c392b          DCW      0xe39c,0x392b
0001a8  24ae1709          DCW      0x24ae,0x1709
0001ac  04712afb          DCW      0x0471,0x2afb
0001b0  dd5d3b21          DCW      0xdd5d,0x3b21
0001b4  22a3187e          DCW      0x22a3,0x187e
0001b8  00002d41          DCW      0x0000,0x2d41
0001bc  d74e3cc5          DCW      0xd74e,0x3cc5
0001c0  209319ef          DCW      0x2093,0x19ef
0001c4  fb8f2f6c          DCW      0xfb8f,0x2f6c
0001c8  d1783e15          DCW      0xd178,0x3e15
0001cc  1e7e1b5d          DCW      0x1e7e,0x1b5d
0001d0  f7213179          DCW      0xf721,0x3179
0001d4  cbe23f0f          DCW      0xcbe2,0x3f0f
0001d8  1c641cc6          DCW      0x1c64,0x1cc6
0001dc  f2b83368          DCW      0xf2b8,0x3368
0001e0  c6953fb1          DCW      0xc695,0x3fb1
0001e4  1a461e2b          DCW      0x1a46,0x1e2b
0001e8  ee583537          DCW      0xee58,0x3537
0001ec  c1973ffb          DCW      0xc197,0x3ffb
0001f0  18241f8c          DCW      0x1824,0x1f8c
0001f4  ea0236e5          DCW      0xea02,0x36e5
0001f8  bcf03fec          DCW      0xbcf0,0x3fec
0001fc  15fe20e7          DCW      0x15fe,0x20e7
000200  e5ba3871          DCW      0xe5ba,0x3871
000204  b8a63f85          DCW      0xb8a6,0x3f85
000208  13d5223d          DCW      0x13d5,0x223d
00020c  e18239db          DCW      0xe182,0x39db
000210  b4be3ec5          DCW      0xb4be,0x3ec5
000214  11a8238e          DCW      0x11a8,0x238e
000218  dd5d3b21          DCW      0xdd5d,0x3b21
00021c  b1403daf          DCW      0xb140,0x3daf
000220  0f7924da          DCW      0x0f79,0x24da
000224  d94d3c42          DCW      0xd94d,0x3c42
000228  ae2e3c42          DCW      0xae2e,0x3c42
00022c  0d482620          DCW      0x0d48,0x2620
000230  d5563d3f          DCW      0xd556,0x3d3f
000234  ab8e3a82          DCW      0xab8e,0x3a82
000238  0b142760          DCW      0x0b14,0x2760
00023c  d1783e15          DCW      0xd178,0x3e15
000240  a9633871          DCW      0xa963,0x3871
000244  08df289a          DCW      0x08df,0x289a
000248  cdb73ec5          DCW      0xcdb7,0x3ec5
00024c  a7b13612          DCW      0xa7b1,0x3612
000250  06a929ce          DCW      0x06a9,0x29ce
000254  ca153f4f          DCW      0xca15,0x3f4f
000258  a6783368          DCW      0xa678,0x3368
00025c  04712afb          DCW      0x0471,0x2afb
000260  c6953fb1          DCW      0xc695,0x3fb1
000264  a5bc3076          DCW      0xa5bc,0x3076
000268  02392c21          DCW      0x0239,0x2c21
00026c  c3383fec          DCW      0xc338,0x3fec
000270  a57e2d41          DCW      0xa57e,0x2d41
000274  00002d41          DCW      0x0000,0x2d41
000278  c0004000          DCW      0xc000,0x4000
00027c  a5bc29ce          DCW      0xa5bc,0x29ce
000280  fdc72e5a          DCW      0xfdc7,0x2e5a
000284  bcf03fec          DCW      0xbcf0,0x3fec
000288  a6782620          DCW      0xa678,0x2620
00028c  fb8f2f6c          DCW      0xfb8f,0x2f6c
000290  ba093fb1          DCW      0xba09,0x3fb1
000294  a7b1223d          DCW      0xa7b1,0x223d
000298  f9573076          DCW      0xf957,0x3076
00029c  b74d3f4f          DCW      0xb74d,0x3f4f
0002a0  a9631e2b          DCW      0xa963,0x1e2b
0002a4  f7213179          DCW      0xf721,0x3179
0002a8  b4be3ec5          DCW      0xb4be,0x3ec5
0002ac  ab8e19ef          DCW      0xab8e,0x19ef
0002b0  f4ec3274          DCW      0xf4ec,0x3274
0002b4  b25e3e15          DCW      0xb25e,0x3e15
0002b8  ae2e1590          DCW      0xae2e,0x1590
0002bc  f2b83368          DCW      0xf2b8,0x3368
0002c0  b02d3d3f          DCW      0xb02d,0x3d3f
0002c4  b1401112          DCW      0xb140,0x1112
0002c8  f0873453          DCW      0xf087,0x3453
0002cc  ae2e3c42          DCW      0xae2e,0x3c42
0002d0  b4be0c7c          DCW      0xb4be,0x0c7c
0002d4  ee583537          DCW      0xee58,0x3537
0002d8  ac613b21          DCW      0xac61,0x3b21
0002dc  b8a607d6          DCW      0xb8a6,0x07d6
0002e0  ec2b3612          DCW      0xec2b,0x3612
0002e4  aac839db          DCW      0xaac8,0x39db
0002e8  bcf00324          DCW      0xbcf0,0x0324
0002ec  ea0236e5          DCW      0xea02,0x36e5
0002f0  a9633871          DCW      0xa963,0x3871
0002f4  c197fe6e          DCW      0xc197,0xfe6e
0002f8  e7dc37b0          DCW      0xe7dc,0x37b0
0002fc  a83436e5          DCW      0xa834,0x36e5
000300  c695f9ba          DCW      0xc695,0xf9ba
000304  e5ba3871          DCW      0xe5ba,0x3871
000308  a73b3537          DCW      0xa73b,0x3537
00030c  cbe2f50f          DCW      0xcbe2,0xf50f
000310  e39c392b          DCW      0xe39c,0x392b
000314  a6783368          DCW      0xa678,0x3368
000318  d178f073          DCW      0xd178,0xf073
00031c  e18239db          DCW      0xe182,0x39db
000320  a5ed3179          DCW      0xa5ed,0x3179
000324  d74eebed          DCW      0xd74e,0xebed
000328  df6d3a82          DCW      0xdf6d,0x3a82
00032c  a5992f6c          DCW      0xa599,0x2f6c
000330  dd5de782          DCW      0xdd5d,0xe782
000334  dd5d3b21          DCW      0xdd5d,0x3b21
000338  a57e2d41          DCW      0xa57e,0x2d41
00033c  e39ce33a          DCW      0xe39c,0xe33a
000340  db523bb6          DCW      0xdb52,0x3bb6
000344  a5992afb          DCW      0xa599,0x2afb
000348  ea02df19          DCW      0xea02,0xdf19
00034c  d94d3c42          DCW      0xd94d,0x3c42
000350  a5ed289a          DCW      0xa5ed,0x289a
000354  f087db26          DCW      0xf087,0xdb26
000358  d74e3cc5          DCW      0xd74e,0x3cc5
00035c  a6782620          DCW      0xa678,0x2620
000360  f721d766          DCW      0xf721,0xd766
000364  d5563d3f          DCW      0xd556,0x3d3f
000368  a73b238e          DCW      0xa73b,0x238e
00036c  fdc7d3df          DCW      0xfdc7,0xd3df
000370  d3633daf          DCW      0xd363,0x3daf
000374  a83420e7          DCW      0xa834,0x20e7
000378  0471d094          DCW      0x0471,0xd094
00037c  d1783e15          DCW      0xd178,0x3e15
000380  a9631e2b          DCW      0xa963,0x1e2b
000384  0b14cd8c          DCW      0x0b14,0xcd8c
000388  cf943e72          DCW      0xcf94,0x3e72
00038c  aac81b5d          DCW      0xaac8,0x1b5d
000390  11a8cac9          DCW      0x11a8,0xcac9
000394  cdb73ec5          DCW      0xcdb7,0x3ec5
000398  ac61187e          DCW      0xac61,0x187e
00039c  1824c850          DCW      0x1824,0xc850
0003a0  cbe23f0f          DCW      0xcbe2,0x3f0f
0003a4  ae2e1590          DCW      0xae2e,0x1590
0003a8  1e7ec625          DCW      0x1e7e,0xc625
0003ac  ca153f4f          DCW      0xca15,0x3f4f
0003b0  b02d1294          DCW      0xb02d,0x1294
0003b4  24aec44a          DCW      0x24ae,0xc44a
0003b8  c8513f85          DCW      0xc851,0x3f85
0003bc  b25e0f8d          DCW      0xb25e,0x0f8d
0003c0  2aaac2c1          DCW      0x2aaa,0xc2c1
0003c4  c6953fb1          DCW      0xc695,0x3fb1
0003c8  b4be0c7c          DCW      0xb4be,0x0c7c
0003cc  306cc18e          DCW      0x306c,0xc18e
0003d0  c4e23fd4          DCW      0xc4e2,0x3fd4
0003d4  b74d0964          DCW      0xb74d,0x0964
0003d8  35ebc0b1          DCW      0x35eb,0xc0b1
0003dc  c3383fec          DCW      0xc338,0x3fec
0003e0  ba090646          DCW      0xba09,0x0646
0003e4  3b1ec02c          DCW      0x3b1e,0xc02c
0003e8  c1973ffb          DCW      0xc197,0x3ffb
0003ec  bcf00324          DCW      0xbcf0,0x0324
0003f0  40000000          DCW      0x4000,0x0000
0003f4  40000000          DCW      0x4000,0x0000
0003f8  40000000          DCW      0x4000,0x0000
0003fc  3ed0012e          DCW      0x3ed0,0x012e
000400  3f9b0065          DCW      0x3f9b,0x0065
000404  3f3600c9          DCW      0x3f36,0x00c9
000408  3d9a025b          DCW      0x3d9a,0x025b
00040c  3f3600c9          DCW      0x3f36,0x00c9
000410  3e690192          DCW      0x3e69,0x0192
000414  3c5f0388          DCW      0x3c5f,0x0388
000418  3ed0012e          DCW      0x3ed0,0x012e
00041c  3d9a025b          DCW      0x3d9a,0x025b
000420  3b1e04b5          DCW      0x3b1e,0x04b5
000424  3e690192          DCW      0x3e69,0x0192
000428  3cc80324          DCW      0x3cc8,0x0324
00042c  39d905e2          DCW      0x39d9,0x05e2
000430  3e0201f7          DCW      0x3e02,0x01f7
000434  3bf403ed          DCW      0x3bf4,0x03ed
000438  388e070e          DCW      0x388e,0x070e
00043c  3d9a025b          DCW      0x3d9a,0x025b
000440  3b1e04b5          DCW      0x3b1e,0x04b5
000444  373f0839          DCW      0x373f,0x0839
000448  3d3102c0          DCW      0x3d31,0x02c0
00044c  3a46057e          DCW      0x3a46,0x057e
000450  35eb0964          DCW      0x35eb,0x0964
000454  3cc80324          DCW      0x3cc8,0x0324
000458  396b0646          DCW      0x396b,0x0646
00045c  34920a8e          DCW      0x3492,0x0a8e
000460  3c5f0388          DCW      0x3c5f,0x0388
000464  388e070e          DCW      0x388e,0x070e
000468  33340bb7          DCW      0x3334,0x0bb7
00046c  3bf403ed          DCW      0x3bf4,0x03ed
000470  37af07d6          DCW      0x37af,0x07d6
000474  31d20cdf          DCW      0x31d2,0x0cdf
000478  3b8a0451          DCW      0x3b8a,0x0451
00047c  36ce089d          DCW      0x36ce,0x089d
000480  306c0e06          DCW      0x306c,0x0e06
000484  3b1e04b5          DCW      0x3b1e,0x04b5
000488  35eb0964          DCW      0x35eb,0x0964
00048c  2f020f2b          DCW      0x2f02,0x0f2b
000490  3ab2051a          DCW      0x3ab2,0x051a
000494  35050a2b          DCW      0x3505,0x0a2b
000498  2d931050          DCW      0x2d93,0x1050
00049c  3a46057e          DCW      0x3a46,0x057e
0004a0  341e0af1          DCW      0x341e,0x0af1
0004a4  2c211173          DCW      0x2c21,0x1173
0004a8  39d905e2          DCW      0x39d9,0x05e2
0004ac  33340bb7          DCW      0x3334,0x0bb7
0004b0  2aaa1294          DCW      0x2aaa,0x1294
0004b4  396b0646          DCW      0x396b,0x0646
0004b8  32490c7c          DCW      0x3249,0x0c7c
0004bc  293113b4          DCW      0x2931,0x13b4
0004c0  38fd06aa          DCW      0x38fd,0x06aa
0004c4  315b0d41          DCW      0x315b,0x0d41
0004c8  27b314d2          DCW      0x27b3,0x14d2
0004cc  388e070e          DCW      0x388e,0x070e
0004d0  306c0e06          DCW      0x306c,0x0e06
0004d4  263215ee          DCW      0x2632,0x15ee
0004d8  381f0772          DCW      0x381f,0x0772
0004dc  2f7b0eca          DCW      0x2f7b,0x0eca
0004e0  24ae1709          DCW      0x24ae,0x1709
0004e4  37af07d6          DCW      0x37af,0x07d6
0004e8  2e880f8d          DCW      0x2e88,0x0f8d
0004ec  23261821          DCW      0x2326,0x1821
0004f0  373f0839          DCW      0x373f,0x0839
0004f4  2d931050          DCW      0x2d93,0x1050
0004f8  219c1937          DCW      0x219c,0x1937
0004fc  36ce089d          DCW      0x36ce,0x089d
000500  2c9d1112          DCW      0x2c9d,0x1112
000504  200e1a4b          DCW      0x200e,0x1a4b
000508  365d0901          DCW      0x365d,0x0901
00050c  2ba411d3          DCW      0x2ba4,0x11d3
000510  1e7e1b5d          DCW      0x1e7e,0x1b5d
000514  35eb0964          DCW      0x35eb,0x0964
000518  2aaa1294          DCW      0x2aaa,0x1294
00051c  1ceb1c6c          DCW      0x1ceb,0x1c6c
000520  357809c7          DCW      0x3578,0x09c7
000524  29af1354          DCW      0x29af,0x1354
000528  1b561d79          DCW      0x1b56,0x1d79
00052c  35050a2b          DCW      0x3505,0x0a2b
000530  28b21413          DCW      0x28b2,0x1413
000534  19be1e84          DCW      0x19be,0x1e84
000538  34920a8e          DCW      0x3492,0x0a8e
00053c  27b314d2          DCW      0x27b3,0x14d2
000540  18241f8c          DCW      0x1824,0x1f8c
000544  341e0af1          DCW      0x341e,0x0af1
000548  26b31590          DCW      0x26b3,0x1590
00054c  16882091          DCW      0x1688,0x2091
000550  33a90b54          DCW      0x33a9,0x0b54
000554  25b1164c          DCW      0x25b1,0x164c
000558  14ea2193          DCW      0x14ea,0x2193
00055c  33340bb7          DCW      0x3334,0x0bb7
000560  24ae1709          DCW      0x24ae,0x1709
000564  134a2292          DCW      0x134a,0x2292
000568  32bf0c1a          DCW      0x32bf,0x0c1a
00056c  23a917c4          DCW      0x23a9,0x17c4
000570  11a8238e          DCW      0x11a8,0x238e
000574  32490c7c          DCW      0x3249,0x0c7c
000578  22a3187e          DCW      0x22a3,0x187e
00057c  10052488          DCW      0x1005,0x2488
000580  31d20cdf          DCW      0x31d2,0x0cdf
000584  219c1937          DCW      0x219c,0x1937
000588  0e61257e          DCW      0x0e61,0x257e
00058c  315b0d41          DCW      0x315b,0x0d41
000590  209319ef          DCW      0x2093,0x19ef
000594  0cbb2671          DCW      0x0cbb,0x2671
000598  30e40da4          DCW      0x30e4,0x0da4
00059c  1f891aa7          DCW      0x1f89,0x1aa7
0005a0  0b142760          DCW      0x0b14,0x2760
0005a4  306c0e06          DCW      0x306c,0x0e06
0005a8  1e7e1b5d          DCW      0x1e7e,0x1b5d
0005ac  096d284c          DCW      0x096d,0x284c
0005b0  2ff40e68          DCW      0x2ff4,0x0e68
0005b4  1d721c12          DCW      0x1d72,0x1c12
0005b8  07c42935          DCW      0x07c4,0x2935
0005bc  2f7b0eca          DCW      0x2f7b,0x0eca
0005c0  1c641cc6          DCW      0x1c64,0x1cc6
0005c4  061b2a1a          DCW      0x061b,0x2a1a
0005c8  2f020f2b          DCW      0x2f02,0x0f2b
0005cc  1b561d79          DCW      0x1b56,0x1d79
0005d0  04712afb          DCW      0x0471,0x2afb
0005d4  2e880f8d          DCW      0x2e88,0x0f8d
0005d8  1a461e2b          DCW      0x1a46,0x1e2b
0005dc  02c72bd8          DCW      0x02c7,0x2bd8
0005e0  2e0e0fee          DCW      0x2e0e,0x0fee
0005e4  19351edc          DCW      0x1935,0x1edc
0005e8  011c2cb2          DCW      0x011c,0x2cb2
0005ec  2d931050          DCW      0x2d93,0x1050
0005f0  18241f8c          DCW      0x1824,0x1f8c
0005f4  ff722d88          DCW      0xff72,0x2d88
0005f8  2d1810b1          DCW      0x2d18,0x10b1
0005fc  1711203a          DCW      0x1711,0x203a
000600  fdc72e5a          DCW      0xfdc7,0x2e5a
000604  2c9d1112          DCW      0x2c9d,0x1112
000608  15fe20e7          DCW      0x15fe,0x20e7
00060c  fc1d2f28          DCW      0xfc1d,0x2f28
000610  2c211173          DCW      0x2c21,0x1173
000614  14ea2193          DCW      0x14ea,0x2193
000618  fa732ff2          DCW      0xfa73,0x2ff2
00061c  2ba411d3          DCW      0x2ba4,0x11d3
000620  13d5223d          DCW      0x13d5,0x223d
000624  f8ca30b8          DCW      0xf8ca,0x30b8
000628  2b281234          DCW      0x2b28,0x1234
00062c  12bf22e7          DCW      0x12bf,0x22e7
000630  f7213179          DCW      0xf721,0x3179
000634  2aaa1294          DCW      0x2aaa,0x1294
000638  11a8238e          DCW      0x11a8,0x238e
00063c  f5793236          DCW      0xf579,0x3236
000640  2a2d12f4          DCW      0x2a2d,0x12f4
000644  10912435          DCW      0x1091,0x2435
000648  f3d232ef          DCW      0xf3d2,0x32ef
00064c  29af1354          DCW      0x29af,0x1354
000650  0f7924da          DCW      0x0f79,0x24da
000654  f22c33a3          DCW      0xf22c,0x33a3
000658  293113b4          DCW      0x2931,0x13b4
00065c  0e61257e          DCW      0x0e61,0x257e
000660  f0873453          DCW      0xf087,0x3453
000664  28b21413          DCW      0x28b2,0x1413
000668  0d482620          DCW      0x0d48,0x2620
00066c  eee334ff          DCW      0xeee3,0x34ff
000670  28331473          DCW      0x2833,0x1473
000674  0c2e26c1          DCW      0x0c2e,0x26c1
000678  ed4135a5          DCW      0xed41,0x35a5
00067c  27b314d2          DCW      0x27b3,0x14d2
000680  0b142760          DCW      0x0b14,0x2760
000684  eba13648          DCW      0xeba1,0x3648
000688  27331531          DCW      0x2733,0x1531
00068c  09fa27fe          DCW      0x09fa,0x27fe
000690  ea0236e5          DCW      0xea02,0x36e5
000694  26b31590          DCW      0x26b3,0x1590
000698  08df289a          DCW      0x08df,0x289a
00069c  e865377e          DCW      0xe865,0x377e
0006a0  263215ee          DCW      0x2632,0x15ee
0006a4  07c42935          DCW      0x07c4,0x2935
0006a8  e6cb3812          DCW      0xe6cb,0x3812
0006ac  25b1164c          DCW      0x25b1,0x164c
0006b0  06a929ce          DCW      0x06a9,0x29ce
0006b4  e53238a1          DCW      0xe532,0x38a1
0006b8  252f16ab          DCW      0x252f,0x16ab
0006bc  058d2a65          DCW      0x058d,0x2a65
0006c0  e39c392b          DCW      0xe39c,0x392b
0006c4  24ae1709          DCW      0x24ae,0x1709
0006c8  04712afb          DCW      0x0471,0x2afb
0006cc  e20839b0          DCW      0xe208,0x39b0
0006d0  242b1766          DCW      0x242b,0x1766
0006d4  03552b8f          DCW      0x0355,0x2b8f
0006d8  e0773a30          DCW      0xe077,0x3a30
0006dc  23a917c4          DCW      0x23a9,0x17c4
0006e0  02392c21          DCW      0x0239,0x2c21
0006e4  dee93aab          DCW      0xdee9,0x3aab
0006e8  23261821          DCW      0x2326,0x1821
0006ec  011c2cb2          DCW      0x011c,0x2cb2
0006f0  dd5d3b21          DCW      0xdd5d,0x3b21
0006f4  22a3187e          DCW      0x22a3,0x187e
0006f8  00002d41          DCW      0x0000,0x2d41
0006fc  dbd53b92          DCW      0xdbd5,0x3b92
000700  221f18db          DCW      0x221f,0x18db
000704  fee42dcf          DCW      0xfee4,0x2dcf
000708  da4f3bfd          DCW      0xda4f,0x3bfd
00070c  219c1937          DCW      0x219c,0x1937
000710  fdc72e5a          DCW      0xfdc7,0x2e5a
000714  d8cd3c64          DCW      0xd8cd,0x3c64
000718  21171993          DCW      0x2117,0x1993
00071c  fcab2ee4          DCW      0xfcab,0x2ee4
000720  d74e3cc5          DCW      0xd74e,0x3cc5
000724  209319ef          DCW      0x2093,0x19ef
000728  fb8f2f6c          DCW      0xfb8f,0x2f6c
00072c  d5d33d21          DCW      0xd5d3,0x3d21
000730  200e1a4b          DCW      0x200e,0x1a4b
000734  fa732ff2          DCW      0xfa73,0x2ff2
000738  d45c3d78          DCW      0xd45c,0x3d78
00073c  1f891aa7          DCW      0x1f89,0x1aa7
000740  f9573076          DCW      0xf957,0x3076
000744  d2e83dc9          DCW      0xd2e8,0x3dc9
000748  1f041b02          DCW      0x1f04,0x1b02
00074c  f83c30f9          DCW      0xf83c,0x30f9
000750  d1783e15          DCW      0xd178,0x3e15
000754  1e7e1b5d          DCW      0x1e7e,0x1b5d
000758  f7213179          DCW      0xf721,0x3179
00075c  d00c3e5c          DCW      0xd00c,0x3e5c
000760  1df81bb8          DCW      0x1df8,0x1bb8
000764  f60631f8          DCW      0xf606,0x31f8
000768  cea53e9d          DCW      0xcea5,0x3e9d
00076c  1d721c12          DCW      0x1d72,0x1c12
000770  f4ec3274          DCW      0xf4ec,0x3274
000774  cd413ed8          DCW      0xcd41,0x3ed8
000778  1ceb1c6c          DCW      0x1ceb,0x1c6c
00077c  f3d232ef          DCW      0xf3d2,0x32ef
000780  cbe23f0f          DCW      0xcbe2,0x3f0f
000784  1c641cc6          DCW      0x1c64,0x1cc6
000788  f2b83368          DCW      0xf2b8,0x3368
00078c  ca883f40          DCW      0xca88,0x3f40
000790  1bdd1d20          DCW      0x1bdd,0x1d20
000794  f19f33df          DCW      0xf19f,0x33df
000798  c9323f6b          DCW      0xc932,0x3f6b
00079c  1b561d79          DCW      0x1b56,0x1d79
0007a0  f0873453          DCW      0xf087,0x3453
0007a4  c7e13f91          DCW      0xc7e1,0x3f91
0007a8  1ace1dd3          DCW      0x1ace,0x1dd3
0007ac  ef6f34c6          DCW      0xef6f,0x34c6
0007b0  c6953fb1          DCW      0xc695,0x3fb1
0007b4  1a461e2b          DCW      0x1a46,0x1e2b
0007b8  ee583537          DCW      0xee58,0x3537
0007bc  c54e3fcc          DCW      0xc54e,0x3fcc
0007c0  19be1e84          DCW      0x19be,0x1e84
0007c4  ed4135a5          DCW      0xed41,0x35a5
0007c8  c40c3fe1          DCW      0xc40c,0x3fe1
0007cc  19351edc          DCW      0x1935,0x1edc
0007d0  ec2b3612          DCW      0xec2b,0x3612
0007d4  c2cf3ff1          DCW      0xc2cf,0x3ff1
0007d8  18ad1f34          DCW      0x18ad,0x1f34
0007dc  eb16367d          DCW      0xeb16,0x367d
0007e0  c1973ffb          DCW      0xc197,0x3ffb
0007e4  18241f8c          DCW      0x1824,0x1f8c
0007e8  ea0236e5          DCW      0xea02,0x36e5
0007ec  c0654000          DCW      0xc065,0x4000
0007f0  179b1fe3          DCW      0x179b,0x1fe3
0007f4  e8ef374b          DCW      0xe8ef,0x374b
0007f8  bf383fff          DCW      0xbf38,0x3fff
0007fc  1711203a          DCW      0x1711,0x203a
000800  e7dc37b0          DCW      0xe7dc,0x37b0
000804  be113ff8          DCW      0xbe11,0x3ff8
000808  16882091          DCW      0x1688,0x2091
00080c  e6cb3812          DCW      0xe6cb,0x3812
000810  bcf03fec          DCW      0xbcf0,0x3fec
000814  15fe20e7          DCW      0x15fe,0x20e7
000818  e5ba3871          DCW      0xe5ba,0x3871
00081c  bbd43fdb          DCW      0xbbd4,0x3fdb
000820  1574213d          DCW      0x1574,0x213d
000824  e4aa38cf          DCW      0xe4aa,0x38cf
000828  babf3fc4          DCW      0xbabf,0x3fc4
00082c  14ea2193          DCW      0x14ea,0x2193
000830  e39c392b          DCW      0xe39c,0x392b
000834  b9af3fa7          DCW      0xb9af,0x3fa7
000838  145f21e8          DCW      0x145f,0x21e8
00083c  e28e3984          DCW      0xe28e,0x3984
000840  b8a63f85          DCW      0xb8a6,0x3f85
000844  13d5223d          DCW      0x13d5,0x223d
000848  e18239db          DCW      0xe182,0x39db
00084c  b7a23f5d          DCW      0xb7a2,0x3f5d
000850  134a2292          DCW      0x134a,0x2292
000854  e0773a30          DCW      0xe077,0x3a30
000858  b6a53f30          DCW      0xb6a5,0x3f30
00085c  12bf22e7          DCW      0x12bf,0x22e7
000860  df6d3a82          DCW      0xdf6d,0x3a82
000864  b5af3efd          DCW      0xb5af,0x3efd
000868  1234233b          DCW      0x1234,0x233b
00086c  de643ad3          DCW      0xde64,0x3ad3
000870  b4be3ec5          DCW      0xb4be,0x3ec5
000874  11a8238e          DCW      0x11a8,0x238e
000878  dd5d3b21          DCW      0xdd5d,0x3b21
00087c  b3d53e88          DCW      0xb3d5,0x3e88
000880  111d23e2          DCW      0x111d,0x23e2
000884  dc573b6d          DCW      0xdc57,0x3b6d
000888  b2f23e45          DCW      0xb2f2,0x3e45
00088c  10912435          DCW      0x1091,0x2435
000890  db523bb6          DCW      0xdb52,0x3bb6
000894  b2153dfc          DCW      0xb215,0x3dfc
000898  10052488          DCW      0x1005,0x2488
00089c  da4f3bfd          DCW      0xda4f,0x3bfd
0008a0  b1403daf          DCW      0xb140,0x3daf
0008a4  0f7924da          DCW      0x0f79,0x24da
0008a8  d94d3c42          DCW      0xd94d,0x3c42
0008ac  b0713d5b          DCW      0xb071,0x3d5b
0008b0  0eed252c          DCW      0x0eed,0x252c
0008b4  d84d3c85          DCW      0xd84d,0x3c85
0008b8  afa93d03          DCW      0xafa9,0x3d03
0008bc  0e61257e          DCW      0x0e61,0x257e
0008c0  d74e3cc5          DCW      0xd74e,0x3cc5
0008c4  aee83ca5          DCW      0xaee8,0x3ca5
0008c8  0dd425cf          DCW      0x0dd4,0x25cf
0008cc  d6513d03          DCW      0xd651,0x3d03
0008d0  ae2e3c42          DCW      0xae2e,0x3c42
0008d4  0d482620          DCW      0x0d48,0x2620
0008d8  d5563d3f          DCW      0xd556,0x3d3f
0008dc  ad7b3bda          DCW      0xad7b,0x3bda
0008e0  0cbb2671          DCW      0x0cbb,0x2671
0008e4  d45c3d78          DCW      0xd45c,0x3d78
0008e8  acd03b6d          DCW      0xacd0,0x3b6d
0008ec  0c2e26c1          DCW      0x0c2e,0x26c1
0008f0  d3633daf          DCW      0xd363,0x3daf
0008f4  ac2b3afa          DCW      0xac2b,0x3afa
0008f8  0ba12711          DCW      0x0ba1,0x2711
0008fc  d26d3de3          DCW      0xd26d,0x3de3
000900  ab8e3a82          DCW      0xab8e,0x3a82
000904  0b142760          DCW      0x0b14,0x2760
000908  d1783e15          DCW      0xd178,0x3e15
00090c  aaf83a06          DCW      0xaaf8,0x3a06
000910  0a8727af          DCW      0x0a87,0x27af
000914  d0853e45          DCW      0xd085,0x3e45
000918  aa6a3984          DCW      0xaa6a,0x3984
00091c  09fa27fe          DCW      0x09fa,0x27fe
000920  cf943e72          DCW      0xcf94,0x3e72
000924  a9e338fd          DCW      0xa9e3,0x38fd
000928  096d284c          DCW      0x096d,0x284c
00092c  cea53e9d          DCW      0xcea5,0x3e9d
000930  a9633871          DCW      0xa963,0x3871
000934  08df289a          DCW      0x08df,0x289a
000938  cdb73ec5          DCW      0xcdb7,0x3ec5
00093c  a8eb37e1          DCW      0xa8eb,0x37e1
000940  085228e7          DCW      0x0852,0x28e7
000944  cccc3eeb          DCW      0xcccc,0x3eeb
000948  a87b374b          DCW      0xa87b,0x374b
00094c  07c42935          DCW      0x07c4,0x2935
000950  cbe23f0f          DCW      0xcbe2,0x3f0f
000954  a81236b1          DCW      0xa812,0x36b1
000958  07362981          DCW      0x0736,0x2981
00095c  cafb3f30          DCW      0xcafb,0x3f30
000960  a7b13612          DCW      0xa7b1,0x3612
000964  06a929ce          DCW      0x06a9,0x29ce
000968  ca153f4f          DCW      0xca15,0x3f4f
00096c  a757356e          DCW      0xa757,0x356e
000970  061b2a1a          DCW      0x061b,0x2a1a
000974  c9323f6b          DCW      0xc932,0x3f6b
000978  a70534c6          DCW      0xa705,0x34c6
00097c  058d2a65          DCW      0x058d,0x2a65
000980  c8513f85          DCW      0xc851,0x3f85
000984  a6bb3419          DCW      0xa6bb,0x3419
000988  04ff2ab0          DCW      0x04ff,0x2ab0
00098c  c7723f9c          DCW      0xc772,0x3f9c
000990  a6783368          DCW      0xa678,0x3368
000994  04712afb          DCW      0x0471,0x2afb
000998  c6953fb1          DCW      0xc695,0x3fb1
00099c  a63e32b2          DCW      0xa63e,0x32b2
0009a0  03e32b45          DCW      0x03e3,0x2b45
0009a4  c5ba3fc4          DCW      0xc5ba,0x3fc4
0009a8  a60b31f8          DCW      0xa60b,0x31f8
0009ac  03552b8f          DCW      0x0355,0x2b8f
0009b0  c4e23fd4          DCW      0xc4e2,0x3fd4
0009b4  a5e03139          DCW      0xa5e0,0x3139
0009b8  02c72bd8          DCW      0x02c7,0x2bd8
0009bc  c40c3fe1          DCW      0xc40c,0x3fe1
0009c0  a5bc3076          DCW      0xa5bc,0x3076
0009c4  02392c21          DCW      0x0239,0x2c21
0009c8  c3383fec          DCW      0xc338,0x3fec
0009cc  a5a12faf          DCW      0xa5a1,0x2faf
0009d0  01aa2c6a          DCW      0x01aa,0x2c6a
0009d4  c2663ff5          DCW      0xc266,0x3ff5
0009d8  a58d2ee4          DCW      0xa58d,0x2ee4
0009dc  011c2cb2          DCW      0x011c,0x2cb2
0009e0  c1973ffb          DCW      0xc197,0x3ffb
0009e4  a5812e15          DCW      0xa581,0x2e15
0009e8  008e2cfa          DCW      0x008e,0x2cfa
0009ec  c0ca3fff          DCW      0xc0ca,0x3fff
0009f0  a57e2d41          DCW      0xa57e,0x2d41
0009f4  00002d41          DCW      0x0000,0x2d41
0009f8  c0004000          DCW      0xc000,0x4000
0009fc  a5812c6a          DCW      0xa581,0x2c6a
000a00  ff722d88          DCW      0xff72,0x2d88
000a04  bf383fff          DCW      0xbf38,0x3fff
000a08  a58d2b8f          DCW      0xa58d,0x2b8f
000a0c  fee42dcf          DCW      0xfee4,0x2dcf
000a10  be733ffb          DCW      0xbe73,0x3ffb
000a14  a5a12ab0          DCW      0xa5a1,0x2ab0
000a18  fe562e15          DCW      0xfe56,0x2e15
000a1c  bdb03ff5          DCW      0xbdb0,0x3ff5
000a20  a5bc29ce          DCW      0xa5bc,0x29ce
000a24  fdc72e5a          DCW      0xfdc7,0x2e5a
000a28  bcf03fec          DCW      0xbcf0,0x3fec
000a2c  a5e028e7          DCW      0xa5e0,0x28e7
000a30  fd392e9f          DCW      0xfd39,0x2e9f
000a34  bc323fe1          DCW      0xbc32,0x3fe1
000a38  a60b27fe          DCW      0xa60b,0x27fe
000a3c  fcab2ee4          DCW      0xfcab,0x2ee4
000a40  bb773fd4          DCW      0xbb77,0x3fd4
000a44  a63e2711          DCW      0xa63e,0x2711
000a48  fc1d2f28          DCW      0xfc1d,0x2f28
000a4c  babf3fc4          DCW      0xbabf,0x3fc4
000a50  a6782620          DCW      0xa678,0x2620
000a54  fb8f2f6c          DCW      0xfb8f,0x2f6c
000a58  ba093fb1          DCW      0xba09,0x3fb1
000a5c  a6bb252c          DCW      0xa6bb,0x252c
000a60  fb012faf          DCW      0xfb01,0x2faf
000a64  b9563f9c          DCW      0xb956,0x3f9c
000a68  a7052435          DCW      0xa705,0x2435
000a6c  fa732ff2          DCW      0xfa73,0x2ff2
000a70  b8a63f85          DCW      0xb8a6,0x3f85
000a74  a757233b          DCW      0xa757,0x233b
000a78  f9e53034          DCW      0xf9e5,0x3034
000a7c  b7f83f6b          DCW      0xb7f8,0x3f6b
000a80  a7b1223d          DCW      0xa7b1,0x223d
000a84  f9573076          DCW      0xf957,0x3076
000a88  b74d3f4f          DCW      0xb74d,0x3f4f
000a8c  a812213d          DCW      0xa812,0x213d
000a90  f8ca30b8          DCW      0xf8ca,0x30b8
000a94  b6a53f30          DCW      0xb6a5,0x3f30
000a98  a87b203a          DCW      0xa87b,0x203a
000a9c  f83c30f9          DCW      0xf83c,0x30f9
000aa0  b6003f0f          DCW      0xb600,0x3f0f
000aa4  a8eb1f34          DCW      0xa8eb,0x1f34
000aa8  f7ae3139          DCW      0xf7ae,0x3139
000aac  b55e3eeb          DCW      0xb55e,0x3eeb
000ab0  a9631e2b          DCW      0xa963,0x1e2b
000ab4  f7213179          DCW      0xf721,0x3179
000ab8  b4be3ec5          DCW      0xb4be,0x3ec5
000abc  a9e31d20          DCW      0xa9e3,0x1d20
000ac0  f69331b9          DCW      0xf693,0x31b9
000ac4  b4223e9d          DCW      0xb422,0x3e9d
000ac8  aa6a1c12          DCW      0xaa6a,0x1c12
000acc  f60631f8          DCW      0xf606,0x31f8
000ad0  b3883e72          DCW      0xb388,0x3e72
000ad4  aaf81b02          DCW      0xaaf8,0x1b02
000ad8  f5793236          DCW      0xf579,0x3236
000adc  b2f23e45          DCW      0xb2f2,0x3e45
000ae0  ab8e19ef          DCW      0xab8e,0x19ef
000ae4  f4ec3274          DCW      0xf4ec,0x3274
000ae8  b25e3e15          DCW      0xb25e,0x3e15
000aec  ac2b18db          DCW      0xac2b,0x18db
000af0  f45f32b2          DCW      0xf45f,0x32b2
000af4  b1cd3de3          DCW      0xb1cd,0x3de3
000af8  acd017c4          DCW      0xacd0,0x17c4
000afc  f3d232ef          DCW      0xf3d2,0x32ef
000b00  b1403daf          DCW      0xb140,0x3daf
000b04  ad7b16ab          DCW      0xad7b,0x16ab
000b08  f345332c          DCW      0xf345,0x332c
000b0c  b0b53d78          DCW      0xb0b5,0x3d78
000b10  ae2e1590          DCW      0xae2e,0x1590
000b14  f2b83368          DCW      0xf2b8,0x3368
000b18  b02d3d3f          DCW      0xb02d,0x3d3f
000b1c  aee81473          DCW      0xaee8,0x1473
000b20  f22c33a3          DCW      0xf22c,0x33a3
000b24  afa93d03          DCW      0xafa9,0x3d03
000b28  afa91354          DCW      0xafa9,0x1354
000b2c  f19f33df          DCW      0xf19f,0x33df
000b30  af283cc5          DCW      0xaf28,0x3cc5
000b34  b0711234          DCW      0xb071,0x1234
000b38  f1133419          DCW      0xf113,0x3419
000b3c  aea93c85          DCW      0xaea9,0x3c85
000b40  b1401112          DCW      0xb140,0x1112
000b44  f0873453          DCW      0xf087,0x3453
000b48  ae2e3c42          DCW      0xae2e,0x3c42
000b4c  b2150fee          DCW      0xb215,0x0fee
000b50  effb348d          DCW      0xeffb,0x348d
000b54  adb63bfd          DCW      0xadb6,0x3bfd
000b58  b2f20eca          DCW      0xb2f2,0x0eca
000b5c  ef6f34c6          DCW      0xef6f,0x34c6
000b60  ad413bb6          DCW      0xad41,0x3bb6
000b64  b3d50da4          DCW      0xb3d5,0x0da4
000b68  eee334ff          DCW      0xeee3,0x34ff
000b6c  acd03b6d          DCW      0xacd0,0x3b6d
000b70  b4be0c7c          DCW      0xb4be,0x0c7c
000b74  ee583537          DCW      0xee58,0x3537
000b78  ac613b21          DCW      0xac61,0x3b21
000b7c  b5af0b54          DCW      0xb5af,0x0b54
000b80  edcc356e          DCW      0xedcc,0x356e
000b84  abf63ad3          DCW      0xabf6,0x3ad3
000b88  b6a50a2b          DCW      0xb6a5,0x0a2b
000b8c  ed4135a5          DCW      0xed41,0x35a5
000b90  ab8e3a82          DCW      0xab8e,0x3a82
000b94  b7a20901          DCW      0xb7a2,0x0901
000b98  ecb635dc          DCW      0xecb6,0x35dc
000b9c  ab293a30          DCW      0xab29,0x3a30
000ba0  b8a607d6          DCW      0xb8a6,0x07d6
000ba4  ec2b3612          DCW      0xec2b,0x3612
000ba8  aac839db          DCW      0xaac8,0x39db
000bac  b9af06aa          DCW      0xb9af,0x06aa
000bb0  eba13648          DCW      0xeba1,0x3648
000bb4  aa6a3984          DCW      0xaa6a,0x3984
000bb8  babf057e          DCW      0xbabf,0x057e
000bbc  eb16367d          DCW      0xeb16,0x367d
000bc0  aa0f392b          DCW      0xaa0f,0x392b
000bc4  bbd40451          DCW      0xbbd4,0x0451
000bc8  ea8c36b1          DCW      0xea8c,0x36b1
000bcc  a9b738cf          DCW      0xa9b7,0x38cf
000bd0  bcf00324          DCW      0xbcf0,0x0324
000bd4  ea0236e5          DCW      0xea02,0x36e5
000bd8  a9633871          DCW      0xa963,0x3871
000bdc  be1101f7          DCW      0xbe11,0x01f7
000be0  e9783718          DCW      0xe978,0x3718
000be4  a9123812          DCW      0xa912,0x3812
000be8  bf3800c9          DCW      0xbf38,0x00c9
000bec  e8ef374b          DCW      0xe8ef,0x374b
000bf0  a8c537b0          DCW      0xa8c5,0x37b0
000bf4  c065ff9b          DCW      0xc065,0xff9b
000bf8  e865377e          DCW      0xe865,0x377e
000bfc  a87b374b          DCW      0xa87b,0x374b
000c00  c197fe6e          DCW      0xc197,0xfe6e
000c04  e7dc37b0          DCW      0xe7dc,0x37b0
000c08  a83436e5          DCW      0xa834,0x36e5
000c0c  c2cffd40          DCW      0xc2cf,0xfd40
000c10  e75337e1          DCW      0xe753,0x37e1
000c14  a7f1367d          DCW      0xa7f1,0x367d
000c18  c40cfc13          DCW      0xc40c,0xfc13
000c1c  e6cb3812          DCW      0xe6cb,0x3812
000c20  a7b13612          DCW      0xa7b1,0x3612
000c24  c54efae6          DCW      0xc54e,0xfae6
000c28  e6423842          DCW      0xe642,0x3842
000c2c  a77435a5          DCW      0xa774,0x35a5
000c30  c695f9ba          DCW      0xc695,0xf9ba
000c34  e5ba3871          DCW      0xe5ba,0x3871
000c38  a73b3537          DCW      0xa73b,0x3537
000c3c  c7e1f88e          DCW      0xc7e1,0xf88e
000c40  e53238a1          DCW      0xe532,0x38a1
000c44  a70534c6          DCW      0xa705,0x34c6
000c48  c932f763          DCW      0xc932,0xf763
000c4c  e4aa38cf          DCW      0xe4aa,0x38cf
000c50  a6d33453          DCW      0xa6d3,0x3453
000c54  ca88f639          DCW      0xca88,0xf639
000c58  e42338fd          DCW      0xe423,0x38fd
000c5c  a6a433df          DCW      0xa6a4,0x33df
000c60  cbe2f50f          DCW      0xcbe2,0xf50f
000c64  e39c392b          DCW      0xe39c,0x392b
000c68  a6783368          DCW      0xa678,0x3368
000c6c  cd41f3e6          DCW      0xcd41,0xf3e6
000c70  e3153958          DCW      0xe315,0x3958
000c74  a65032ef          DCW      0xa650,0x32ef
000c78  cea5f2bf          DCW      0xcea5,0xf2bf
000c7c  e28e3984          DCW      0xe28e,0x3984
000c80  a62c3274          DCW      0xa62c,0x3274
000c84  d00cf198          DCW      0xd00c,0xf198
000c88  e20839b0          DCW      0xe208,0x39b0
000c8c  a60b31f8          DCW      0xa60b,0x31f8
000c90  d178f073          DCW      0xd178,0xf073
000c94  e18239db          DCW      0xe182,0x39db
000c98  a5ed3179          DCW      0xa5ed,0x3179
000c9c  d2e8ef4f          DCW      0xd2e8,0xef4f
000ca0  e0fc3a06          DCW      0xe0fc,0x3a06
000ca4  a5d330f9          DCW      0xa5d3,0x30f9
000ca8  d45cee2d          DCW      0xd45c,0xee2d
000cac  e0773a30          DCW      0xe077,0x3a30
000cb0  a5bc3076          DCW      0xa5bc,0x3076
000cb4  d5d3ed0c          DCW      0xd5d3,0xed0c
000cb8  dff23a59          DCW      0xdff2,0x3a59
000cbc  a5a92ff2          DCW      0xa5a9,0x2ff2
000cc0  d74eebed          DCW      0xd74e,0xebed
000cc4  df6d3a82          DCW      0xdf6d,0x3a82
000cc8  a5992f6c          DCW      0xa599,0x2f6c
000ccc  d8cdeacf          DCW      0xd8cd,0xeacf
000cd0  dee93aab          DCW      0xdee9,0x3aab
000cd4  a58d2ee4          DCW      0xa58d,0x2ee4
000cd8  da4fe9b4          DCW      0xda4f,0xe9b4
000cdc  de643ad3          DCW      0xde64,0x3ad3
000ce0  a5852e5a          DCW      0xa585,0x2e5a
000ce4  dbd5e89a          DCW      0xdbd5,0xe89a
000ce8  dde13afa          DCW      0xdde1,0x3afa
000cec  a57f2dcf          DCW      0xa57f,0x2dcf
000cf0  dd5de782          DCW      0xdd5d,0xe782
000cf4  dd5d3b21          DCW      0xdd5d,0x3b21
000cf8  a57e2d41          DCW      0xa57e,0x2d41
000cfc  dee9e66d          DCW      0xdee9,0xe66d
000d00  dcda3b47          DCW      0xdcda,0x3b47
000d04  a57f2cb2          DCW      0xa57f,0x2cb2
000d08  e077e559          DCW      0xe077,0xe559
000d0c  dc573b6d          DCW      0xdc57,0x3b6d
000d10  a5852c21          DCW      0xa585,0x2c21
000d14  e208e448          DCW      0xe208,0xe448
000d18  dbd53b92          DCW      0xdbd5,0x3b92
000d1c  a58d2b8f          DCW      0xa58d,0x2b8f
000d20  e39ce33a          DCW      0xe39c,0xe33a
000d24  db523bb6          DCW      0xdb52,0x3bb6
000d28  a5992afb          DCW      0xa599,0x2afb
000d2c  e532e22d          DCW      0xe532,0xe22d
000d30  dad13bda          DCW      0xdad1,0x3bda
000d34  a5a92a65          DCW      0xa5a9,0x2a65
000d38  e6cbe124          DCW      0xe6cb,0xe124
000d3c  da4f3bfd          DCW      0xda4f,0x3bfd
000d40  a5bc29ce          DCW      0xa5bc,0x29ce
000d44  e865e01d          DCW      0xe865,0xe01d
000d48  d9ce3c20          DCW      0xd9ce,0x3c20
000d4c  a5d32935          DCW      0xa5d3,0x2935
000d50  ea02df19          DCW      0xea02,0xdf19
000d54  d94d3c42          DCW      0xd94d,0x3c42
000d58  a5ed289a          DCW      0xa5ed,0x289a
000d5c  eba1de18          DCW      0xeba1,0xde18
000d60  d8cd3c64          DCW      0xd8cd,0x3c64
000d64  a60b27fe          DCW      0xa60b,0x27fe
000d68  ed41dd19          DCW      0xed41,0xdd19
000d6c  d84d3c85          DCW      0xd84d,0x3c85
000d70  a62c2760          DCW      0xa62c,0x2760
000d74  eee3dc1e          DCW      0xeee3,0xdc1e
000d78  d7cd3ca5          DCW      0xd7cd,0x3ca5
000d7c  a65026c1          DCW      0xa650,0x26c1
000d80  f087db26          DCW      0xf087,0xdb26
000d84  d74e3cc5          DCW      0xd74e,0x3cc5
000d88  a6782620          DCW      0xa678,0x2620
000d8c  f22cda31          DCW      0xf22c,0xda31
000d90  d6cf3ce4          DCW      0xd6cf,0x3ce4
000d94  a6a4257e          DCW      0xa6a4,0x257e
000d98  f3d2d93f          DCW      0xf3d2,0xd93f
000d9c  d6513d03          DCW      0xd651,0x3d03
000da0  a6d324da          DCW      0xa6d3,0x24da
000da4  f579d851          DCW      0xf579,0xd851
000da8  d5d33d21          DCW      0xd5d3,0x3d21
000dac  a7052435          DCW      0xa705,0x2435
000db0  f721d766          DCW      0xf721,0xd766
000db4  d5563d3f          DCW      0xd556,0x3d3f
000db8  a73b238e          DCW      0xa73b,0x238e
000dbc  f8cad67f          DCW      0xf8ca,0xd67f
000dc0  d4d83d5b          DCW      0xd4d8,0x3d5b
000dc4  a77422e7          DCW      0xa774,0x22e7
000dc8  fa73d59b          DCW      0xfa73,0xd59b
000dcc  d45c3d78          DCW      0xd45c,0x3d78
000dd0  a7b1223d          DCW      0xa7b1,0x223d
000dd4  fc1dd4bb          DCW      0xfc1d,0xd4bb
000dd8  d3df3d93          DCW      0xd3df,0x3d93
000ddc  a7f12193          DCW      0xa7f1,0x2193
000de0  fdc7d3df          DCW      0xfdc7,0xd3df
000de4  d3633daf          DCW      0xd363,0x3daf
000de8  a83420e7          DCW      0xa834,0x20e7
000dec  ff72d306          DCW      0xff72,0xd306
000df0  d2e83dc9          DCW      0xd2e8,0x3dc9
000df4  a87b203a          DCW      0xa87b,0x203a
000df8  011cd231          DCW      0x011c,0xd231
000dfc  d26d3de3          DCW      0xd26d,0x3de3
000e00  a8c51f8c          DCW      0xa8c5,0x1f8c
000e04  02c7d161          DCW      0x02c7,0xd161
000e08  d1f23dfc          DCW      0xd1f2,0x3dfc
000e0c  a9121edc          DCW      0xa912,0x1edc
000e10  0471d094          DCW      0x0471,0xd094
000e14  d1783e15          DCW      0xd178,0x3e15
000e18  a9631e2b          DCW      0xa963,0x1e2b
000e1c  061bcfcc          DCW      0x061b,0xcfcc
000e20  d0fe3e2d          DCW      0xd0fe,0x3e2d
000e24  a9b71d79          DCW      0xa9b7,0x1d79
000e28  07c4cf07          DCW      0x07c4,0xcf07
000e2c  d0853e45          DCW      0xd085,0x3e45
000e30  aa0f1cc6          DCW      0xaa0f,0x1cc6
000e34  096dce47          DCW      0x096d,0xce47
000e38  d00c3e5c          DCW      0xd00c,0x3e5c
000e3c  aa6a1c12          DCW      0xaa6a,0x1c12
000e40  0b14cd8c          DCW      0x0b14,0xcd8c
000e44  cf943e72          DCW      0xcf94,0x3e72
000e48  aac81b5d          DCW      0xaac8,0x1b5d
000e4c  0cbbccd4          DCW      0x0cbb,0xccd4
000e50  cf1c3e88          DCW      0xcf1c,0x3e88
000e54  ab291aa7          DCW      0xab29,0x1aa7
000e58  0e61cc21          DCW      0x0e61,0xcc21
000e5c  cea53e9d          DCW      0xcea5,0x3e9d
000e60  ab8e19ef          DCW      0xab8e,0x19ef
000e64  1005cb73          DCW      0x1005,0xcb73
000e68  ce2e3eb1          DCW      0xce2e,0x3eb1
000e6c  abf61937          DCW      0xabf6,0x1937
000e70  11a8cac9          DCW      0x11a8,0xcac9
000e74  cdb73ec5          DCW      0xcdb7,0x3ec5
000e78  ac61187e          DCW      0xac61,0x187e
000e7c  134aca24          DCW      0x134a,0xca24
000e80  cd413ed8          DCW      0xcd41,0x3ed8
000e84  acd017c4          DCW      0xacd0,0x17c4
000e88  14eac983          DCW      0x14ea,0xc983
000e8c  cccc3eeb          DCW      0xcccc,0x3eeb
000e90  ad411709          DCW      0xad41,0x1709
000e94  1688c8e8          DCW      0x1688,0xc8e8
000e98  cc573efd          DCW      0xcc57,0x3efd
000e9c  adb6164c          DCW      0xadb6,0x164c
000ea0  1824c850          DCW      0x1824,0xc850
000ea4  cbe23f0f          DCW      0xcbe2,0x3f0f
000ea8  ae2e1590          DCW      0xae2e,0x1590
000eac  19bec7be          DCW      0x19be,0xc7be
000eb0  cb6e3f20          DCW      0xcb6e,0x3f20
000eb4  aea914d2          DCW      0xaea9,0x14d2
000eb8  1b56c731          DCW      0x1b56,0xc731
000ebc  cafb3f30          DCW      0xcafb,0x3f30
000ec0  af281413          DCW      0xaf28,0x1413
000ec4  1cebc6a8          DCW      0x1ceb,0xc6a8
000ec8  ca883f40          DCW      0xca88,0x3f40
000ecc  afa91354          DCW      0xafa9,0x1354
000ed0  1e7ec625          DCW      0x1e7e,0xc625
000ed4  ca153f4f          DCW      0xca15,0x3f4f
000ed8  b02d1294          DCW      0xb02d,0x1294
000edc  200ec5a7          DCW      0x200e,0xc5a7
000ee0  c9a33f5d          DCW      0xc9a3,0x3f5d
000ee4  b0b511d3          DCW      0xb0b5,0x11d3
000ee8  219cc52d          DCW      0x219c,0xc52d
000eec  c9323f6b          DCW      0xc932,0x3f6b
000ef0  b1401112          DCW      0xb140,0x1112
000ef4  2326c4b9          DCW      0x2326,0xc4b9
000ef8  c8c13f78          DCW      0xc8c1,0x3f78
000efc  b1cd1050          DCW      0xb1cd,0x1050
000f00  24aec44a          DCW      0x24ae,0xc44a
000f04  c8513f85          DCW      0xc851,0x3f85
000f08  b25e0f8d          DCW      0xb25e,0x0f8d
000f0c  2632c3e0          DCW      0x2632,0xc3e0
000f10  c7e13f91          DCW      0xc7e1,0x3f91
000f14  b2f20eca          DCW      0xb2f2,0x0eca
000f18  27b3c37b          DCW      0x27b3,0xc37b
000f1c  c7723f9c          DCW      0xc772,0x3f9c
000f20  b3880e06          DCW      0xb388,0x0e06
000f24  2931c31c          DCW      0x2931,0xc31c
000f28  c7033fa7          DCW      0xc703,0x3fa7
000f2c  b4220d41          DCW      0xb422,0x0d41
000f30  2aaac2c1          DCW      0x2aaa,0xc2c1
000f34  c6953fb1          DCW      0xc695,0x3fb1
000f38  b4be0c7c          DCW      0xb4be,0x0c7c
000f3c  2c21c26d          DCW      0x2c21,0xc26d
000f40  c6273fbb          DCW      0xc627,0x3fbb
000f44  b55e0bb7          DCW      0xb55e,0x0bb7
000f48  2d93c21d          DCW      0x2d93,0xc21d
000f4c  c5ba3fc4          DCW      0xc5ba,0x3fc4
000f50  b6000af1          DCW      0xb600,0x0af1
000f54  2f02c1d3          DCW      0x2f02,0xc1d3
000f58  c54e3fcc          DCW      0xc54e,0x3fcc
000f5c  b6a50a2b          DCW      0xb6a5,0x0a2b
000f60  306cc18e          DCW      0x306c,0xc18e
000f64  c4e23fd4          DCW      0xc4e2,0x3fd4
000f68  b74d0964          DCW      0xb74d,0x0964
000f6c  31d2c14f          DCW      0x31d2,0xc14f
000f70  c4763fdb          DCW      0xc476,0x3fdb
000f74  b7f8089d          DCW      0xb7f8,0x089d
000f78  3334c115          DCW      0x3334,0xc115
000f7c  c40c3fe1          DCW      0xc40c,0x3fe1
000f80  b8a607d6          DCW      0xb8a6,0x07d6
000f84  3492c0e0          DCW      0x3492,0xc0e0
000f88  c3a13fe7          DCW      0xc3a1,0x3fe7
000f8c  b956070e          DCW      0xb956,0x070e
000f90  35ebc0b1          DCW      0x35eb,0xc0b1
000f94  c3383fec          DCW      0xc338,0x3fec
000f98  ba090646          DCW      0xba09,0x0646
000f9c  373fc088          DCW      0x373f,0xc088
000fa0  c2cf3ff1          DCW      0xc2cf,0x3ff1
000fa4  babf057e          DCW      0xbabf,0x057e
000fa8  388ec064          DCW      0x388e,0xc064
000fac  c2663ff5          DCW      0xc266,0x3ff5
000fb0  bb7704b5          DCW      0xbb77,0x04b5
000fb4  39d9c045          DCW      0x39d9,0xc045
000fb8  c1fe3ff8          DCW      0xc1fe,0x3ff8
000fbc  bc3203ed          DCW      0xbc32,0x03ed
000fc0  3b1ec02c          DCW      0x3b1e,0xc02c
000fc4  c1973ffb          DCW      0xc197,0x3ffb
000fc8  bcf00324          DCW      0xbcf0,0x0324
000fcc  3c5fc019          DCW      0x3c5f,0xc019
000fd0  c1303ffd          DCW      0xc130,0x3ffd
000fd4  bdb0025b          DCW      0xbdb0,0x025b
000fd8  3d9ac00b          DCW      0x3d9a,0xc00b
000fdc  c0ca3fff          DCW      0xc0ca,0x3fff
000fe0  be730192          DCW      0xbe73,0x0192
000fe4  3ed0c003          DCW      0x3ed0,0xc003
000fe8  c0654000          DCW      0xc065,0x4000
000fec  bf3800c9          DCW      0xbf38,0x00c9
                  temp1
000ff0  0e24              DCW      0x0e24
                  temp2
000ff2  0dac              DCW      0x0dac
                  reTest
000ff4  0000              DCB      0x00,0x00
                  m
000ff6  0000              DCW      0x0000
                  ADCIndex
000ff8  00000000          DCB      0x00,0x00,0x00,0x00
                  Intensity
                          DCD      0x00000000
                  Intensitys1
                          DCD      0x00000000
                  Intensitys2
                          DCD      0x00000000
                  Step_LM
                          DCD      0x00000000
                  m_bChopper
00100c  00000000          DCB      0x00,0x00,0x00,0x00
                  temp
                          %        8
                  ||Go||
001018  00                DCB      0x00
                  STATUS
001019  00                DCB      0x00
                  Pressure0
00101a  0000              DCW      0x0000
                  Pressure1
00101c  0000              DCW      0x0000
                  Pressure2
00101e  0000              DCW      0x0000
                  RxLeftIdx
                          DCD      0x00000000
                  RxRightIdx
                          DCD      0x00000000
                  flagPress
001028  0000              DCB      0x00,0x00
                  PulseNum
00102a  0000              DCW      0x0000
                  PulseCount
00102c  0000              DCW      0x0000
                  StartSpeed
00102e  00                DCB      0x00
                  TargeSpeed
00102f  00                DCB      0x00
                  StepTimes_1
001030  0000              DCB      0x00,0x00
                  StepCount_1
001032  0000              DCW      0x0000
                  EndSpeed
001034  00                DCB      0x00
                  StepTimes_2
001035  00                DCB      0x00
                  StepCount_2
001036  0000              DCW      0x0000
                  AddedNum
001038  0000              DCW      0x0000
                  flag_moto
00103a  00                DCB      0x00
                  cw_status
00103b  00                DCB      0x00
                  m_bMeasureBreak
00103c  00000000          DCB      0x00,0x00,0x00,0x00
                  Intensity1
                          DCD      0x00000000
                  Intensity2
                          DCD      0x00000000
                  prnerr
001048  00                DCB      0x00
                  TripSwitchStatus
001049  00                DCB      0x00
                  Trip2
00104a  0000              DCB      0x00,0x00
                  n
00104c  0000              DCW      0x0000

;*** Start embedded assembler ***

#line 1 "..\\User\\motor.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___7_motor_c_TableFFT____REV16|
#line 129 "C:\\Keil_v5\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___7_motor_c_TableFFT____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___7_motor_c_TableFFT____REVSH|
#line 144
|__asm___7_motor_c_TableFFT____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
