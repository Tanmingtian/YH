; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\flash\obj\bsp.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\bsp.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=870 -I..\User -I..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\User\fonts -I..\emWin\GUI_X -I..\emWin\Config -I..\emWin\Include -I..\emWin\emWinTask -I..\User\bsp_stm32f4xx -I..\User\bsp_stm32f4xx\inc -I..\User\images -I..\User\bsp_stm32f4xx\src -I..\User\DSP_Lib\inc -I..\User\DSP_Lib\src -I..\Libraries\STM32F4x7_ETH_Driver\src -I..\Libraries\STM32F4x7_ETH_Driver\inc -IF:\keil\ARM\RV31\INC -IF:\keil\ARM\CMSIS\Include -IF:\keil\ARM\Inc\ST\STM32F4xx -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F427_437xx -DSTM32F427_437xx --omf_browse=.\flash\obj\bsp.crf ..\User\bsp_stm32f4xx\bsp.c]
                          THUMB

                          AREA ||i.NVIC_Configuration||, CODE, READONLY, ALIGN=1

                  NVIC_Configuration PROC
;;;4      
;;;5      void NVIC_Configuration(void)
000000  b508              PUSH     {r3,lr}
;;;6      {
;;;7      	NVIC_InitTypeDef NVIC_InitStructure;
;;;8      
;;;9      	NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);
000002  f44f60a0          MOV      r0,#0x500
000006  f7fffffe          BL       NVIC_PriorityGroupConfig
;;;10     
;;;11     	/* SPI2 IRQ Channel configuration */
;;;12     	NVIC_InitStructure.NVIC_IRQChannel = SPI2_IRQn;
00000a  2024              MOVS     r0,#0x24
00000c  f88d0000          STRB     r0,[sp,#0]
;;;13     	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 1;
000010  2001              MOVS     r0,#1
000012  f88d0001          STRB     r0,[sp,#1]
;;;14     	NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
000016  2000              MOVS     r0,#0
000018  f88d0002          STRB     r0,[sp,#2]
;;;15     	NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
00001c  2001              MOVS     r0,#1
00001e  f88d0003          STRB     r0,[sp,#3]
;;;16     	NVIC_Init(&NVIC_InitStructure);
000022  4668              MOV      r0,sp
000024  f7fffffe          BL       NVIC_Init
;;;17     
;;;18     	//行程开关外部中断
;;;19     	NVIC_InitStructure.NVIC_IRQChannel = EXTI15_10_IRQn;
000028  2028              MOVS     r0,#0x28
00002a  f88d0000          STRB     r0,[sp,#0]
;;;20      	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 5;
00002e  2005              MOVS     r0,#5
000030  f88d0001          STRB     r0,[sp,#1]
;;;21       NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
000034  2000              MOVS     r0,#0
000036  f88d0002          STRB     r0,[sp,#2]
;;;22       NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
00003a  2001              MOVS     r0,#1
00003c  f88d0003          STRB     r0,[sp,#3]
;;;23       NVIC_Init(&NVIC_InitStructure);
000040  4668              MOV      r0,sp
000042  f7fffffe          BL       NVIC_Init
;;;24     
;;;25     	/* TIM1 update Channel configuration */
;;;26     	NVIC_InitStructure.NVIC_IRQChannel = TIM8_UP_TIM13_IRQn;
000046  202c              MOVS     r0,#0x2c
000048  f88d0000          STRB     r0,[sp,#0]
;;;27     	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 4;
00004c  2004              MOVS     r0,#4
00004e  f88d0001          STRB     r0,[sp,#1]
;;;28     	NVIC_InitStructure.NVIC_IRQChannelSubPriority = 1;
000052  2001              MOVS     r0,#1
000054  f88d0002          STRB     r0,[sp,#2]
;;;29     	NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
000058  f88d0003          STRB     r0,[sp,#3]
;;;30     	NVIC_Init(&NVIC_InitStructure);
00005c  4668              MOV      r0,sp
00005e  f7fffffe          BL       NVIC_Init
;;;31     	//timer2
;;;32     	NVIC_InitStructure.NVIC_IRQChannel = TIM2_IRQn;
000062  201c              MOVS     r0,#0x1c
000064  f88d0000          STRB     r0,[sp,#0]
;;;33     	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 3;
000068  2003              MOVS     r0,#3
00006a  f88d0001          STRB     r0,[sp,#1]
;;;34     	NVIC_InitStructure.NVIC_IRQChannelSubPriority = 1;
00006e  2001              MOVS     r0,#1
000070  f88d0002          STRB     r0,[sp,#2]
;;;35     	NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
000074  f88d0003          STRB     r0,[sp,#3]
;;;36     	NVIC_Init(&NVIC_InitStructure);
000078  4668              MOV      r0,sp
00007a  f7fffffe          BL       NVIC_Init
;;;37     	//timer3
;;;38     	NVIC_InitStructure.NVIC_IRQChannel = TIM5_IRQn;
00007e  2032              MOVS     r0,#0x32
000080  f88d0000          STRB     r0,[sp,#0]
;;;39     	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 3;
000084  2003              MOVS     r0,#3
000086  f88d0001          STRB     r0,[sp,#1]
;;;40     	NVIC_InitStructure.NVIC_IRQChannelSubPriority = 2;
00008a  2002              MOVS     r0,#2
00008c  f88d0002          STRB     r0,[sp,#2]
;;;41     	NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
000090  2001              MOVS     r0,#1
000092  f88d0003          STRB     r0,[sp,#3]
;;;42     	NVIC_Init(&NVIC_InitStructure);	 
000096  4668              MOV      r0,sp
000098  f7fffffe          BL       NVIC_Init
;;;43      
;;;44     }
00009c  bd08              POP      {r3,pc}
;;;45     /*
                          ENDP


                          AREA ||i.bsp_Idle||, CODE, READONLY, ALIGN=1

                  bsp_Idle PROC
;;;147    //extern void SaveScreenToBmp(uint16_t _index);
;;;148    void bsp_Idle(void)
000000  b510              PUSH     {r4,lr}
;;;149    {
;;;150    	/* --- 喂狗 */
;;;151    
;;;152    	/* --- 让CPU进入休眠，由Systick定时中断唤醒或者其他中断唤醒 */
;;;153    
;;;154    	/* 例如 emWin 图形库，可以插入图形库需要的轮询函数 */
;;;155    	//GUI_Exec();
;;;156    
;;;157    	/* 例如 uIP 协议，可以插入uip轮询函数 */
;;;158    
;;;159    	GT811_Scan();	/* 触摸扫描 */
000002  f7fffffe          BL       GT811_Scan
;;;160    	
;;;161    //	if (bsp_GetKey2() == SYS_DOWN_K1K2)	/* K1 K2 组合键用于截屏 */
;;;162    //	{
;;;163    //		static uint16_t s_file_no = 0;
;;;164    
;;;165    //		SaveScreenToBmp(s_file_no++);	/* 截图保存为bmp文件， SD卡根目录 */
;;;166    //	}
;;;167    }
000006  bd10              POP      {r4,pc}
;;;168    
                          ENDP


                          AREA ||i.bsp_Init||, CODE, READONLY, ALIGN=1

                  bsp_Init PROC
;;;53     */
;;;54     void bsp_Init(void)
000000  b510              PUSH     {r4,lr}
;;;55     {
;;;56     	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOA|RCC_AHB1Periph_GPIOB|RCC_AHB1Periph_GPIOC|RCC_AHB1Periph_GPIOD|RCC_AHB1Periph_GPIOE|RCC_AHB1Periph_GPIOF|RCC_AHB1Periph_GPIOG|RCC_AHB1Periph_GPIOH|RCC_AHB1Periph_GPIOI, ENABLE);
000002  2101              MOVS     r1,#1
000004  f24010ff          MOV      r0,#0x1ff
000008  f7fffffe          BL       RCC_AHB1PeriphClockCmd
;;;57     	RCC_APB2PeriphClockCmd(RCC_APB2Periph_TIM1|RCC_APB2Periph_ADC1|RCC_APB2Periph_USART1,ENABLE);
00000c  2101              MOVS     r1,#1
00000e  f2401011          MOV      r0,#0x111
000012  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;58     	RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2|RCC_APB1Periph_TIM3|RCC_APB1Periph_TIM4|RCC_APB1Periph_TIM5|RCC_APB1Periph_SPI2 ,ENABLE);
000016  2101              MOVS     r1,#1
000018  f244000f          MOV      r0,#0x400f
00001c  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;59     	NVIC_Configuration();
000020  f7fffffe          BL       NVIC_Configuration
;;;60     	bsp_InitTimer();	/* 初始化系统滴答定时器 (此函数会开中断) */
000024  f7fffffe          BL       bsp_InitTimer
;;;61     	bsp_InitExtSRAM();	/* 配置FSMC总线, 用于SRAM访问 */
000028  f7fffffe          BL       bsp_InitExtSRAM
;;;62     	bsp_InitNorFlash();	/* 初始化FSMC NOR Flash */
00002c  f7fffffe          BL       bsp_InitNorFlash
;;;63     	bsp_InitI2C();		/* 配置I2C总线 */
000030  f7fffffe          BL       bsp_InitI2C
;;;64     	bsp_InitSPIBus();	/* 配置SPI总线 */
000034  f7fffffe          BL       bsp_InitSPIBus
;;;65     	AK5385_Config();
000038  f7fffffe          BL       AK5385_Config
;;;66     	bsp_DelayMS(20);	/* 后面的设备需要延迟后初始化 */
00003c  2014              MOVS     r0,#0x14
00003e  f7fffffe          BL       bsp_DelayMS
;;;67     	Speaker_Config();	
000042  f7fffffe          BL       Speaker_Config
;;;68     	ADC_Config();
000046  f7fffffe          BL       ADC_Config
;;;69     	EXTI_Config();
00004a  f7fffffe          BL       EXTI_Config
;;;70       LightModulation_Config();
00004e  f7fffffe          BL       LightModulation_Config
;;;71       Motor_Config();
000052  f7fffffe          BL       Motor_Config
;;;72     //	Sys_100msClock_Config();
;;;73       
;;;74     //SPI_FLASH_Init();	
;;;75     //	PRINT_Init();	
;;;76     }
000056  bd10              POP      {r4,pc}
;;;77     /*
                          ENDP


                          AREA ||i.bsp_RunPer10ms||, CODE, READONLY, ALIGN=2

                  bsp_RunPer10ms PROC
;;;100    //extern __IO uint8_t s_ucRA8875BusyNow;
;;;101    void bsp_RunPer10ms(void)
000000  b510              PUSH     {r4,lr}
;;;102    {
;;;103    //	bsp_KeyScan();		/* 按键扫描 */
;;;104    	/* RA8875 触摸*/
;;;105    	if (g_ChipID == IC_8875)
000002  4806              LDR      r0,|L4.28|
000004  8800              LDRH     r0,[r0,#0]  ; g_ChipID
000006  2875              CMP      r0,#0x75
000008  d105              BNE      |L4.22|
;;;106    	{
;;;107    	    /* 资源共享标志 */
;;;108    		if(s_ucRA8875BusyNow == 0)
00000a  4805              LDR      r0,|L4.32|
00000c  7800              LDRB     r0,[r0,#0]  ; s_ucRA8875BusyNow
00000e  b920              CBNZ     r0,|L4.26|
;;;109    		{
;;;110    			GUI_TOUCH_Exec();
000010  f7fffffe          BL       GUI_TOUCH_Exec
000014  e001              B        |L4.26|
                  |L4.22|
;;;111    		}
;;;112    	}
;;;113    	/* XPT2046 */
;;;114    	else
;;;115    	{
;;;116    		GUI_TOUCH_Exec();	
000016  f7fffffe          BL       GUI_TOUCH_Exec
                  |L4.26|
;;;117    	}
;;;118    }
00001a  bd10              POP      {r4,pc}
;;;119    
                          ENDP

                  |L4.28|
                          DCD      g_ChipID
                  |L4.32|
                          DCD      s_ucRA8875BusyNow

                          AREA ||i.bsp_RunPer1ms||, CODE, READONLY, ALIGN=1

                  bsp_RunPer1ms PROC
;;;128    */
;;;129    void bsp_RunPer1ms(void)
000000  b510              PUSH     {r4,lr}
;;;130    {
;;;131    	TOUCH_Scan();		/* 触摸扫描 */
000002  f7fffffe          BL       TOUCH_Scan
;;;132    
;;;133    	//PS2_Timer();		/* PS/2键盘和鼠标定时处理 */
;;;134    	
;;;135    	GT811_Timer10ms();	/* 电容触摸屏程序计数器 */
000006  f7fffffe          BL       GT811_Timer10ms
;;;136    }
00000a  bd10              POP      {r4,pc}
;;;137    
                          ENDP


                          AREA ||i.bsp_RunPer1s||, CODE, READONLY, ALIGN=1

                  bsp_RunPer1s PROC
;;;86     //extern __IO uint8_t s_ucRA8875BusyNow;
;;;87     void bsp_RunPer1s(void)
000000  4770              BX       lr
;;;88     {
;;;89     		
;;;90     }
;;;91     /*
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\User\\bsp_stm32f4xx\\bsp.c"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___5_bsp_c_696cd8ce____REV16|
#line 129 "F:\\keil\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___5_bsp_c_696cd8ce____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___5_bsp_c_696cd8ce____REVSH|
#line 144
|__asm___5_bsp_c_696cd8ce____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
