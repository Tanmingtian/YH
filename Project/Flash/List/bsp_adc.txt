; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\flash\obj\bsp_adc.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\bsp_adc.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931,870 -I..\User -I..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\User\fonts -I..\emWin\GUI_X -I..\emWin\Config -I..\emWin\Include -I..\emWin\emWinTask -I..\User\bsp_stm32f4xx -I..\User\bsp_stm32f4xx\inc -I..\User\images -I..\User\bsp_stm32f4xx\src -I..\User\DSP_Lib\inc -I..\User\DSP_Lib\src -I..\Libraries\STM32F4x7_ETH_Driver\src -I..\Libraries\STM32F4x7_ETH_Driver\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F4xx -D__MICROLIB -D__UVISION_VERSION=514 -DUSE_STDPERIPH_DRIVER -DSTM32F427_437xx -DSTM32F427_437xx --omf_browse=.\flash\obj\bsp_adc.crf ..\User\bsp_stm32f4xx\src\bsp_adc.c]
                          THUMB

                          AREA ||i.bsp_InitADC||, CODE, READONLY, ALIGN=2

                  bsp_InitADC PROC
;;;32     */
;;;33     void bsp_InitADC(void)
000000  b500              PUSH     {lr}
;;;34     {
000002  b09b              SUB      sp,sp,#0x6c
;;;35     	ADC_InitTypeDef       ADC_InitStructure;
;;;36     	ADC_CommonInitTypeDef ADC_CommonInitStructure;
;;;37     	DMA_InitTypeDef       DMA_InitStructure;
;;;38     	GPIO_InitTypeDef      GPIO_InitStructure;
;;;39     	
;;;40     	/* 使能外设时钟 */
;;;41     	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_DMA2 | RCC_AHB1Periph_GPIOA  | RCC_AHB1Periph_GPIOB| RCC_AHB1Periph_GPIOC, ENABLE);
000004  2101              MOVS     r1,#1
000006  485d              LDR      r0,|L1.380|
000008  f7fffffe          BL       RCC_AHB1PeriphClockCmd
;;;42     	RCC_APB2PeriphClockCmd(RCC_APB2Periph_ADC1, ENABLE);
00000c  2101              MOVS     r1,#1
00000e  0208              LSLS     r0,r1,#8
000010  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;43         
;;;44         
;;;45        GPIO_InitStructure.GPIO_Pin = GPIO_Pin_1;
000014  2002              MOVS     r0,#2
000016  9000              STR      r0,[sp,#0]
;;;46     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AN;
000018  2003              MOVS     r0,#3
00001a  f88d0004          STRB     r0,[sp,#4]
;;;47     	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL ;
00001e  2000              MOVS     r0,#0
000020  f88d0007          STRB     r0,[sp,#7]
;;;48     	GPIO_Init(GPIOA, &GPIO_InitStructure);
000024  4669              MOV      r1,sp
000026  4856              LDR      r0,|L1.384|
000028  f7fffffe          BL       GPIO_Init
;;;49     	
;;;50       GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0;
00002c  2001              MOVS     r0,#1
00002e  9000              STR      r0,[sp,#0]
;;;51     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AN;
000030  2003              MOVS     r0,#3
000032  f88d0004          STRB     r0,[sp,#4]
;;;52     	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL ;
000036  2000              MOVS     r0,#0
000038  f88d0007          STRB     r0,[sp,#7]
;;;53     	GPIO_Init(GPIOB, &GPIO_InitStructure);
00003c  4669              MOV      r1,sp
00003e  4851              LDR      r0,|L1.388|
000040  f7fffffe          BL       GPIO_Init
;;;54         
;;;55       GPIO_InitStructure.GPIO_Pin = GPIO_Pin_1;
000044  2002              MOVS     r0,#2
000046  9000              STR      r0,[sp,#0]
;;;56     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AN;
000048  2003              MOVS     r0,#3
00004a  f88d0004          STRB     r0,[sp,#4]
;;;57     	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL ;
00004e  2000              MOVS     r0,#0
000050  f88d0007          STRB     r0,[sp,#7]
;;;58     	GPIO_Init(GPIOB, &GPIO_InitStructure);
000054  4669              MOV      r1,sp
000056  484b              LDR      r0,|L1.388|
000058  f7fffffe          BL       GPIO_Init
;;;59     	
;;;60     	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_4;
00005c  2010              MOVS     r0,#0x10
00005e  9000              STR      r0,[sp,#0]
;;;61     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AN;
000060  2003              MOVS     r0,#3
000062  f88d0004          STRB     r0,[sp,#4]
;;;62     	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL ;
000066  2000              MOVS     r0,#0
000068  f88d0007          STRB     r0,[sp,#7]
;;;63     	GPIO_Init(GPIOC, &GPIO_InitStructure);
00006c  4669              MOV      r1,sp
00006e  4846              LDR      r0,|L1.392|
000070  f7fffffe          BL       GPIO_Init
;;;64         
;;;65       GPIO_InitStructure.GPIO_Pin = GPIO_Pin_5;
000074  2020              MOVS     r0,#0x20
000076  9000              STR      r0,[sp,#0]
;;;66     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AN;
000078  2003              MOVS     r0,#3
00007a  f88d0004          STRB     r0,[sp,#4]
;;;67     	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL ;
00007e  2000              MOVS     r0,#0
000080  f88d0007          STRB     r0,[sp,#7]
;;;68     	GPIO_Init(GPIOC, &GPIO_InitStructure);
000084  4669              MOV      r1,sp
000086  4840              LDR      r0,|L1.392|
000088  f7fffffe          BL       GPIO_Init
;;;69     
;;;70     	/* DMA2 Stream0 channel0 配置-------------------------------------------------- */
;;;71     	DMA_InitStructure.DMA_Channel = DMA_Channel_0;  
00008c  2000              MOVS     r0,#0
00008e  9002              STR      r0,[sp,#8]
;;;72     	DMA_InitStructure.DMA_PeripheralBaseAddr = (uint32_t)ADC1_DR_ADDRESS;
000090  483e              LDR      r0,|L1.396|
000092  9003              STR      r0,[sp,#0xc]
;;;73     	DMA_InitStructure.DMA_Memory0BaseAddr = (uint32_t)&uhADCConvertedValue;;
000094  483e              LDR      r0,|L1.400|
000096  9004              STR      r0,[sp,#0x10]
;;;74     	DMA_InitStructure.DMA_DIR = DMA_DIR_PeripheralToMemory;
000098  2000              MOVS     r0,#0
00009a  9005              STR      r0,[sp,#0x14]
;;;75     	DMA_InitStructure.DMA_BufferSize = 4;
00009c  2004              MOVS     r0,#4
00009e  9006              STR      r0,[sp,#0x18]
;;;76     	DMA_InitStructure.DMA_PeripheralInc = DMA_PeripheralInc_Disable;
0000a0  2000              MOVS     r0,#0
0000a2  9007              STR      r0,[sp,#0x1c]
;;;77     	DMA_InitStructure.DMA_MemoryInc = DMA_MemoryInc_Enable;
0000a4  f44f6080          MOV      r0,#0x400
0000a8  9008              STR      r0,[sp,#0x20]
;;;78         
;;;79         DMA_InitStructure.DMA_PeripheralDataSize = DMA_PeripheralDataSize_HalfWord;
0000aa  0040              LSLS     r0,r0,#1
0000ac  9009              STR      r0,[sp,#0x24]
;;;80         DMA_InitStructure.DMA_MemoryDataSize = DMA_MemoryDataSize_HalfWord;
0000ae  0080              LSLS     r0,r0,#2
0000b0  900a              STR      r0,[sp,#0x28]
;;;81         
;;;82     	DMA_InitStructure.DMA_Mode = DMA_Mode_Circular;
0000b2  1140              ASRS     r0,r0,#5
0000b4  900b              STR      r0,[sp,#0x2c]
;;;83     	DMA_InitStructure.DMA_Priority = DMA_Priority_High;
0000b6  0240              LSLS     r0,r0,#9
0000b8  900c              STR      r0,[sp,#0x30]
;;;84     	DMA_InitStructure.DMA_FIFOMode = DMA_FIFOMode_Disable;         
0000ba  2000              MOVS     r0,#0
0000bc  900d              STR      r0,[sp,#0x34]
;;;85     	DMA_InitStructure.DMA_FIFOThreshold = DMA_FIFOThreshold_HalfFull;
0000be  2001              MOVS     r0,#1
0000c0  900e              STR      r0,[sp,#0x38]
;;;86     	DMA_InitStructure.DMA_MemoryBurst = DMA_MemoryBurst_Single;
0000c2  2000              MOVS     r0,#0
0000c4  900f              STR      r0,[sp,#0x3c]
;;;87     	DMA_InitStructure.DMA_PeripheralBurst = DMA_PeripheralBurst_Single;
0000c6  9010              STR      r0,[sp,#0x40]
;;;88     	DMA_Init(DMA2_Stream0, &DMA_InitStructure);
0000c8  a902              ADD      r1,sp,#8
0000ca  4832              LDR      r0,|L1.404|
0000cc  f7fffffe          BL       DMA_Init
;;;89     
;;;90     	/* DMA2_Stream0 enable */
;;;91     	DMA_Cmd(DMA2_Stream0, ENABLE);
0000d0  2101              MOVS     r1,#1
0000d2  4830              LDR      r0,|L1.404|
0000d4  f7fffffe          BL       DMA_Cmd
;;;92         
;;;93         /****************************************************************************   
;;;94     	  PCLK2 = HCLK / 2 
;;;95     	  下面选择的是2分频
;;;96     	  ADCCLK = PCLK2 /8 = HCLK / 8 = 168 / 8 = 21M
;;;97           ADC采样频率： Sampling Time + Conversion Time = 480 + 12 cycles = 492cyc
;;;98                         Conversion Time = 21MHz / 492cyc = 42.6ksps. 
;;;99     	*****************************************************************************/
;;;100        
;;;101    	/* ADC Common 配置 ----------------------------------------------------------*/
;;;102         ADC_CommonInitStructure.ADC_Mode = ADC_Mode_Independent;
0000d8  2000              MOVS     r0,#0
0000da  9011              STR      r0,[sp,#0x44]
;;;103        ADC_CommonInitStructure.ADC_Prescaler = ADC_Prescaler_Div2;
0000dc  9012              STR      r0,[sp,#0x48]
;;;104        ADC_CommonInitStructure.ADC_DMAAccessMode = ADC_DMAAccessMode_Disabled;
0000de  9013              STR      r0,[sp,#0x4c]
;;;105        ADC_CommonInitStructure.ADC_TwoSamplingDelay = ADC_TwoSamplingDelay_5Cycles;
0000e0  9014              STR      r0,[sp,#0x50]
;;;106        ADC_CommonInit(&ADC_CommonInitStructure);
0000e2  a811              ADD      r0,sp,#0x44
0000e4  f7fffffe          BL       ADC_CommonInit
;;;107    
;;;108    	/* ADC1 regular channel 12 configuration ************************************/
;;;109    	ADC_InitStructure.ADC_Resolution = ADC_Resolution_12b;
0000e8  2000              MOVS     r0,#0
0000ea  9015              STR      r0,[sp,#0x54]
;;;110    	ADC_InitStructure.ADC_ScanConvMode = ENABLE;
0000ec  2001              MOVS     r0,#1
0000ee  f88d0058          STRB     r0,[sp,#0x58]
;;;111    	ADC_InitStructure.ADC_ContinuousConvMode = ENABLE;
0000f2  f88d0059          STRB     r0,[sp,#0x59]
;;;112    	ADC_InitStructure.ADC_ExternalTrigConvEdge = ADC_ExternalTrigConvEdge_None;
0000f6  2000              MOVS     r0,#0
0000f8  9017              STR      r0,[sp,#0x5c]
;;;113    	ADC_InitStructure.ADC_DataAlign = ADC_DataAlign_Right;
0000fa  9019              STR      r0,[sp,#0x64]
;;;114    	ADC_InitStructure.ADC_NbrOfConversion = 4;
0000fc  2004              MOVS     r0,#4
0000fe  f88d0068          STRB     r0,[sp,#0x68]
;;;115        ADC_Init(ADC1, &ADC_InitStructure);
000102  a915              ADD      r1,sp,#0x54
000104  4821              LDR      r0,|L1.396|
000106  384c              SUBS     r0,r0,#0x4c
000108  f7fffffe          BL       ADC_Init
;;;116        
;;;117         /* Enable ADC1 DMA */
;;;118        ADC_DMACmd(ADC1, ENABLE);
00010c  2101              MOVS     r1,#1
00010e  481f              LDR      r0,|L1.396|
000110  384c              SUBS     r0,r0,#0x4c
000112  f7fffffe          BL       ADC_DMACmd
;;;119    
;;;120      	ADC_RegularChannelConfig(ADC1, ADC_Channel_1, 5, ADC_SampleTime_15Cycles);
000116  2301              MOVS     r3,#1
000118  2205              MOVS     r2,#5
00011a  4619              MOV      r1,r3
00011c  481b              LDR      r0,|L1.396|
00011e  384c              SUBS     r0,r0,#0x4c
000120  f7fffffe          BL       ADC_RegularChannelConfig
;;;121        /* ADC1 regular channel18 (VBAT) configuration ******************************/
;;;122        ADC_RegularChannelConfig(ADC1, ADC_Channel_8, 1, ADC_SampleTime_15Cycles);
000124  2301              MOVS     r3,#1
000126  461a              MOV      r2,r3
000128  2108              MOVS     r1,#8
00012a  4818              LDR      r0,|L1.396|
00012c  384c              SUBS     r0,r0,#0x4c
00012e  f7fffffe          BL       ADC_RegularChannelConfig
;;;123        /* ADC1 regular channel18 (VBAT) configuration *****************************/
;;;124        ADC_RegularChannelConfig(ADC1, ADC_Channel_9, 2, ADC_SampleTime_15Cycles);
000132  2301              MOVS     r3,#1
000134  2202              MOVS     r2,#2
000136  2109              MOVS     r1,#9
000138  4814              LDR      r0,|L1.396|
00013a  384c              SUBS     r0,r0,#0x4c
00013c  f7fffffe          BL       ADC_RegularChannelConfig
;;;125        
;;;126        /* ADC1 regular channels 10, 11 configuration */ 
;;;127        ADC_RegularChannelConfig(ADC1, ADC_Channel_14, 3, ADC_SampleTime_15Cycles);
000140  2301              MOVS     r3,#1
000142  2203              MOVS     r2,#3
000144  210e              MOVS     r1,#0xe
000146  4811              LDR      r0,|L1.396|
000148  384c              SUBS     r0,r0,#0x4c
00014a  f7fffffe          BL       ADC_RegularChannelConfig
;;;128        ADC_RegularChannelConfig(ADC1, ADC_Channel_15, 4, ADC_SampleTime_15Cycles);   
00014e  2301              MOVS     r3,#1
000150  2204              MOVS     r2,#4
000152  210f              MOVS     r1,#0xf
000154  480d              LDR      r0,|L1.396|
000156  384c              SUBS     r0,r0,#0x4c
000158  f7fffffe          BL       ADC_RegularChannelConfig
;;;129    
;;;130    //    /* Enable VBAT channel */
;;;131    //    ADC_VBATCmd(ENABLE); 
;;;132    //    
;;;133    //    ADC_TempSensorVrefintCmd(ENABLE); 
;;;134    
;;;135        /* Enable DMA request after last transfer (Single-ADC mode) */
;;;136        ADC_DMARequestAfterLastTransferCmd(ADC1, ENABLE);
00015c  2101              MOVS     r1,#1
00015e  480b              LDR      r0,|L1.396|
000160  384c              SUBS     r0,r0,#0x4c
000162  f7fffffe          BL       ADC_DMARequestAfterLastTransferCmd
;;;137    
;;;138        /* Enable ADC1 **************************************************************/
;;;139        ADC_Cmd(ADC1, ENABLE);
000166  2101              MOVS     r1,#1
000168  4808              LDR      r0,|L1.396|
00016a  384c              SUBS     r0,r0,#0x4c
00016c  f7fffffe          BL       ADC_Cmd
;;;140        
;;;141            /* Start ADC1 Software Conversion */
;;;142        ADC_SoftwareStartConv(ADC1);
000170  4806              LDR      r0,|L1.396|
000172  384c              SUBS     r0,r0,#0x4c
000174  f7fffffe          BL       ADC_SoftwareStartConv
;;;143    }
000178  b01b              ADD      sp,sp,#0x6c
00017a  bd00              POP      {pc}
;;;144    
                          ENDP

                  |L1.380|
                          DCD      0x00400007
                  |L1.384|
                          DCD      0x40020000
                  |L1.388|
                          DCD      0x40020400
                  |L1.392|
                          DCD      0x40020800
                  |L1.396|
                          DCD      0x4001204c
                  |L1.400|
                          DCD      uhADCConvertedValue
                  |L1.404|
                          DCD      0x40026410

                          AREA ||.bss||, DATA, NOINIT, ALIGN=1

                  uhADCConvertedValue
                          %        10

;*** Start embedded assembler ***

#line 1 "..\\User\\bsp_stm32f4xx\\src\\bsp_adc.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___9_bsp_adc_c_9b6e839a____REV16|
#line 129 "C:\\Keil_v5\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___9_bsp_adc_c_9b6e839a____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___9_bsp_adc_c_9b6e839a____REVSH|
#line 144
|__asm___9_bsp_adc_c_9b6e839a____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
